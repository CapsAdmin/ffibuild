local ffi = require("ffi")
ffi.cdef([[typedef enum GLFWenum{GLFW_VERSION_MAJOR=3,GLFW_VERSION_MINOR=2,GLFW_VERSION_REVISION=0,GLFW_TRUE=1,GLFW_FALSE=0,GLFW_RELEASE=0,GLFW_PRESS=1,GLFW_REPEAT=2,GLFW_KEY_UNKNOWN=-1,GLFW_KEY_SPACE=32,GLFW_KEY_APOSTROPHE=39,GLFW_KEY_COMMA=44,GLFW_KEY_MINUS=45,GLFW_KEY_PERIOD=46,GLFW_KEY_SLASH=47,GLFW_KEY_0=48,GLFW_KEY_1=49,GLFW_KEY_2=50,GLFW_KEY_3=51,GLFW_KEY_4=52,GLFW_KEY_5=53,GLFW_KEY_6=54,GLFW_KEY_7=55,GLFW_KEY_8=56,GLFW_KEY_9=57,GLFW_KEY_SEMICOLON=59,GLFW_KEY_EQUAL=61,GLFW_KEY_A=65,GLFW_KEY_B=66,GLFW_KEY_C=67,GLFW_KEY_D=68,GLFW_KEY_E=69,GLFW_KEY_F=70,GLFW_KEY_G=71,GLFW_KEY_H=72,GLFW_KEY_I=73,GLFW_KEY_J=74,GLFW_KEY_K=75,GLFW_KEY_L=76,GLFW_KEY_M=77,GLFW_KEY_N=78,GLFW_KEY_O=79,GLFW_KEY_P=80,GLFW_KEY_Q=81,GLFW_KEY_R=82,GLFW_KEY_S=83,GLFW_KEY_T=84,GLFW_KEY_U=85,GLFW_KEY_V=86,GLFW_KEY_W=87,GLFW_KEY_X=88,GLFW_KEY_Y=89,GLFW_KEY_Z=90,GLFW_KEY_LEFT_BRACKET=91,GLFW_KEY_BACKSLASH=92,GLFW_KEY_RIGHT_BRACKET=93,GLFW_KEY_GRAVE_ACCENT=96,GLFW_KEY_WORLD_1=161,GLFW_KEY_WORLD_2=162,GLFW_KEY_ESCAPE=256,GLFW_KEY_ENTER=257,GLFW_KEY_TAB=258,GLFW_KEY_BACKSPACE=259,GLFW_KEY_INSERT=260,GLFW_KEY_DELETE=261,GLFW_KEY_RIGHT=262,GLFW_KEY_LEFT=263,GLFW_KEY_DOWN=264,GLFW_KEY_UP=265,GLFW_KEY_PAGE_UP=266,GLFW_KEY_PAGE_DOWN=267,GLFW_KEY_HOME=268,GLFW_KEY_END=269,GLFW_KEY_CAPS_LOCK=280,GLFW_KEY_SCROLL_LOCK=281,GLFW_KEY_NUM_LOCK=282,GLFW_KEY_PRINT_SCREEN=283,GLFW_KEY_PAUSE=284,GLFW_KEY_F1=290,GLFW_KEY_F2=291,GLFW_KEY_F3=292,GLFW_KEY_F4=293,GLFW_KEY_F5=294,GLFW_KEY_F6=295,GLFW_KEY_F7=296,GLFW_KEY_F8=297,GLFW_KEY_F9=298,GLFW_KEY_F10=299,GLFW_KEY_F11=300,GLFW_KEY_F12=301,GLFW_KEY_F13=302,GLFW_KEY_F14=303,GLFW_KEY_F15=304,GLFW_KEY_F16=305,GLFW_KEY_F17=306,GLFW_KEY_F18=307,GLFW_KEY_F19=308,GLFW_KEY_F20=309,GLFW_KEY_F21=310,GLFW_KEY_F22=311,GLFW_KEY_F23=312,GLFW_KEY_F24=313,GLFW_KEY_F25=314,GLFW_KEY_KP_0=320,GLFW_KEY_KP_1=321,GLFW_KEY_KP_2=322,GLFW_KEY_KP_3=323,GLFW_KEY_KP_4=324,GLFW_KEY_KP_5=325,GLFW_KEY_KP_6=326,GLFW_KEY_KP_7=327,GLFW_KEY_KP_8=328,GLFW_KEY_KP_9=329,GLFW_KEY_KP_DECIMAL=330,GLFW_KEY_KP_DIVIDE=331,GLFW_KEY_KP_MULTIPLY=332,GLFW_KEY_KP_SUBTRACT=333,GLFW_KEY_KP_ADD=334,GLFW_KEY_KP_ENTER=335,GLFW_KEY_KP_EQUAL=336,GLFW_KEY_LEFT_SHIFT=340,GLFW_KEY_LEFT_CONTROL=341,GLFW_KEY_LEFT_ALT=342,GLFW_KEY_LEFT_SUPER=343,GLFW_KEY_RIGHT_SHIFT=344,GLFW_KEY_RIGHT_CONTROL=345,GLFW_KEY_RIGHT_ALT=346,GLFW_KEY_RIGHT_SUPER=347,GLFW_KEY_MENU=348,GLFW_KEY_LAST=348,GLFW_MOD_SHIFT=1,GLFW_MOD_CONTROL=2,GLFW_MOD_ALT=4,GLFW_MOD_SUPER=8,GLFW_MOUSE_BUTTON_1=0,GLFW_MOUSE_BUTTON_2=1,GLFW_MOUSE_BUTTON_3=2,GLFW_MOUSE_BUTTON_4=3,GLFW_MOUSE_BUTTON_5=4,GLFW_MOUSE_BUTTON_6=5,GLFW_MOUSE_BUTTON_7=6,GLFW_MOUSE_BUTTON_8=7,GLFW_MOUSE_BUTTON_LAST=7,GLFW_MOUSE_BUTTON_LEFT=0,GLFW_MOUSE_BUTTON_RIGHT=1,GLFW_MOUSE_BUTTON_MIDDLE=2,GLFW_JOYSTICK_1=0,GLFW_JOYSTICK_2=1,GLFW_JOYSTICK_3=2,GLFW_JOYSTICK_4=3,GLFW_JOYSTICK_5=4,GLFW_JOYSTICK_6=5,GLFW_JOYSTICK_7=6,GLFW_JOYSTICK_8=7,GLFW_JOYSTICK_9=8,GLFW_JOYSTICK_10=9,GLFW_JOYSTICK_11=10,GLFW_JOYSTICK_12=11,GLFW_JOYSTICK_13=12,GLFW_JOYSTICK_14=13,GLFW_JOYSTICK_15=14,GLFW_JOYSTICK_16=15,GLFW_JOYSTICK_LAST=15,GLFW_NOT_INITIALIZED=65537,GLFW_NO_CURRENT_CONTEXT=65538,GLFW_INVALID_ENUM=65539,GLFW_INVALID_VALUE=65540,GLFW_OUT_OF_MEMORY=65541,GLFW_API_UNAVAILABLE=65542,GLFW_VERSION_UNAVAILABLE=65543,GLFW_PLATFORM_ERROR=65544,GLFW_FORMAT_UNAVAILABLE=65545,GLFW_NO_WINDOW_CONTEXT=65546,GLFW_FOCUSED=131073,GLFW_ICONIFIED=131074,GLFW_RESIZABLE=131075,GLFW_VISIBLE=131076,GLFW_DECORATED=131077,GLFW_AUTO_ICONIFY=131078,GLFW_FLOATING=131079,GLFW_MAXIMIZED=131080,GLFW_RED_BITS=135169,GLFW_GREEN_BITS=135170,GLFW_BLUE_BITS=135171,GLFW_ALPHA_BITS=135172,GLFW_DEPTH_BITS=135173,GLFW_STENCIL_BITS=135174,GLFW_ACCUM_RED_BITS=135175,GLFW_ACCUM_GREEN_BITS=135176,GLFW_ACCUM_BLUE_BITS=135177,GLFW_ACCUM_ALPHA_BITS=135178,GLFW_AUX_BUFFERS=135179,GLFW_STEREO=135180,GLFW_SAMPLES=135181,GLFW_SRGB_CAPABLE=135182,GLFW_REFRESH_RATE=135183,GLFW_DOUBLEBUFFER=135184,GLFW_CLIENT_API=139265,GLFW_CONTEXT_VERSION_MAJOR=139266,GLFW_CONTEXT_VERSION_MINOR=139267,GLFW_CONTEXT_REVISION=139268,GLFW_CONTEXT_ROBUSTNESS=139269,GLFW_OPENGL_FORWARD_COMPAT=139270,GLFW_OPENGL_DEBUG_CONTEXT=139271,GLFW_OPENGL_PROFILE=139272,GLFW_CONTEXT_RELEASE_BEHAVIOR=139273,GLFW_CONTEXT_NO_ERROR=139274,GLFW_NO_API=0,GLFW_OPENGL_API=196609,GLFW_OPENGL_ES_API=196610,GLFW_NO_ROBUSTNESS=0,GLFW_NO_RESET_NOTIFICATION=200705,GLFW_LOSE_CONTEXT_ON_RESET=200706,GLFW_OPENGL_ANY_PROFILE=0,GLFW_OPENGL_CORE_PROFILE=204801,GLFW_OPENGL_COMPAT_PROFILE=204802,GLFW_CURSOR=208897,GLFW_STICKY_KEYS=208898,GLFW_STICKY_MOUSE_BUTTONS=208899,GLFW_CURSOR_NORMAL=212993,GLFW_CURSOR_HIDDEN=212994,GLFW_CURSOR_DISABLED=212995,GLFW_ANY_RELEASE_BEHAVIOR=0,GLFW_RELEASE_BEHAVIOR_FLUSH=217089,GLFW_RELEASE_BEHAVIOR_NONE=217090,GLFW_ARROW_CURSOR=221185,GLFW_IBEAM_CURSOR=221186,GLFW_CROSSHAIR_CURSOR=221187,GLFW_HAND_CURSOR=221188,GLFW_HRESIZE_CURSOR=221189,GLFW_VRESIZE_CURSOR=221190,GLFW_CONNECTED=262145,GLFW_DISCONNECTED=262146,GLFW_DONT_CARE=-1};
]])
local CLIB = ffi.load(_G.FFI_LIB or "glfw")
local library = {}
library = {
}
library.e = {
	GLFW_VERSION_MAJOR = ffi.cast("enum GLFWenum", "GLFW_VERSION_MAJOR"),
	GLFW_VERSION_MINOR = ffi.cast("enum GLFWenum", "GLFW_VERSION_MINOR"),
	GLFW_VERSION_REVISION = ffi.cast("enum GLFWenum", "GLFW_VERSION_REVISION"),
	GLFW_TRUE = ffi.cast("enum GLFWenum", "GLFW_TRUE"),
	GLFW_FALSE = ffi.cast("enum GLFWenum", "GLFW_FALSE"),
	GLFW_RELEASE = ffi.cast("enum GLFWenum", "GLFW_RELEASE"),
	GLFW_PRESS = ffi.cast("enum GLFWenum", "GLFW_PRESS"),
	GLFW_REPEAT = ffi.cast("enum GLFWenum", "GLFW_REPEAT"),
	GLFW_KEY_UNKNOWN = ffi.cast("enum GLFWenum", "GLFW_KEY_UNKNOWN"),
	GLFW_KEY_SPACE = ffi.cast("enum GLFWenum", "GLFW_KEY_SPACE"),
	GLFW_KEY_APOSTROPHE = ffi.cast("enum GLFWenum", "GLFW_KEY_APOSTROPHE"),
	GLFW_KEY_COMMA = ffi.cast("enum GLFWenum", "GLFW_KEY_COMMA"),
	GLFW_KEY_MINUS = ffi.cast("enum GLFWenum", "GLFW_KEY_MINUS"),
	GLFW_KEY_PERIOD = ffi.cast("enum GLFWenum", "GLFW_KEY_PERIOD"),
	GLFW_KEY_SLASH = ffi.cast("enum GLFWenum", "GLFW_KEY_SLASH"),
	GLFW_KEY_0 = ffi.cast("enum GLFWenum", "GLFW_KEY_0"),
	GLFW_KEY_1 = ffi.cast("enum GLFWenum", "GLFW_KEY_1"),
	GLFW_KEY_2 = ffi.cast("enum GLFWenum", "GLFW_KEY_2"),
	GLFW_KEY_3 = ffi.cast("enum GLFWenum", "GLFW_KEY_3"),
	GLFW_KEY_4 = ffi.cast("enum GLFWenum", "GLFW_KEY_4"),
	GLFW_KEY_5 = ffi.cast("enum GLFWenum", "GLFW_KEY_5"),
	GLFW_KEY_6 = ffi.cast("enum GLFWenum", "GLFW_KEY_6"),
	GLFW_KEY_7 = ffi.cast("enum GLFWenum", "GLFW_KEY_7"),
	GLFW_KEY_8 = ffi.cast("enum GLFWenum", "GLFW_KEY_8"),
	GLFW_KEY_9 = ffi.cast("enum GLFWenum", "GLFW_KEY_9"),
	GLFW_KEY_SEMICOLON = ffi.cast("enum GLFWenum", "GLFW_KEY_SEMICOLON"),
	GLFW_KEY_EQUAL = ffi.cast("enum GLFWenum", "GLFW_KEY_EQUAL"),
	GLFW_KEY_A = ffi.cast("enum GLFWenum", "GLFW_KEY_A"),
	GLFW_KEY_B = ffi.cast("enum GLFWenum", "GLFW_KEY_B"),
	GLFW_KEY_C = ffi.cast("enum GLFWenum", "GLFW_KEY_C"),
	GLFW_KEY_D = ffi.cast("enum GLFWenum", "GLFW_KEY_D"),
	GLFW_KEY_E = ffi.cast("enum GLFWenum", "GLFW_KEY_E"),
	GLFW_KEY_F = ffi.cast("enum GLFWenum", "GLFW_KEY_F"),
	GLFW_KEY_G = ffi.cast("enum GLFWenum", "GLFW_KEY_G"),
	GLFW_KEY_H = ffi.cast("enum GLFWenum", "GLFW_KEY_H"),
	GLFW_KEY_I = ffi.cast("enum GLFWenum", "GLFW_KEY_I"),
	GLFW_KEY_J = ffi.cast("enum GLFWenum", "GLFW_KEY_J"),
	GLFW_KEY_K = ffi.cast("enum GLFWenum", "GLFW_KEY_K"),
	GLFW_KEY_L = ffi.cast("enum GLFWenum", "GLFW_KEY_L"),
	GLFW_KEY_M = ffi.cast("enum GLFWenum", "GLFW_KEY_M"),
	GLFW_KEY_N = ffi.cast("enum GLFWenum", "GLFW_KEY_N"),
	GLFW_KEY_O = ffi.cast("enum GLFWenum", "GLFW_KEY_O"),
	GLFW_KEY_P = ffi.cast("enum GLFWenum", "GLFW_KEY_P"),
	GLFW_KEY_Q = ffi.cast("enum GLFWenum", "GLFW_KEY_Q"),
	GLFW_KEY_R = ffi.cast("enum GLFWenum", "GLFW_KEY_R"),
	GLFW_KEY_S = ffi.cast("enum GLFWenum", "GLFW_KEY_S"),
	GLFW_KEY_T = ffi.cast("enum GLFWenum", "GLFW_KEY_T"),
	GLFW_KEY_U = ffi.cast("enum GLFWenum", "GLFW_KEY_U"),
	GLFW_KEY_V = ffi.cast("enum GLFWenum", "GLFW_KEY_V"),
	GLFW_KEY_W = ffi.cast("enum GLFWenum", "GLFW_KEY_W"),
	GLFW_KEY_X = ffi.cast("enum GLFWenum", "GLFW_KEY_X"),
	GLFW_KEY_Y = ffi.cast("enum GLFWenum", "GLFW_KEY_Y"),
	GLFW_KEY_Z = ffi.cast("enum GLFWenum", "GLFW_KEY_Z"),
	GLFW_KEY_LEFT_BRACKET = ffi.cast("enum GLFWenum", "GLFW_KEY_LEFT_BRACKET"),
	GLFW_KEY_BACKSLASH = ffi.cast("enum GLFWenum", "GLFW_KEY_BACKSLASH"),
	GLFW_KEY_RIGHT_BRACKET = ffi.cast("enum GLFWenum", "GLFW_KEY_RIGHT_BRACKET"),
	GLFW_KEY_GRAVE_ACCENT = ffi.cast("enum GLFWenum", "GLFW_KEY_GRAVE_ACCENT"),
	GLFW_KEY_WORLD_1 = ffi.cast("enum GLFWenum", "GLFW_KEY_WORLD_1"),
	GLFW_KEY_WORLD_2 = ffi.cast("enum GLFWenum", "GLFW_KEY_WORLD_2"),
	GLFW_KEY_ESCAPE = ffi.cast("enum GLFWenum", "GLFW_KEY_ESCAPE"),
	GLFW_KEY_ENTER = ffi.cast("enum GLFWenum", "GLFW_KEY_ENTER"),
	GLFW_KEY_TAB = ffi.cast("enum GLFWenum", "GLFW_KEY_TAB"),
	GLFW_KEY_BACKSPACE = ffi.cast("enum GLFWenum", "GLFW_KEY_BACKSPACE"),
	GLFW_KEY_INSERT = ffi.cast("enum GLFWenum", "GLFW_KEY_INSERT"),
	GLFW_KEY_DELETE = ffi.cast("enum GLFWenum", "GLFW_KEY_DELETE"),
	GLFW_KEY_RIGHT = ffi.cast("enum GLFWenum", "GLFW_KEY_RIGHT"),
	GLFW_KEY_LEFT = ffi.cast("enum GLFWenum", "GLFW_KEY_LEFT"),
	GLFW_KEY_DOWN = ffi.cast("enum GLFWenum", "GLFW_KEY_DOWN"),
	GLFW_KEY_UP = ffi.cast("enum GLFWenum", "GLFW_KEY_UP"),
	GLFW_KEY_PAGE_UP = ffi.cast("enum GLFWenum", "GLFW_KEY_PAGE_UP"),
	GLFW_KEY_PAGE_DOWN = ffi.cast("enum GLFWenum", "GLFW_KEY_PAGE_DOWN"),
	GLFW_KEY_HOME = ffi.cast("enum GLFWenum", "GLFW_KEY_HOME"),
	GLFW_KEY_END = ffi.cast("enum GLFWenum", "GLFW_KEY_END"),
	GLFW_KEY_CAPS_LOCK = ffi.cast("enum GLFWenum", "GLFW_KEY_CAPS_LOCK"),
	GLFW_KEY_SCROLL_LOCK = ffi.cast("enum GLFWenum", "GLFW_KEY_SCROLL_LOCK"),
	GLFW_KEY_NUM_LOCK = ffi.cast("enum GLFWenum", "GLFW_KEY_NUM_LOCK"),
	GLFW_KEY_PRINT_SCREEN = ffi.cast("enum GLFWenum", "GLFW_KEY_PRINT_SCREEN"),
	GLFW_KEY_PAUSE = ffi.cast("enum GLFWenum", "GLFW_KEY_PAUSE"),
	GLFW_KEY_F1 = ffi.cast("enum GLFWenum", "GLFW_KEY_F1"),
	GLFW_KEY_F2 = ffi.cast("enum GLFWenum", "GLFW_KEY_F2"),
	GLFW_KEY_F3 = ffi.cast("enum GLFWenum", "GLFW_KEY_F3"),
	GLFW_KEY_F4 = ffi.cast("enum GLFWenum", "GLFW_KEY_F4"),
	GLFW_KEY_F5 = ffi.cast("enum GLFWenum", "GLFW_KEY_F5"),
	GLFW_KEY_F6 = ffi.cast("enum GLFWenum", "GLFW_KEY_F6"),
	GLFW_KEY_F7 = ffi.cast("enum GLFWenum", "GLFW_KEY_F7"),
	GLFW_KEY_F8 = ffi.cast("enum GLFWenum", "GLFW_KEY_F8"),
	GLFW_KEY_F9 = ffi.cast("enum GLFWenum", "GLFW_KEY_F9"),
	GLFW_KEY_F10 = ffi.cast("enum GLFWenum", "GLFW_KEY_F10"),
	GLFW_KEY_F11 = ffi.cast("enum GLFWenum", "GLFW_KEY_F11"),
	GLFW_KEY_F12 = ffi.cast("enum GLFWenum", "GLFW_KEY_F12"),
	GLFW_KEY_F13 = ffi.cast("enum GLFWenum", "GLFW_KEY_F13"),
	GLFW_KEY_F14 = ffi.cast("enum GLFWenum", "GLFW_KEY_F14"),
	GLFW_KEY_F15 = ffi.cast("enum GLFWenum", "GLFW_KEY_F15"),
	GLFW_KEY_F16 = ffi.cast("enum GLFWenum", "GLFW_KEY_F16"),
	GLFW_KEY_F17 = ffi.cast("enum GLFWenum", "GLFW_KEY_F17"),
	GLFW_KEY_F18 = ffi.cast("enum GLFWenum", "GLFW_KEY_F18"),
	GLFW_KEY_F19 = ffi.cast("enum GLFWenum", "GLFW_KEY_F19"),
	GLFW_KEY_F20 = ffi.cast("enum GLFWenum", "GLFW_KEY_F20"),
	GLFW_KEY_F21 = ffi.cast("enum GLFWenum", "GLFW_KEY_F21"),
	GLFW_KEY_F22 = ffi.cast("enum GLFWenum", "GLFW_KEY_F22"),
	GLFW_KEY_F23 = ffi.cast("enum GLFWenum", "GLFW_KEY_F23"),
	GLFW_KEY_F24 = ffi.cast("enum GLFWenum", "GLFW_KEY_F24"),
	GLFW_KEY_F25 = ffi.cast("enum GLFWenum", "GLFW_KEY_F25"),
	GLFW_KEY_KP_0 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_0"),
	GLFW_KEY_KP_1 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_1"),
	GLFW_KEY_KP_2 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_2"),
	GLFW_KEY_KP_3 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_3"),
	GLFW_KEY_KP_4 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_4"),
	GLFW_KEY_KP_5 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_5"),
	GLFW_KEY_KP_6 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_6"),
	GLFW_KEY_KP_7 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_7"),
	GLFW_KEY_KP_8 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_8"),
	GLFW_KEY_KP_9 = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_9"),
	GLFW_KEY_KP_DECIMAL = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_DECIMAL"),
	GLFW_KEY_KP_DIVIDE = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_DIVIDE"),
	GLFW_KEY_KP_MULTIPLY = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_MULTIPLY"),
	GLFW_KEY_KP_SUBTRACT = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_SUBTRACT"),
	GLFW_KEY_KP_ADD = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_ADD"),
	GLFW_KEY_KP_ENTER = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_ENTER"),
	GLFW_KEY_KP_EQUAL = ffi.cast("enum GLFWenum", "GLFW_KEY_KP_EQUAL"),
	GLFW_KEY_LEFT_SHIFT = ffi.cast("enum GLFWenum", "GLFW_KEY_LEFT_SHIFT"),
	GLFW_KEY_LEFT_CONTROL = ffi.cast("enum GLFWenum", "GLFW_KEY_LEFT_CONTROL"),
	GLFW_KEY_LEFT_ALT = ffi.cast("enum GLFWenum", "GLFW_KEY_LEFT_ALT"),
	GLFW_KEY_LEFT_SUPER = ffi.cast("enum GLFWenum", "GLFW_KEY_LEFT_SUPER"),
	GLFW_KEY_RIGHT_SHIFT = ffi.cast("enum GLFWenum", "GLFW_KEY_RIGHT_SHIFT"),
	GLFW_KEY_RIGHT_CONTROL = ffi.cast("enum GLFWenum", "GLFW_KEY_RIGHT_CONTROL"),
	GLFW_KEY_RIGHT_ALT = ffi.cast("enum GLFWenum", "GLFW_KEY_RIGHT_ALT"),
	GLFW_KEY_RIGHT_SUPER = ffi.cast("enum GLFWenum", "GLFW_KEY_RIGHT_SUPER"),
	GLFW_KEY_MENU = ffi.cast("enum GLFWenum", "GLFW_KEY_MENU"),
	GLFW_KEY_LAST = ffi.cast("enum GLFWenum", "GLFW_KEY_LAST"),
	GLFW_MOD_SHIFT = ffi.cast("enum GLFWenum", "GLFW_MOD_SHIFT"),
	GLFW_MOD_CONTROL = ffi.cast("enum GLFWenum", "GLFW_MOD_CONTROL"),
	GLFW_MOD_ALT = ffi.cast("enum GLFWenum", "GLFW_MOD_ALT"),
	GLFW_MOD_SUPER = ffi.cast("enum GLFWenum", "GLFW_MOD_SUPER"),
	GLFW_MOUSE_BUTTON_1 = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_1"),
	GLFW_MOUSE_BUTTON_2 = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_2"),
	GLFW_MOUSE_BUTTON_3 = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_3"),
	GLFW_MOUSE_BUTTON_4 = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_4"),
	GLFW_MOUSE_BUTTON_5 = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_5"),
	GLFW_MOUSE_BUTTON_6 = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_6"),
	GLFW_MOUSE_BUTTON_7 = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_7"),
	GLFW_MOUSE_BUTTON_8 = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_8"),
	GLFW_MOUSE_BUTTON_LAST = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_LAST"),
	GLFW_MOUSE_BUTTON_LEFT = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_LEFT"),
	GLFW_MOUSE_BUTTON_RIGHT = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_RIGHT"),
	GLFW_MOUSE_BUTTON_MIDDLE = ffi.cast("enum GLFWenum", "GLFW_MOUSE_BUTTON_MIDDLE"),
	GLFW_JOYSTICK_1 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_1"),
	GLFW_JOYSTICK_2 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_2"),
	GLFW_JOYSTICK_3 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_3"),
	GLFW_JOYSTICK_4 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_4"),
	GLFW_JOYSTICK_5 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_5"),
	GLFW_JOYSTICK_6 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_6"),
	GLFW_JOYSTICK_7 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_7"),
	GLFW_JOYSTICK_8 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_8"),
	GLFW_JOYSTICK_9 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_9"),
	GLFW_JOYSTICK_10 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_10"),
	GLFW_JOYSTICK_11 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_11"),
	GLFW_JOYSTICK_12 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_12"),
	GLFW_JOYSTICK_13 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_13"),
	GLFW_JOYSTICK_14 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_14"),
	GLFW_JOYSTICK_15 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_15"),
	GLFW_JOYSTICK_16 = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_16"),
	GLFW_JOYSTICK_LAST = ffi.cast("enum GLFWenum", "GLFW_JOYSTICK_LAST"),
	GLFW_NOT_INITIALIZED = ffi.cast("enum GLFWenum", "GLFW_NOT_INITIALIZED"),
	GLFW_NO_CURRENT_CONTEXT = ffi.cast("enum GLFWenum", "GLFW_NO_CURRENT_CONTEXT"),
	GLFW_INVALID_ENUM = ffi.cast("enum GLFWenum", "GLFW_INVALID_ENUM"),
	GLFW_INVALID_VALUE = ffi.cast("enum GLFWenum", "GLFW_INVALID_VALUE"),
	GLFW_OUT_OF_MEMORY = ffi.cast("enum GLFWenum", "GLFW_OUT_OF_MEMORY"),
	GLFW_API_UNAVAILABLE = ffi.cast("enum GLFWenum", "GLFW_API_UNAVAILABLE"),
	GLFW_VERSION_UNAVAILABLE = ffi.cast("enum GLFWenum", "GLFW_VERSION_UNAVAILABLE"),
	GLFW_PLATFORM_ERROR = ffi.cast("enum GLFWenum", "GLFW_PLATFORM_ERROR"),
	GLFW_FORMAT_UNAVAILABLE = ffi.cast("enum GLFWenum", "GLFW_FORMAT_UNAVAILABLE"),
	GLFW_NO_WINDOW_CONTEXT = ffi.cast("enum GLFWenum", "GLFW_NO_WINDOW_CONTEXT"),
	GLFW_FOCUSED = ffi.cast("enum GLFWenum", "GLFW_FOCUSED"),
	GLFW_ICONIFIED = ffi.cast("enum GLFWenum", "GLFW_ICONIFIED"),
	GLFW_RESIZABLE = ffi.cast("enum GLFWenum", "GLFW_RESIZABLE"),
	GLFW_VISIBLE = ffi.cast("enum GLFWenum", "GLFW_VISIBLE"),
	GLFW_DECORATED = ffi.cast("enum GLFWenum", "GLFW_DECORATED"),
	GLFW_AUTO_ICONIFY = ffi.cast("enum GLFWenum", "GLFW_AUTO_ICONIFY"),
	GLFW_FLOATING = ffi.cast("enum GLFWenum", "GLFW_FLOATING"),
	GLFW_MAXIMIZED = ffi.cast("enum GLFWenum", "GLFW_MAXIMIZED"),
	GLFW_RED_BITS = ffi.cast("enum GLFWenum", "GLFW_RED_BITS"),
	GLFW_GREEN_BITS = ffi.cast("enum GLFWenum", "GLFW_GREEN_BITS"),
	GLFW_BLUE_BITS = ffi.cast("enum GLFWenum", "GLFW_BLUE_BITS"),
	GLFW_ALPHA_BITS = ffi.cast("enum GLFWenum", "GLFW_ALPHA_BITS"),
	GLFW_DEPTH_BITS = ffi.cast("enum GLFWenum", "GLFW_DEPTH_BITS"),
	GLFW_STENCIL_BITS = ffi.cast("enum GLFWenum", "GLFW_STENCIL_BITS"),
	GLFW_ACCUM_RED_BITS = ffi.cast("enum GLFWenum", "GLFW_ACCUM_RED_BITS"),
	GLFW_ACCUM_GREEN_BITS = ffi.cast("enum GLFWenum", "GLFW_ACCUM_GREEN_BITS"),
	GLFW_ACCUM_BLUE_BITS = ffi.cast("enum GLFWenum", "GLFW_ACCUM_BLUE_BITS"),
	GLFW_ACCUM_ALPHA_BITS = ffi.cast("enum GLFWenum", "GLFW_ACCUM_ALPHA_BITS"),
	GLFW_AUX_BUFFERS = ffi.cast("enum GLFWenum", "GLFW_AUX_BUFFERS"),
	GLFW_STEREO = ffi.cast("enum GLFWenum", "GLFW_STEREO"),
	GLFW_SAMPLES = ffi.cast("enum GLFWenum", "GLFW_SAMPLES"),
	GLFW_SRGB_CAPABLE = ffi.cast("enum GLFWenum", "GLFW_SRGB_CAPABLE"),
	GLFW_REFRESH_RATE = ffi.cast("enum GLFWenum", "GLFW_REFRESH_RATE"),
	GLFW_DOUBLEBUFFER = ffi.cast("enum GLFWenum", "GLFW_DOUBLEBUFFER"),
	GLFW_CLIENT_API = ffi.cast("enum GLFWenum", "GLFW_CLIENT_API"),
	GLFW_CONTEXT_VERSION_MAJOR = ffi.cast("enum GLFWenum", "GLFW_CONTEXT_VERSION_MAJOR"),
	GLFW_CONTEXT_VERSION_MINOR = ffi.cast("enum GLFWenum", "GLFW_CONTEXT_VERSION_MINOR"),
	GLFW_CONTEXT_REVISION = ffi.cast("enum GLFWenum", "GLFW_CONTEXT_REVISION"),
	GLFW_CONTEXT_ROBUSTNESS = ffi.cast("enum GLFWenum", "GLFW_CONTEXT_ROBUSTNESS"),
	GLFW_OPENGL_FORWARD_COMPAT = ffi.cast("enum GLFWenum", "GLFW_OPENGL_FORWARD_COMPAT"),
	GLFW_OPENGL_DEBUG_CONTEXT = ffi.cast("enum GLFWenum", "GLFW_OPENGL_DEBUG_CONTEXT"),
	GLFW_OPENGL_PROFILE = ffi.cast("enum GLFWenum", "GLFW_OPENGL_PROFILE"),
	GLFW_CONTEXT_RELEASE_BEHAVIOR = ffi.cast("enum GLFWenum", "GLFW_CONTEXT_RELEASE_BEHAVIOR"),
	GLFW_CONTEXT_NO_ERROR = ffi.cast("enum GLFWenum", "GLFW_CONTEXT_NO_ERROR"),
	GLFW_NO_API = ffi.cast("enum GLFWenum", "GLFW_NO_API"),
	GLFW_OPENGL_API = ffi.cast("enum GLFWenum", "GLFW_OPENGL_API"),
	GLFW_OPENGL_ES_API = ffi.cast("enum GLFWenum", "GLFW_OPENGL_ES_API"),
	GLFW_NO_ROBUSTNESS = ffi.cast("enum GLFWenum", "GLFW_NO_ROBUSTNESS"),
	GLFW_NO_RESET_NOTIFICATION = ffi.cast("enum GLFWenum", "GLFW_NO_RESET_NOTIFICATION"),
	GLFW_LOSE_CONTEXT_ON_RESET = ffi.cast("enum GLFWenum", "GLFW_LOSE_CONTEXT_ON_RESET"),
	GLFW_OPENGL_ANY_PROFILE = ffi.cast("enum GLFWenum", "GLFW_OPENGL_ANY_PROFILE"),
	GLFW_OPENGL_CORE_PROFILE = ffi.cast("enum GLFWenum", "GLFW_OPENGL_CORE_PROFILE"),
	GLFW_OPENGL_COMPAT_PROFILE = ffi.cast("enum GLFWenum", "GLFW_OPENGL_COMPAT_PROFILE"),
	GLFW_CURSOR = ffi.cast("enum GLFWenum", "GLFW_CURSOR"),
	GLFW_STICKY_KEYS = ffi.cast("enum GLFWenum", "GLFW_STICKY_KEYS"),
	GLFW_STICKY_MOUSE_BUTTONS = ffi.cast("enum GLFWenum", "GLFW_STICKY_MOUSE_BUTTONS"),
	GLFW_CURSOR_NORMAL = ffi.cast("enum GLFWenum", "GLFW_CURSOR_NORMAL"),
	GLFW_CURSOR_HIDDEN = ffi.cast("enum GLFWenum", "GLFW_CURSOR_HIDDEN"),
	GLFW_CURSOR_DISABLED = ffi.cast("enum GLFWenum", "GLFW_CURSOR_DISABLED"),
	GLFW_ANY_RELEASE_BEHAVIOR = ffi.cast("enum GLFWenum", "GLFW_ANY_RELEASE_BEHAVIOR"),
	GLFW_RELEASE_BEHAVIOR_FLUSH = ffi.cast("enum GLFWenum", "GLFW_RELEASE_BEHAVIOR_FLUSH"),
	GLFW_RELEASE_BEHAVIOR_NONE = ffi.cast("enum GLFWenum", "GLFW_RELEASE_BEHAVIOR_NONE"),
	GLFW_ARROW_CURSOR = ffi.cast("enum GLFWenum", "GLFW_ARROW_CURSOR"),
	GLFW_IBEAM_CURSOR = ffi.cast("enum GLFWenum", "GLFW_IBEAM_CURSOR"),
	GLFW_CROSSHAIR_CURSOR = ffi.cast("enum GLFWenum", "GLFW_CROSSHAIR_CURSOR"),
	GLFW_HAND_CURSOR = ffi.cast("enum GLFWenum", "GLFW_HAND_CURSOR"),
	GLFW_HRESIZE_CURSOR = ffi.cast("enum GLFWenum", "GLFW_HRESIZE_CURSOR"),
	GLFW_VRESIZE_CURSOR = ffi.cast("enum GLFWenum", "GLFW_VRESIZE_CURSOR"),
	GLFW_CONNECTED = ffi.cast("enum GLFWenum", "GLFW_CONNECTED"),
	GLFW_DISCONNECTED = ffi.cast("enum GLFWenum", "GLFW_DISCONNECTED"),
	GLFW_DONT_CARE = ffi.cast("enum GLFWenum", "GLFW_DONT_CARE"),
}
function library.GetRequiredInstanceExtensions()
	local count = ffi.new("uint32_t[1]")
	local array = CLIB.glfwGetRequiredInstanceExtensions(count)
	local out = {}
	for i = 0, count[0] - 1 do
		table.insert(out, ffi.string(array[i]))
	end
	return out
end

function library.CreateWindowSurface(instance, window, huh)
	local box = ffi.new("struct VkSurfaceKHR_T * [1]")
	local status = CLIB.glfwCreateWindowSurface(instance, window, huh, box)
	if status == "VK_SUCCESS" then
		return box[0]
	end
	return nil, status
end
return library
