       
typedef void (*Win32ThreadFunc)(void* userPtr,void* lsMemory);
typedef void* (*Win32lsMemorySetupFunc)();
typedef bool (*HACD_CallBackFunction)(const char *, double, double, size_t);
 typedef unsigned long int ppu_address_t;

 __attribute__ ((visibility("default"))) void* btActionInterfaceWrapper_new(void* debugDrawCallback,
  void* updateActionCallback);
 __attribute__ ((visibility("default"))) void btActionInterface_debugDraw(void* obj, void* debugDrawer);
 __attribute__ ((visibility("default"))) void btActionInterface_updateAction(void* obj, void* collisionWorld, float deltaTimeStep);
 __attribute__ ((visibility("default"))) void btActionInterface_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btBroadphasePair_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btBroadphasePair_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btBroadphasePair_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btBroadphasePair_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btCollisionObjectPtr_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btCollisionObjectPtr_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btCollisionObjectPtr_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btCollisionObjectPtr_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btIndexedMesh_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btIndexedMesh_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btIndexedMesh_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btIndexedMesh_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btPersistentManifoldPtr_new();
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btPersistentManifoldPtr_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btPersistentManifoldPtr_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btPersistentManifoldPtr_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btPersistentManifoldPtr_size(void* obj);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btPersistentManifoldPtr_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btSoftBodyPtr_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBodyPtr_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBodyPtr_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBodyPtr_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btSoftBody_Anchor_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Anchor_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Anchor_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBody_Anchor_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btSoftBody_ClusterPtr_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_ClusterPtr_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_ClusterPtr_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBody_ClusterPtr_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btSoftBody_Face_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Face_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Face_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBody_Face_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btSoftBody_JointPtr_at(void** obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_JointPtr_push_back(void** obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_JointPtr_resizeNoInitialize(void** obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBody_JointPtr_size(void** obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btSoftBody_Link_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Link_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Link_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Link_set(void* obj, void* val, int index);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBody_Link_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btSoftBody_MaterialPtr_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_MaterialPtr_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_MaterialPtr_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBody_MaterialPtr_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btSoftBody_Node_at(void* obj, int n);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBody_Node_index_of(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Node_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Node_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBody_Node_size(void* obj);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btSoftBody_Tetra_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Tetra_push_back(void* obj, void* val);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btSoftBody_Tetra_resizeNoInitialize(void* obj, int newSize);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btSoftBody_Tetra_size(void* obj);


 __attribute__ ((visibility("default"))) void* btAxisSweep3_new(const void* worldAabbMin, const void* worldAabbMax);
 __attribute__ ((visibility("default"))) void* btAxisSweep3_new2(const void* worldAabbMin, const void* worldAabbMax, unsigned short maxHandles);
 __attribute__ ((visibility("default"))) void* btAxisSweep3_new3(const void* worldAabbMin, const void* worldAabbMax, unsigned short maxHandles, void* pairCache);
 __attribute__ ((visibility("default"))) void* btAxisSweep3_new4(const void* worldAabbMin, const void* worldAabbMax, unsigned short maxHandles, void* pairCache, bool disableRaycastAccelerator);
 __attribute__ ((visibility("default"))) unsigned short btAxisSweep3_addHandle(void* obj, const void* aabbMin, const void* aabbMax, void* pOwner, short collisionFilterGroup, short collisionFilterMask, void* dispatcher, void* multiSapProxy);
 __attribute__ ((visibility("default"))) void* btAxisSweep3_getHandle(void* obj, unsigned short index);
 __attribute__ ((visibility("default"))) unsigned short btAxisSweep3_getNumHandles(void* obj);
 __attribute__ ((visibility("default"))) const void* btAxisSweep3_getOverlappingPairUserCallback(void* obj);
 __attribute__ ((visibility("default"))) void btAxisSweep3_quantize(void* obj, unsigned short* out, const void* point, int isMax);
 __attribute__ ((visibility("default"))) void btAxisSweep3_removeHandle(void* obj, unsigned short handle, void* dispatcher);
 __attribute__ ((visibility("default"))) void btAxisSweep3_setOverlappingPairUserCallback(void* obj, void* pairCallback);
 __attribute__ ((visibility("default"))) bool btAxisSweep3_testAabbOverlap(void* obj, void* proxy0, void* proxy1);
 __attribute__ ((visibility("default"))) void btAxisSweep3_unQuantize(void* obj, void* proxy, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) void btAxisSweep3_updateHandle(void* obj, unsigned short handle, const void* aabbMin, const void* aabbMax, void* dispatcher);
 __attribute__ ((visibility("default"))) void* bt32BitAxisSweep3_new(const void* worldAabbMin, const void* worldAabbMax);
 __attribute__ ((visibility("default"))) void* bt32BitAxisSweep3_new2(const void* worldAabbMin, const void* worldAabbMax, unsigned int maxHandles);
 __attribute__ ((visibility("default"))) void* bt32BitAxisSweep3_new3(const void* worldAabbMin, const void* worldAabbMax, unsigned int maxHandles, void* pairCache);
 __attribute__ ((visibility("default"))) void* bt32BitAxisSweep3_new4(const void* worldAabbMin, const void* worldAabbMax, unsigned int maxHandles, void* pairCache, bool disableRaycastAccelerator);
 __attribute__ ((visibility("default"))) unsigned int bt32BitAxisSweep3_addHandle(void* obj, const void* aabbMin, const void* aabbMax, void* pOwner, short collisionFilterGroup, short collisionFilterMask, void* dispatcher, void* multiSapProxy);
 __attribute__ ((visibility("default"))) void* bt32BitAxisSweep3_getHandle(void* obj, unsigned int index);
 __attribute__ ((visibility("default"))) unsigned int bt32BitAxisSweep3_getNumHandles(void* obj);
 __attribute__ ((visibility("default"))) const void* bt32BitAxisSweep3_getOverlappingPairUserCallback(void* obj);
 __attribute__ ((visibility("default"))) void bt32BitAxisSweep3_quantize(void* obj, unsigned int* out, const void* point, int isMax);
 __attribute__ ((visibility("default"))) void bt32BitAxisSweep3_removeHandle(void* obj, unsigned int handle, void* dispatcher);
 __attribute__ ((visibility("default"))) void bt32BitAxisSweep3_setOverlappingPairUserCallback(void* obj, void* pairCallback);
 __attribute__ ((visibility("default"))) bool bt32BitAxisSweep3_testAabbOverlap(void* obj, void* proxy0, void* proxy1);
 __attribute__ ((visibility("default"))) void bt32BitAxisSweep3_unQuantize(void* obj, void* proxy, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) void bt32BitAxisSweep3_updateHandle(void* obj, unsigned int handle, const void* aabbMin, const void* aabbMax, void* dispatcher);


 __attribute__ ((visibility("default"))) void* btBox2dBox2dCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btBox2dBox2dCollisionAlgorithm_new(const void* ci);
 __attribute__ ((visibility("default"))) void* btBox2dBox2dCollisionAlgorithm_new2(void* mf, const void* ci, const void* body0Wrap, const void* body1Wrap);


 __attribute__ ((visibility("default"))) void* btBox2dShape_new(const void* boxHalfExtents);
 __attribute__ ((visibility("default"))) void* btBox2dShape_new2(float boxHalfExtent);
 __attribute__ ((visibility("default"))) void* btBox2dShape_new3(float boxHalfExtentX, float boxHalfExtentY, float boxHalfExtentZ);
 __attribute__ ((visibility("default"))) void btBox2dShape_getCentroid(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBox2dShape_getHalfExtentsWithMargin(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBox2dShape_getHalfExtentsWithoutMargin(void* obj, void* value);
 __attribute__ ((visibility("default"))) const void* btBox2dShape_getNormals(void* obj);
 __attribute__ ((visibility("default"))) void btBox2dShape_getPlaneEquation(void* obj, void* plane, int i);
 __attribute__ ((visibility("default"))) int btBox2dShape_getVertexCount(void* obj);
 __attribute__ ((visibility("default"))) const void* btBox2dShape_getVertices(void* obj);


 __attribute__ ((visibility("default"))) void* btBoxBoxCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btBoxBoxCollisionAlgorithm_new(const void* ci);
 __attribute__ ((visibility("default"))) void* btBoxBoxCollisionAlgorithm_new2(void* mf, const void* ci, const void* body0Wrap, const void* body1Wrap);


 __attribute__ ((visibility("default"))) void* btBoxBoxDetector_new(const void* box1, const void* box2);
 __attribute__ ((visibility("default"))) const void* btBoxBoxDetector_getBox1(void* obj);
 __attribute__ ((visibility("default"))) const void* btBoxBoxDetector_getBox2(void* obj);
 __attribute__ ((visibility("default"))) void btBoxBoxDetector_setBox1(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btBoxBoxDetector_setBox2(void* obj, const void* value);


 __attribute__ ((visibility("default"))) void* btAABB_new();
 __attribute__ ((visibility("default"))) void* btAABB_new2(const void* V1, const void* V2, const void* V3);
 __attribute__ ((visibility("default"))) void* btAABB_new3(const void* V1, const void* V2, const void* V3, float margin);
 __attribute__ ((visibility("default"))) void* btAABB_new4(const void* other);
 __attribute__ ((visibility("default"))) void* btAABB_new5(const void* other, float margin);
 __attribute__ ((visibility("default"))) void btAABB_appy_transform(void* obj, const void* trans);
 __attribute__ ((visibility("default"))) void btAABB_appy_transform_trans_cache(void* obj, const void* trans);
 __attribute__ ((visibility("default"))) bool btAABB_collide_plane(void* obj, const void* plane);
 __attribute__ ((visibility("default"))) bool btAABB_collide_ray(void* obj, const void* vorigin, const void* vdir);
 __attribute__ ((visibility("default"))) bool btAABB_collide_triangle_exact(void* obj, const void* p1, const void* p2, const void* p3, const void* triangle_plane);
 __attribute__ ((visibility("default"))) void btAABB_copy_with_margin(void* obj, const void* other, float margin);
 __attribute__ ((visibility("default"))) void btAABB_find_intersection(void* obj, const void* other, void* intersection);
 __attribute__ ((visibility("default"))) void btAABB_get_center_extend(void* obj, void* center, void* extend);
 __attribute__ ((visibility("default"))) void btAABB_getMax(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btAABB_getMin(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btAABB_has_collision(void* obj, const void* other);
 __attribute__ ((visibility("default"))) void btAABB_increment_margin(void* obj, float margin);
 __attribute__ ((visibility("default"))) void btAABB_invalidate(void* obj);
 __attribute__ ((visibility("default"))) void btAABB_merge(void* obj, const void* box);
 __attribute__ ((visibility("default"))) bool btAABB_overlapping_trans_cache(void* obj, const void* box, const void* transcache, bool fulltest);
 __attribute__ ((visibility("default"))) bool btAABB_overlapping_trans_conservative(void* obj, const void* box, void* trans1_to_0);
 __attribute__ ((visibility("default"))) bool btAABB_overlapping_trans_conservative2(void* obj, const void* box, const void* trans1_to_0);
 __attribute__ ((visibility("default"))) int btAABB_plane_classify(void* obj, const void* plane);
 __attribute__ ((visibility("default"))) void btAABB_projection_interval(void* obj, const void* direction, float* vmin, float* vmax);
 __attribute__ ((visibility("default"))) void btAABB_setMax(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btAABB_setMin(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btAABB_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btBoxShape_new(const void* boxHalfExtents);
 __attribute__ ((visibility("default"))) void* btBoxShape_new2(float boxHalfExtent);
 __attribute__ ((visibility("default"))) void* btBoxShape_new3(float boxHalfExtentX, float boxHalfExtentY, float boxHalfExtentZ);
 __attribute__ ((visibility("default"))) void btBoxShape_getHalfExtentsWithMargin(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBoxShape_getHalfExtentsWithoutMargin(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBoxShape_getPlaneEquation(void* obj, void* plane, int i);


 __attribute__ ((visibility("default"))) void* btBroadphaseAabbCallbackWrapper_new(void* processCallback);
 __attribute__ ((visibility("default"))) bool btBroadphaseAabbCallback_process(void* obj, const void* proxy);
 __attribute__ ((visibility("default"))) void btBroadphaseAabbCallback_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btBroadphaseRayCallbackWrapper_new(void* processCallback);
 __attribute__ ((visibility("default"))) float btBroadphaseRayCallback_getLambda_max(void* obj);
 __attribute__ ((visibility("default"))) void btBroadphaseRayCallback_getRayDirectionInverse(void* obj, void* value);
 __attribute__ ((visibility("default"))) unsigned int* btBroadphaseRayCallback_getSigns(void* obj);
 __attribute__ ((visibility("default"))) void btBroadphaseRayCallback_setLambda_max(void* obj, float value);
 __attribute__ ((visibility("default"))) void btBroadphaseRayCallback_setRayDirectionInverse(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_aabbTest(void* obj, const void* aabbMin, const void* aabbMax, void* callback);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_calculateOverlappingPairs(void* obj, void* dispatcher);
 __attribute__ ((visibility("default"))) void* btBroadphaseInterface_createProxy(void* obj, const void* aabbMin, const void* aabbMax, int shapeType, void* userPtr, short collisionFilterGroup, short collisionFilterMask, void* dispatcher, void* multiSapProxy);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_destroyProxy(void* obj, void* proxy, void* dispatcher);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_getAabb(void* obj, void* proxy, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_getBroadphaseAabb(void* obj, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) void* btBroadphaseInterface_getOverlappingPairCache(void* obj);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_printStats(void* obj);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_rayTest(void* obj, const void* rayFrom, const void* rayTo, void* rayCallback);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_rayTest2(void* obj, const void* rayFrom, const void* rayTo, void* rayCallback, const void* aabbMin);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_rayTest3(void* obj, const void* rayFrom, const void* rayTo, void* rayCallback, const void* aabbMin, const void* aabbMax);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_resetPool(void* obj, void* dispatcher);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_setAabb(void* obj, void* proxy, const void* aabbMin, const void* aabbMax, void* dispatcher);
 __attribute__ ((visibility("default"))) void btBroadphaseInterface_delete(void* obj);


 __attribute__ ((visibility("default"))) void btBroadphaseProxy_getAabbMax(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBroadphaseProxy_getAabbMin(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btBroadphaseProxy_getClientObject(void* obj);
 __attribute__ ((visibility("default"))) short btBroadphaseProxy_getCollisionFilterGroup(void* obj);
 __attribute__ ((visibility("default"))) short btBroadphaseProxy_getCollisionFilterMask(void* obj);
 __attribute__ ((visibility("default"))) void* btBroadphaseProxy_getMultiSapParentProxy(void* obj);
 __attribute__ ((visibility("default"))) int btBroadphaseProxy_getUid(void* obj);
 __attribute__ ((visibility("default"))) int btBroadphaseProxy_getUniqueId(void* obj);
 __attribute__ ((visibility("default"))) bool btBroadphaseProxy_isCompound(int proxyType);
 __attribute__ ((visibility("default"))) bool btBroadphaseProxy_isConcave(int proxyType);
 __attribute__ ((visibility("default"))) bool btBroadphaseProxy_isConvex(int proxyType);
 __attribute__ ((visibility("default"))) bool btBroadphaseProxy_isConvex2d(int proxyType);
 __attribute__ ((visibility("default"))) bool btBroadphaseProxy_isInfinite(int proxyType);
 __attribute__ ((visibility("default"))) bool btBroadphaseProxy_isNonMoving(int proxyType);
 __attribute__ ((visibility("default"))) bool btBroadphaseProxy_isPolyhedral(int proxyType);
 __attribute__ ((visibility("default"))) bool btBroadphaseProxy_isSoftBody(int proxyType);
 __attribute__ ((visibility("default"))) void btBroadphaseProxy_setAabbMax(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btBroadphaseProxy_setAabbMin(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btBroadphaseProxy_setClientObject(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBroadphaseProxy_setCollisionFilterGroup(void* obj, short value);
 __attribute__ ((visibility("default"))) void btBroadphaseProxy_setCollisionFilterMask(void* obj, short value);
 __attribute__ ((visibility("default"))) void btBroadphaseProxy_setMultiSapParentProxy(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBroadphaseProxy_setUniqueId(void* obj, int value);
 __attribute__ ((visibility("default"))) void btBroadphaseProxy_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btBroadphasePair_new();
 __attribute__ ((visibility("default"))) void* btBroadphasePair_new2(const void* other);
 __attribute__ ((visibility("default"))) void* btBroadphasePair_new3(void* proxy0, void* proxy1);
 __attribute__ ((visibility("default"))) void* btBroadphasePair_getAlgorithm(void* obj);
 __attribute__ ((visibility("default"))) void* btBroadphasePair_getPProxy0(void* obj);
 __attribute__ ((visibility("default"))) void* btBroadphasePair_getPProxy1(void* obj);
 __attribute__ ((visibility("default"))) void btBroadphasePair_setAlgorithm(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBroadphasePair_setPProxy0(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBroadphasePair_setPProxy1(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btBroadphasePair_delete(void* obj);


 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_new();
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_new2(const char* fileName);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_new3(char* memoryBuffer, int len);
 __attribute__ ((visibility("default"))) void bParse_btBulletFile_addDataBlock(void* obj, char* dataBlock);
 __attribute__ ((visibility("default"))) void bParse_btBulletFile_addStruct(void* obj, const char* structType, void* data, int len, void* oldPtr, int code);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getBvhs(void* obj);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getCollisionObjects(void* obj);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getCollisionShapes(void* obj);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getConstraints(void* obj);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getDataBlocks(void* obj);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getDynamicsWorldInfo(void* obj);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getMultiBodies(void* obj);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getRigidBodies(void* obj);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getSoftBodies(void* obj);
 __attribute__ ((visibility("default"))) void* bParse_btBulletFile_getTriangleInfoMaps(void* obj);
 __attribute__ ((visibility("default"))) void bParse_btBulletFile_parse(void* obj, int verboseMode);
 __attribute__ ((visibility("default"))) void bParse_btBulletFile_parseData(void* obj);
 __attribute__ ((visibility("default"))) int bParse_btBulletFile_write(void* obj, const char* fileName);
 __attribute__ ((visibility("default"))) int bParse_btBulletFile_write2(void* obj, const char* fileName, bool fixupPointers);
 __attribute__ ((visibility("default"))) void bParse_btBulletFile_writeDNA(void* obj, FILE* fp);
 __attribute__ ((visibility("default"))) void bParse_btBulletFile_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btBulletWorldImporter_new();
 __attribute__ ((visibility("default"))) void* btBulletWorldImporter_new2(void* world);
 __attribute__ ((visibility("default"))) bool btBulletWorldImporter_convertAllObjects(void* obj, void* file);
 __attribute__ ((visibility("default"))) bool btBulletWorldImporter_loadFile(void* obj, const char* fileName);
 __attribute__ ((visibility("default"))) bool btBulletWorldImporter_loadFile2(void* obj, const char* fileName, const char* preSwapFilenameOut);
 __attribute__ ((visibility("default"))) bool btBulletWorldImporter_loadFileFromMemory(void* obj, char* memoryBuffer, int len);
 __attribute__ ((visibility("default"))) bool btBulletWorldImporter_loadFileFromMemory2(void* obj, void* file);


 __attribute__ ((visibility("default"))) void* btBulletXmlWorldImporter_new(void* world);
 __attribute__ ((visibility("default"))) bool btBulletXmlWorldImporter_loadFile(void* obj, const char* fileName);


 __attribute__ ((visibility("default"))) void* btBvhTriangleMeshShape_new(void* meshInterface, bool useQuantizedAabbCompression);
 __attribute__ ((visibility("default"))) void* btBvhTriangleMeshShape_new2(void* meshInterface, bool useQuantizedAabbCompression, bool buildBvh);
 __attribute__ ((visibility("default"))) void* btBvhTriangleMeshShape_new3(void* meshInterface, bool useQuantizedAabbCompression, const void* bvhAabbMin, const void* bvhAabbMax);
 __attribute__ ((visibility("default"))) void* btBvhTriangleMeshShape_new4(void* meshInterface, bool useQuantizedAabbCompression, const void* bvhAabbMin, const void* bvhAabbMax, bool buildBvh);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_buildOptimizedBvh(void* obj);
 __attribute__ ((visibility("default"))) void* btBvhTriangleMeshShape_getOptimizedBvh(void* obj);
 __attribute__ ((visibility("default"))) bool btBvhTriangleMeshShape_getOwnsBvh(void* obj);
 __attribute__ ((visibility("default"))) void* btBvhTriangleMeshShape_getTriangleInfoMap(void* obj);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_partialRefitTree(void* obj, const void* aabbMin, const void* aabbMax);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_performConvexcast(void* obj, void* callback, const void* boxSource, const void* boxTarget, const void* boxMin, const void* boxMax);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_performRaycast(void* obj, void* callback, const void* raySource, const void* rayTarget);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_refitTree(void* obj, const void* aabbMin, const void* aabbMax);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_serializeSingleBvh(void* obj, void* serializer);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_serializeSingleTriangleInfoMap(void* obj, void* serializer);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_setOptimizedBvh(void* obj, void* bvh);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_setOptimizedBvh2(void* obj, void* bvh, const void* localScaling);
 __attribute__ ((visibility("default"))) void btBvhTriangleMeshShape_setTriangleInfoMap(void* obj, void* triangleInfoMap);
 __attribute__ ((visibility("default"))) bool btBvhTriangleMeshShape_usesQuantizedAabbCompression(void* obj);


 __attribute__ ((visibility("default"))) void* btCapsuleShape_new(float radius, float height);
 __attribute__ ((visibility("default"))) void btCapsuleShape_deSerializeFloat(void* obj, void* dataBuffer);
 __attribute__ ((visibility("default"))) float btCapsuleShape_getHalfHeight(void* obj);
 __attribute__ ((visibility("default"))) float btCapsuleShape_getRadius(void* obj);
 __attribute__ ((visibility("default"))) int btCapsuleShape_getUpAxis(void* obj);
 __attribute__ ((visibility("default"))) void* btCapsuleShapeX_new(float radius, float height);
 __attribute__ ((visibility("default"))) void* btCapsuleShapeZ_new(float radius, float height);


 __attribute__ ((visibility("default"))) bool btCharacterControllerInterface_canJump(void* obj);
 __attribute__ ((visibility("default"))) void btCharacterControllerInterface_jump(void* obj);
 __attribute__ ((visibility("default"))) bool btCharacterControllerInterface_onGround(void* obj);
 __attribute__ ((visibility("default"))) void btCharacterControllerInterface_playerStep(void* obj, void* collisionWorld, float dt);
 __attribute__ ((visibility("default"))) void btCharacterControllerInterface_preStep(void* obj, void* collisionWorld);
 __attribute__ ((visibility("default"))) void btCharacterControllerInterface_reset(void* obj, void* collisionWorld);
 __attribute__ ((visibility("default"))) void btCharacterControllerInterface_setUpInterpolate(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btCharacterControllerInterface_setWalkDirection(void* obj, const void* walkDirection);
 __attribute__ ((visibility("default"))) void btCharacterControllerInterface_setVelocityForTimeInterval(void* obj, const void* velocity, float timeInterval);
 __attribute__ ((visibility("default"))) void btCharacterControllerInterface_warp(void* obj, const void* origin);


 __attribute__ ((visibility("default"))) void* btCollisionAlgorithmConstructionInfo_new();
 __attribute__ ((visibility("default"))) void* btCollisionAlgorithmConstructionInfo_new2(void* dispatcher, int temp);
 __attribute__ ((visibility("default"))) void* btCollisionAlgorithmConstructionInfo_getDispatcher1(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionAlgorithmConstructionInfo_getManifold(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionAlgorithmConstructionInfo_setDispatcher1(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionAlgorithmConstructionInfo_setManifold(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionAlgorithmConstructionInfo_delete(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionAlgorithm_calculateTimeOfImpact(void* obj, void* body0, void* body1, const void* dispatchInfo, void* resultOut);
 __attribute__ ((visibility("default"))) void btCollisionAlgorithm_getAllContactManifolds(void* obj, void* manifoldArray);
 __attribute__ ((visibility("default"))) void btCollisionAlgorithm_processCollision(void* obj, const void* body0Wrap, const void* body1Wrap, const void* dispatchInfo, void* resultOut);
 __attribute__ ((visibility("default"))) void btCollisionAlgorithm_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btCollisionConfiguration_getCollisionAlgorithmCreateFunc(void* obj, int proxyType0, int proxyType1);
 __attribute__ ((visibility("default"))) void* btCollisionConfiguration_getCollisionAlgorithmPool(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionConfiguration_getPersistentManifoldPool(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionConfiguration_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btCollisionAlgorithmCreateFunc_new();
 __attribute__ ((visibility("default"))) void* btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(void* obj, void* __unnamed0, const void* body0Wrap, const void* body1Wrap);
 __attribute__ ((visibility("default"))) bool btCollisionAlgorithmCreateFunc_getSwapped(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionAlgorithmCreateFunc_setSwapped(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btCollisionAlgorithmCreateFunc_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btCollisionDispatcher_new(void* collisionConfiguration);
 __attribute__ ((visibility("default"))) void btCollisionDispatcher_defaultNearCallback(void* collisionPair, void* dispatcher, const void* dispatchInfo);
 __attribute__ ((visibility("default"))) void* btCollisionDispatcher_getCollisionConfiguration(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionDispatcher_getDispatcherFlags(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionDispatcher_getNearCallback(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionDispatcher_registerCollisionCreateFunc(void* obj, int proxyType0, int proxyType1, void* createFunc);
 __attribute__ ((visibility("default"))) void btCollisionDispatcher_setCollisionConfiguration(void* obj, void* config);
 __attribute__ ((visibility("default"))) void btCollisionDispatcher_setDispatcherFlags(void* obj, int flags);
 __attribute__ ((visibility("default"))) void btCollisionDispatcher_setNearCallback(void* obj, void* nearCallback);


 __attribute__ ((visibility("default"))) void* btCollisionObject_new();
 __attribute__ ((visibility("default"))) void btCollisionObject_activate(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionObject_activate2(void* obj, bool forceActivation);
 __attribute__ ((visibility("default"))) int btCollisionObject_calculateSerializeBufferSize(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionObject_checkCollideWith(void* obj, const void* co);
 __attribute__ ((visibility("default"))) bool btCollisionObject_checkCollideWithOverride(void* obj, const void* co);
 __attribute__ ((visibility("default"))) void btCollisionObject_forceActivationState(void* obj, int newState);
 __attribute__ ((visibility("default"))) int btCollisionObject_getActivationState(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionObject_getAnisotropicFriction(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btCollisionObject_getBroadphaseHandle(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionObject_getCcdMotionThreshold(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionObject_getCcdSquareMotionThreshold(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionObject_getCcdSweptSphereRadius(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionObject_getCollisionFlags(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionObject_getCollisionShape(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionObject_getCompanionId(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionObject_getContactProcessingThreshold(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionObject_getDeactivationTime(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionObject_getFriction(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionObject_getHitFraction(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionObject_getInternalType(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionObject_getInterpolationAngularVelocity(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionObject_getInterpolationLinearVelocity(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionObject_getInterpolationWorldTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btCollisionObject_getIslandTag(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionObject_getRestitution(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionObject_getRollingFriction(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionObject_getUserIndex(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionObject_getUserPointer(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionObject_getWorldTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btCollisionObject_hasAnisotropicFriction(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionObject_hasAnisotropicFriction2(void* obj, int frictionMode);
 __attribute__ ((visibility("default"))) bool btCollisionObject_hasContactResponse(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionObject_internalGetExtensionPointer(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionObject_internalSetExtensionPointer(void* obj, void* pointer);
 __attribute__ ((visibility("default"))) bool btCollisionObject_isActive(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionObject_isKinematicObject(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionObject_isStaticObject(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionObject_isStaticOrKinematicObject(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionObject_mergesSimulationIslands(void* obj);
 __attribute__ ((visibility("default"))) const char* btCollisionObject_serialize(void* obj, void* dataBuffer, void* serializer);
 __attribute__ ((visibility("default"))) void btCollisionObject_serializeSingleObject(void* obj, void* serializer);
 __attribute__ ((visibility("default"))) void btCollisionObject_setActivationState(void* obj, int newState);
 __attribute__ ((visibility("default"))) void btCollisionObject_setAnisotropicFriction(void* obj, const void* anisotropicFriction);
 __attribute__ ((visibility("default"))) void btCollisionObject_setAnisotropicFriction2(void* obj, const void* anisotropicFriction, int frictionMode);
 __attribute__ ((visibility("default"))) void btCollisionObject_setBroadphaseHandle(void* obj, void* handle);
 __attribute__ ((visibility("default"))) void btCollisionObject_setCcdMotionThreshold(void* obj, float ccdMotionThreshold);
 __attribute__ ((visibility("default"))) void btCollisionObject_setCcdSweptSphereRadius(void* obj, float radius);
 __attribute__ ((visibility("default"))) void btCollisionObject_setCollisionFlags(void* obj, int flags);
 __attribute__ ((visibility("default"))) void btCollisionObject_setCollisionShape(void* obj, void* collisionShape);
 __attribute__ ((visibility("default"))) void btCollisionObject_setCompanionId(void* obj, int id);
 __attribute__ ((visibility("default"))) void btCollisionObject_setContactProcessingThreshold(void* obj, float contactProcessingThreshold);
 __attribute__ ((visibility("default"))) void btCollisionObject_setDeactivationTime(void* obj, float time);
 __attribute__ ((visibility("default"))) void btCollisionObject_setFriction(void* obj, float frict);
 __attribute__ ((visibility("default"))) void btCollisionObject_setHitFraction(void* obj, float hitFraction);
 __attribute__ ((visibility("default"))) void btCollisionObject_setIgnoreCollisionCheck(void* obj, const void* co, bool ignoreCollisionCheck);
 __attribute__ ((visibility("default"))) void btCollisionObject_setInterpolationAngularVelocity(void* obj, const void* angvel);
 __attribute__ ((visibility("default"))) void btCollisionObject_setInterpolationLinearVelocity(void* obj, const void* linvel);
 __attribute__ ((visibility("default"))) void btCollisionObject_setInterpolationWorldTransform(void* obj, const void* trans);
 __attribute__ ((visibility("default"))) void btCollisionObject_setIslandTag(void* obj, int tag);
 __attribute__ ((visibility("default"))) void btCollisionObject_setRestitution(void* obj, float rest);
 __attribute__ ((visibility("default"))) void btCollisionObject_setRollingFriction(void* obj, float frict);
 __attribute__ ((visibility("default"))) void btCollisionObject_setUserIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void btCollisionObject_setUserPointer(void* obj, void* userPointer);
 __attribute__ ((visibility("default"))) void btCollisionObject_setWorldTransform(void* obj, const void* worldTrans);
 __attribute__ ((visibility("default"))) void btCollisionObject_delete(void* obj);


 __attribute__ ((visibility("default"))) const void* btCollisionObjectWrapper_getCollisionObject(void* obj);
 __attribute__ ((visibility("default"))) const void* btCollisionObjectWrapper_getCollisionShape(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionObjectWrapper_getIndex(void* obj);
 __attribute__ ((visibility("default"))) const void* btCollisionObjectWrapper_getParent(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionObjectWrapper_getPartId(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionObjectWrapper_getWorldTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionObjectWrapper_setCollisionObject(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionObjectWrapper_setIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btCollisionObjectWrapper_setParent(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionObjectWrapper_setPartId(void* obj, int value);
 __attribute__ ((visibility("default"))) void btCollisionObjectWrapper_setShape(void* obj, const void* value);


 __attribute__ ((visibility("default"))) void btCollisionShape_calculateLocalInertia(void* obj, float mass, void* inertia);
 __attribute__ ((visibility("default"))) int btCollisionShape_calculateSerializeBufferSize(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionShape_calculateTemporalAabb(void* obj, const void* curTrans, const void* linvel, const void* angvel, float timeStep, void* temporalAabbMin, void* temporalAabbMax);
 __attribute__ ((visibility("default"))) void btCollisionShape_getAabb(void* obj, const void* t, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) float btCollisionShape_getAngularMotionDisc(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionShape_getAnisotropicRollingFrictionDirection(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionShape_getBoundingSphere(void* obj, void* center, float* radius);
 __attribute__ ((visibility("default"))) float btCollisionShape_getContactBreakingThreshold(void* obj, float defaultContactThresholdFactor);
 __attribute__ ((visibility("default"))) void btCollisionShape_getLocalScaling(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btCollisionShape_getMargin(void* obj);
 __attribute__ ((visibility("default"))) const char* btCollisionShape_getName(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionShape_getShapeType(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionShape_getUserIndex(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionShape_getUserPointer(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionShape_isCompound(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionShape_isConcave(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionShape_isConvex(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionShape_isConvex2d(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionShape_isInfinite(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionShape_isNonMoving(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionShape_isPolyhedral(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionShape_isSoftBody(void* obj);
 __attribute__ ((visibility("default"))) const char* btCollisionShape_serialize(void* obj, void* dataBuffer, void* serializer);
 __attribute__ ((visibility("default"))) void btCollisionShape_serializeSingleShape(void* obj, void* serializer);
 __attribute__ ((visibility("default"))) void btCollisionShape_setLocalScaling(void* obj, const void* scaling);
 __attribute__ ((visibility("default"))) void btCollisionShape_setMargin(void* obj, float margin);
 __attribute__ ((visibility("default"))) void btCollisionShape_setUserIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void btCollisionShape_setUserPointer(void* obj, void* userPtr);
 __attribute__ ((visibility("default"))) void btCollisionShape_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btCollisionWorld_AllHitsRayResultCallback_new(const void* rayFromWorld, const void* rayToWorld);
 __attribute__ ((visibility("default"))) btAlignedObjectArray_const_btCollisionObjectPtr* btCollisionWorld_AllHitsRayResultCallback_getCollisionObjects(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_AllHitsRayResultCallback_getHitFractions(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_AllHitsRayResultCallback_getHitNormalWorld(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_AllHitsRayResultCallback_getHitPointWorld(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_AllHitsRayResultCallback_getRayFromWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_AllHitsRayResultCallback_getRayToWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_AllHitsRayResultCallback_setRayFromWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_AllHitsRayResultCallback_setRayToWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_ClosestConvexResultCallback_new(const void* convexFromWorld, const void* convexToWorld);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestConvexResultCallback_getConvexFromWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestConvexResultCallback_getConvexToWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) const void* btCollisionWorld_ClosestConvexResultCallback_getHitCollisionObject(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestConvexResultCallback_getHitNormalWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestConvexResultCallback_getHitPointWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestConvexResultCallback_setConvexFromWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestConvexResultCallback_setConvexToWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestConvexResultCallback_setHitCollisionObject(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestConvexResultCallback_setHitNormalWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestConvexResultCallback_setHitPointWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_ClosestRayResultCallback_new(const void* rayFromWorld, const void* rayToWorld);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestRayResultCallback_getHitNormalWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestRayResultCallback_getHitPointWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestRayResultCallback_getRayFromWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestRayResultCallback_getRayToWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestRayResultCallback_setHitNormalWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestRayResultCallback_setHitPointWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestRayResultCallback_setRayFromWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ClosestRayResultCallback_setRayToWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_ContactResultCallbackWrapper_new(
  void* addSingleResultCallback,
  void* needsCollisionCallback);
 __attribute__ ((visibility("default"))) bool btCollisionWorld_ContactResultCallbackWrapper_needsCollision(void* obj, void* proxy0);
 __attribute__ ((visibility("default"))) float btCollisionWorld_ContactResultCallback_addSingleResult(void* obj, void* cp, const void* colObj0Wrap, int partId0, int index0, const void* colObj1Wrap, int partId1, int index1);
 __attribute__ ((visibility("default"))) short btCollisionWorld_ContactResultCallback_getCollisionFilterGroup(void* obj);
 __attribute__ ((visibility("default"))) short btCollisionWorld_ContactResultCallback_getCollisionFilterMask(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionWorld_ContactResultCallback_needsCollision(void* obj, void* proxy0);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ContactResultCallback_setCollisionFilterGroup(void* obj, short value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ContactResultCallback_setCollisionFilterMask(void* obj, short value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ContactResultCallback_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_ConvexResultCallbackWrapper_new(
  void* addSingleResultCallback,
  void* needsCollisionCallback);
 __attribute__ ((visibility("default"))) bool btCollisionWorld_ConvexResultCallbackWrapper_needsCollision(void* obj, void* proxy0);
 __attribute__ ((visibility("default"))) float btCollisionWorld_ConvexResultCallback_addSingleResult(void* obj, void* convexResult, bool normalInWorldSpace);
 __attribute__ ((visibility("default"))) float btCollisionWorld_ConvexResultCallback_getClosestHitFraction(void* obj);
 __attribute__ ((visibility("default"))) short btCollisionWorld_ConvexResultCallback_getCollisionFilterGroup(void* obj);
 __attribute__ ((visibility("default"))) short btCollisionWorld_ConvexResultCallback_getCollisionFilterMask(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionWorld_ConvexResultCallback_hasHit(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionWorld_ConvexResultCallback_needsCollision(void* obj, void* proxy0);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ConvexResultCallback_setClosestHitFraction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ConvexResultCallback_setCollisionFilterGroup(void* obj, short value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ConvexResultCallback_setCollisionFilterMask(void* obj, short value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_ConvexResultCallback_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_LocalConvexResult_new(const void* hitCollisionObject, void* localShapeInfo, const void* hitNormalLocal, const void* hitPointLocal, float hitFraction);
 __attribute__ ((visibility("default"))) const void* btCollisionWorld_LocalConvexResult_getHitCollisionObject(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionWorld_LocalConvexResult_getHitFraction(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalConvexResult_getHitNormalLocal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalConvexResult_getHitPointLocal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_LocalConvexResult_getLocalShapeInfo(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalConvexResult_setHitCollisionObject(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalConvexResult_setHitFraction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalConvexResult_setHitNormalLocal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalConvexResult_setHitPointLocal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalConvexResult_setLocalShapeInfo(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalConvexResult_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_LocalRayResult_new(const void* collisionObject, void* localShapeInfo, const void* hitNormalLocal, float hitFraction);
 __attribute__ ((visibility("default"))) const void* btCollisionWorld_LocalRayResult_getCollisionObject(void* obj);
 __attribute__ ((visibility("default"))) float btCollisionWorld_LocalRayResult_getHitFraction(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalRayResult_getHitNormalLocal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_LocalRayResult_getLocalShapeInfo(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalRayResult_setCollisionObject(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalRayResult_setHitFraction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalRayResult_setHitNormalLocal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalRayResult_setLocalShapeInfo(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalRayResult_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_LocalShapeInfo_new();
 __attribute__ ((visibility("default"))) int btCollisionWorld_LocalShapeInfo_getShapePart(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionWorld_LocalShapeInfo_getTriangleIndex(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalShapeInfo_setShapePart(void* obj, int value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalShapeInfo_setTriangleIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_LocalShapeInfo_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_RayResultCallbackWrapper_new(
  void* addSingleResultCallback,
  void* needsCollisionCallback);
 __attribute__ ((visibility("default"))) bool btCollisionWorld_RayResultCallbackWrapper_needsCollision(void* obj, void* proxy0);
 __attribute__ ((visibility("default"))) float btCollisionWorld_RayResultCallback_addSingleResult(void* obj, void* rayResult, bool normalInWorldSpace);
 __attribute__ ((visibility("default"))) float btCollisionWorld_RayResultCallback_getClosestHitFraction(void* obj);
 __attribute__ ((visibility("default"))) short btCollisionWorld_RayResultCallback_getCollisionFilterGroup(void* obj);
 __attribute__ ((visibility("default"))) short btCollisionWorld_RayResultCallback_getCollisionFilterMask(void* obj);
 __attribute__ ((visibility("default"))) const void* btCollisionWorld_RayResultCallback_getCollisionObject(void* obj);
 __attribute__ ((visibility("default"))) unsigned int btCollisionWorld_RayResultCallback_getFlags(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionWorld_RayResultCallback_hasHit(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionWorld_RayResultCallback_needsCollision(void* obj, void* proxy0);
 __attribute__ ((visibility("default"))) void btCollisionWorld_RayResultCallback_setClosestHitFraction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_RayResultCallback_setCollisionFilterGroup(void* obj, short value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_RayResultCallback_setCollisionFilterMask(void* obj, short value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_RayResultCallback_setCollisionObject(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_RayResultCallback_setFlags(void* obj, unsigned int value);
 __attribute__ ((visibility("default"))) void btCollisionWorld_RayResultCallback_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_new(void* dispatcher, void* broadphasePairCache, void* collisionConfiguration);
 __attribute__ ((visibility("default"))) void btCollisionWorld_addCollisionObject(void* obj, void* collisionObject);
 __attribute__ ((visibility("default"))) void btCollisionWorld_addCollisionObject2(void* obj, void* collisionObject, short collisionFilterGroup);
 __attribute__ ((visibility("default"))) void btCollisionWorld_addCollisionObject3(void* obj, void* collisionObject, short collisionFilterGroup, short collisionFilterMask);
 __attribute__ ((visibility("default"))) void btCollisionWorld_computeOverlappingPairs(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_contactPairTest(void* obj, void* colObjA, void* colObjB, void* resultCallback);
 __attribute__ ((visibility("default"))) void btCollisionWorld_contactTest(void* obj, void* colObj, void* resultCallback);
 __attribute__ ((visibility("default"))) void btCollisionWorld_convexSweepTest(void* obj, const void* castShape, const void* from, const void* to, void* resultCallback);
 __attribute__ ((visibility("default"))) void btCollisionWorld_convexSweepTest2(void* obj, const void* castShape, const void* from, const void* to, void* resultCallback, float allowedCcdPenetration);
 __attribute__ ((visibility("default"))) void btCollisionWorld_debugDrawObject(void* obj, const void* worldTransform, const void* shape, const void* color);
 __attribute__ ((visibility("default"))) void btCollisionWorld_debugDrawWorld(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_getBroadphase(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_getCollisionObjectArray(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_getDebugDrawer(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_getDispatcher(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_getDispatchInfo(void* obj);
 __attribute__ ((visibility("default"))) bool btCollisionWorld_getForceUpdateAllAabbs(void* obj);
 __attribute__ ((visibility("default"))) int btCollisionWorld_getNumCollisionObjects(void* obj);
 __attribute__ ((visibility("default"))) void* btCollisionWorld_getPairCache(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_objectQuerySingle(const void* castShape, const void* rayFromTrans, const void* rayToTrans, void* collisionObject, const void* collisionShape, const void* colObjWorldTransform, void* resultCallback, float allowedPenetration);
 __attribute__ ((visibility("default"))) void btCollisionWorld_objectQuerySingleInternal(const void* castShape, const void* convexFromTrans, const void* convexToTrans, const void* colObjWrap, void* resultCallback, float allowedPenetration);
 __attribute__ ((visibility("default"))) void btCollisionWorld_performDiscreteCollisionDetection(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_rayTest(void* obj, const void* rayFromWorld, const void* rayToWorld, void* resultCallback);
 __attribute__ ((visibility("default"))) void btCollisionWorld_rayTestSingle(const void* rayFromTrans, const void* rayToTrans, void* collisionObject, const void* collisionShape, const void* colObjWorldTransform, void* resultCallback);
 __attribute__ ((visibility("default"))) void btCollisionWorld_rayTestSingleInternal(const void* rayFromTrans, const void* rayToTrans, const void* collisionObjectWrap, void* resultCallback);
 __attribute__ ((visibility("default"))) void btCollisionWorld_removeCollisionObject(void* obj, void* collisionObject);
 __attribute__ ((visibility("default"))) void btCollisionWorld_serialize(void* obj, void* serializer);
 __attribute__ ((visibility("default"))) void btCollisionWorld_setBroadphase(void* obj, void* pairCache);
 __attribute__ ((visibility("default"))) void btCollisionWorld_setDebugDrawer(void* obj, void* debugDrawer);
 __attribute__ ((visibility("default"))) void btCollisionWorld_setForceUpdateAllAabbs(void* obj, bool forceUpdateAllAabbs);
 __attribute__ ((visibility("default"))) void btCollisionWorld_updateAabbs(void* obj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_updateSingleAabb(void* obj, void* colObj);
 __attribute__ ((visibility("default"))) void btCollisionWorld_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btCompoundCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btCompoundCollisionAlgorithm_SwappedCreateFunc_new();
 __attribute__ ((visibility("default"))) void* btCompoundCollisionAlgorithm_new(const void* ci, const void* body0Wrap, const void* body1Wrap, bool isSwapped);
 __attribute__ ((visibility("default"))) void* btCompoundCollisionAlgorithm_getChildAlgorithm(void* obj, int n);


 __attribute__ ((visibility("default"))) void* btCompoundCompoundCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc_new();
 __attribute__ ((visibility("default"))) void* btCompoundCompoundCollisionAlgorithm_new(const void* ci, const void* body0Wrap, const void* body1Wrap, bool isSwapped);


 __attribute__ ((visibility("default"))) void* btCompoundFromGImpact_btCreateCompoundFromGimpactShape(const void* gimpactMesh, float depth);


 __attribute__ ((visibility("default"))) float btCompoundShapeChild_getChildMargin(void* obj);
 __attribute__ ((visibility("default"))) void* btCompoundShapeChild_getChildShape(void* obj);
 __attribute__ ((visibility("default"))) int btCompoundShapeChild_getChildShapeType(void* obj);
 __attribute__ ((visibility("default"))) void* btCompoundShapeChild_getNode(void* obj);
 __attribute__ ((visibility("default"))) void btCompoundShapeChild_getTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCompoundShapeChild_setChildMargin(void* obj, float value);
 __attribute__ ((visibility("default"))) void btCompoundShapeChild_setChildShape(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCompoundShapeChild_setChildShapeType(void* obj, int value);
 __attribute__ ((visibility("default"))) void btCompoundShapeChild_setNode(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCompoundShapeChild_setTransform(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btCompoundShapeChild_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btCompoundShape_new();
 __attribute__ ((visibility("default"))) void* btCompoundShape_new2(bool enableDynamicAabbTree);
 __attribute__ ((visibility("default"))) void* btCompoundShape_new3(bool enableDynamicAabbTree, int initialChildCapacity);
 __attribute__ ((visibility("default"))) void btCompoundShape_addChildShape(void* obj, const void* localTransform, void* shape);
 __attribute__ ((visibility("default"))) void btCompoundShape_calculatePrincipalAxisTransform(void* obj, float* masses, void* principal, void* inertia);
 __attribute__ ((visibility("default"))) void btCompoundShape_createAabbTreeFromChildren(void* obj);
 __attribute__ ((visibility("default"))) void* btCompoundShape_getChildList(void* obj);
 __attribute__ ((visibility("default"))) void* btCompoundShape_getChildShape(void* obj, int index);
 __attribute__ ((visibility("default"))) void btCompoundShape_getChildTransform(void* obj, int index, void* value);
 __attribute__ ((visibility("default"))) void* btCompoundShape_getDynamicAabbTree(void* obj);
 __attribute__ ((visibility("default"))) int btCompoundShape_getNumChildShapes(void* obj);
 __attribute__ ((visibility("default"))) int btCompoundShape_getUpdateRevision(void* obj);
 __attribute__ ((visibility("default"))) void btCompoundShape_recalculateLocalAabb(void* obj);
 __attribute__ ((visibility("default"))) void btCompoundShape_removeChildShape(void* obj, void* shape);
 __attribute__ ((visibility("default"))) void btCompoundShape_removeChildShapeByIndex(void* obj, int childShapeindex);
 __attribute__ ((visibility("default"))) void btCompoundShape_updateChildTransform(void* obj, int childIndex, const void* newChildTransform);
 __attribute__ ((visibility("default"))) void btCompoundShape_updateChildTransform2(void* obj, int childIndex, const void* newChildTransform, bool shouldRecalculateLocalAabb);


 __attribute__ ((visibility("default"))) void btConcaveShape_processAllTriangles(void* obj, void* callback, const void* aabbMin, const void* aabbMax);


 __attribute__ ((visibility("default"))) void* btConeShape_new(float radius, float height);
 __attribute__ ((visibility("default"))) int btConeShape_getConeUpIndex(void* obj);
 __attribute__ ((visibility("default"))) float btConeShape_getHeight(void* obj);
 __attribute__ ((visibility("default"))) float btConeShape_getRadius(void* obj);
 __attribute__ ((visibility("default"))) void btConeShape_setConeUpIndex(void* obj, int upIndex);
 __attribute__ ((visibility("default"))) void btConeShape_setHeight(void* obj, float height);
 __attribute__ ((visibility("default"))) void btConeShape_setRadius(void* obj, float radius);
 __attribute__ ((visibility("default"))) void* btConeShapeX_new(float radius, float height);
 __attribute__ ((visibility("default"))) void* btConeShapeZ_new(float radius, float height);


 __attribute__ ((visibility("default"))) void* btConeTwistConstraint_new(void* rbA, void* rbB, const void* rbAFrame, const void* rbBFrame);
 __attribute__ ((visibility("default"))) void* btConeTwistConstraint_new2(void* rbA, const void* rbAFrame);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_calcAngleInfo(void* obj);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_calcAngleInfo2(void* obj, const void* transA, const void* transB, const void* invInertiaWorldA, const void* invInertiaWorldB);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_enableMotor(void* obj, bool b);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_getAFrame(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btConeTwistConstraint_getAngularOnly(void* obj);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_getBFrame(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getBiasFactor(void* obj);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getDamping(void* obj);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getFixThresh(void* obj);
 __attribute__ ((visibility("default"))) int btConeTwistConstraint_getFlags(void* obj);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_getFrameOffsetA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_getFrameOffsetB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_getInfo1NonVirtual(void* obj, void* info);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_getInfo2NonVirtual(void* obj, void* info, const void* transA, const void* transB, const void* invInertiaWorldA, const void* invInertiaWorldB);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getLimit(void* obj, int limitIndex);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getLimitSoftness(void* obj);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getMaxMotorImpulse(void* obj);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_getMotorTarget(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_GetPointForAngle(void* obj, float fAngleInRadians, float fLength, void* value);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getRelaxationFactor(void* obj);
 __attribute__ ((visibility("default"))) int btConeTwistConstraint_getSolveSwingLimit(void* obj);
 __attribute__ ((visibility("default"))) int btConeTwistConstraint_getSolveTwistLimit(void* obj);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getSwingSpan1(void* obj);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getSwingSpan2(void* obj);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getTwistAngle(void* obj);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getTwistLimitSign(void* obj);
 __attribute__ ((visibility("default"))) float btConeTwistConstraint_getTwistSpan(void* obj);
 __attribute__ ((visibility("default"))) bool btConeTwistConstraint_isMaxMotorImpulseNormalized(void* obj);
 __attribute__ ((visibility("default"))) bool btConeTwistConstraint_isMotorEnabled(void* obj);
 __attribute__ ((visibility("default"))) bool btConeTwistConstraint_isPastSwingLimit(void* obj);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setAngularOnly(void* obj, bool angularOnly);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setDamping(void* obj, float damping);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setFixThresh(void* obj, float fixThresh);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setFrames(void* obj, const void* frameA, const void* frameB);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setLimit(void* obj, int limitIndex, float limitValue);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setLimit2(void* obj, float _swingSpan1, float _swingSpan2, float _twistSpan);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setLimit3(void* obj, float _swingSpan1, float _swingSpan2, float _twistSpan, float _softness);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setLimit4(void* obj, float _swingSpan1, float _swingSpan2, float _twistSpan, float _softness, float _biasFactor);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setLimit5(void* obj, float _swingSpan1, float _swingSpan2, float _twistSpan, float _softness, float _biasFactor, float _relaxationFactor);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setMaxMotorImpulse(void* obj, float maxMotorImpulse);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setMaxMotorImpulseNormalized(void* obj, float maxMotorImpulse);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setMotorTarget(void* obj, const void* q);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_setMotorTargetInConstraintSpace(void* obj, const void* q);
 __attribute__ ((visibility("default"))) void btConeTwistConstraint_updateRHS(void* obj, float timeStep);


 __attribute__ ((visibility("default"))) void btConstraintSolver_allSolved(void* obj, const void* __unnamed0, void* __unnamed1);
 __attribute__ ((visibility("default"))) int btConstraintSolver_getSolverType(void* obj);
 __attribute__ ((visibility("default"))) void btConstraintSolver_prepareSolve(void* obj, int __unnamed0, int __unnamed1);
 __attribute__ ((visibility("default"))) void btConstraintSolver_reset(void* obj);
 __attribute__ ((visibility("default"))) float btConstraintSolver_solveGroup(void* obj, void** bodies, int numBodies, void** manifold, int numManifolds, void** constraints, int numConstraints, const void* info, void* debugDrawer, void* dispatcher);
 __attribute__ ((visibility("default"))) void btConstraintSolver_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btContactConstraint_getContactManifold(void* obj);
 __attribute__ ((visibility("default"))) void btContactConstraint_setContactManifold(void* obj, void* contactManifold);


 __attribute__ ((visibility("default"))) void* btContactSolverInfoData_new();
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getDamping(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getErp(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getErp2(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getFriction(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getGlobalCfm(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getLinearSlop(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getMaxErrorReduction(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getMaxGyroscopicForce(void* obj);
 __attribute__ ((visibility("default"))) int btContactSolverInfoData_getMinimumSolverBatchSize(void* obj);
 __attribute__ ((visibility("default"))) int btContactSolverInfoData_getNumIterations(void* obj);
 __attribute__ ((visibility("default"))) int btContactSolverInfoData_getRestingContactRestitutionThreshold(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getRestitution(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getSingleAxisRollingFrictionThreshold(void* obj);
 __attribute__ ((visibility("default"))) int btContactSolverInfoData_getSolverMode(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getSor(void* obj);
 __attribute__ ((visibility("default"))) int btContactSolverInfoData_getSplitImpulse(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getSplitImpulsePenetrationThreshold(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getSplitImpulseTurnErp(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getTau(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getTimeStep(void* obj);
 __attribute__ ((visibility("default"))) float btContactSolverInfoData_getWarmstartingFactor(void* obj);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setErp(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setErp2(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setFriction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setGlobalCfm(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setLinearSlop(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setMaxErrorReduction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setMaxGyroscopicForce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setMinimumSolverBatchSize(void* obj, int value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setNumIterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setRestingContactRestitutionThreshold(void* obj, int value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setRestitution(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setSingleAxisRollingFrictionThreshold(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setSolverMode(void* obj, int value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setSor(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setSplitImpulse(void* obj, int value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setSplitImpulsePenetrationThreshold(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setSplitImpulseTurnErp(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setTau(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setTimeStep(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_setWarmstartingFactor(void* obj, float value);
 __attribute__ ((visibility("default"))) void btContactSolverInfoData_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btContactSolverInfo_new();


 __attribute__ ((visibility("default"))) void* btContinuousConvexCollision_new(const void* shapeA, const void* shapeB, void* simplexSolver, void* penetrationDepthSolver);
 __attribute__ ((visibility("default"))) void* btContinuousConvexCollision_new2(const void* shapeA, const void* plane);


 __attribute__ ((visibility("default"))) void* btConvex2dConvex2dAlgorithm_CreateFunc_new(void* simplexSolver, void* pdSolver);
 __attribute__ ((visibility("default"))) int btConvex2dConvex2dAlgorithm_CreateFunc_getMinimumPointsPerturbationThreshold(void* obj);
 __attribute__ ((visibility("default"))) int btConvex2dConvex2dAlgorithm_CreateFunc_getNumPerturbationIterations(void* obj);
 __attribute__ ((visibility("default"))) void* btConvex2dConvex2dAlgorithm_CreateFunc_getPdSolver(void* obj);
 __attribute__ ((visibility("default"))) void* btConvex2dConvex2dAlgorithm_CreateFunc_getSimplexSolver(void* obj);
 __attribute__ ((visibility("default"))) void btConvex2dConvex2dAlgorithm_CreateFunc_setMinimumPointsPerturbationThreshold(void* obj, int value);
 __attribute__ ((visibility("default"))) void btConvex2dConvex2dAlgorithm_CreateFunc_setNumPerturbationIterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void btConvex2dConvex2dAlgorithm_CreateFunc_setPdSolver(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvex2dConvex2dAlgorithm_CreateFunc_setSimplexSolver(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btConvex2dConvex2dAlgorithm_new(void* mf, const void* ci, const void* body0Wrap, const void* body1Wrap, void* simplexSolver, void* pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold);
 __attribute__ ((visibility("default"))) const void* btConvex2dConvex2dAlgorithm_getManifold(void* obj);
 __attribute__ ((visibility("default"))) void btConvex2dConvex2dAlgorithm_setLowLevelOfDetail(void* obj, bool useLowLevel);


 __attribute__ ((visibility("default"))) void* btConvex2dShape_new(void* convexChildShape);
 __attribute__ ((visibility("default"))) void* btConvex2dShape_getChildShape(void* obj);


 __attribute__ ((visibility("default"))) void* btConvexCast_CastResult_new();
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_DebugDraw(void* obj, float fraction);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_drawCoordSystem(void* obj, const void* trans);
 __attribute__ ((visibility("default"))) float btConvexCast_CastResult_getAllowedPenetration(void* obj);
 __attribute__ ((visibility("default"))) void* btConvexCast_CastResult_getDebugDrawer(void* obj);
 __attribute__ ((visibility("default"))) float btConvexCast_CastResult_getFraction(void* obj);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_getHitPoint(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_getHitTransformA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_getHitTransformB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_getNormal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_reportFailure(void* obj, int errNo, int numIterations);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_setAllowedPenetration(void* obj, float value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_setDebugDrawer(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_setFraction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_setHitPoint(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_setHitTransformA(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_setHitTransformB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_setNormal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btConvexCast_CastResult_delete(void* obj);
 __attribute__ ((visibility("default"))) bool btConvexCast_calcTimeOfImpact(void* obj, const void* fromA, const void* toA, const void* fromB, const void* toB, void* result);
 __attribute__ ((visibility("default"))) void btConvexCast_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btConvexTriangleCallback_new(void* dispatcher, const void* body0Wrap, const void* body1Wrap, bool isSwapped);
 __attribute__ ((visibility("default"))) void btConvexTriangleCallback_clearCache(void* obj);
 __attribute__ ((visibility("default"))) void btConvexTriangleCallback_clearWrapperData(void* obj);
 __attribute__ ((visibility("default"))) void btConvexTriangleCallback_getAabbMax(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexTriangleCallback_getAabbMin(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btConvexTriangleCallback_getManifoldPtr(void* obj);
 __attribute__ ((visibility("default"))) int btConvexTriangleCallback_getTriangleCount(void* obj);
 __attribute__ ((visibility("default"))) void btConvexTriangleCallback_setManifoldPtr(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexTriangleCallback_setTimeStepAndCounters(void* obj, float collisionMarginTriangle, const void* dispatchInfo, const void* convexBodyWrap, const void* triBodyWrap, void* resultOut);
 __attribute__ ((visibility("default"))) void btConvexTriangleCallback_setTriangleCount(void* obj, int value);
 __attribute__ ((visibility("default"))) void* btConvexConcaveCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btConvexConcaveCollisionAlgorithm_SwappedCreateFunc_new();
 __attribute__ ((visibility("default"))) void* btConvexConcaveCollisionAlgorithm_new(const void* ci, const void* body0Wrap, const void* body1Wrap, bool isSwapped);
 __attribute__ ((visibility("default"))) void btConvexConcaveCollisionAlgorithm_clearCache(void* obj);


 __attribute__ ((visibility("default"))) void* btConvexConvexAlgorithm_CreateFunc_new(void* simplexSolver, void* pdSolver);
 __attribute__ ((visibility("default"))) int btConvexConvexAlgorithm_CreateFunc_getMinimumPointsPerturbationThreshold(void* obj);
 __attribute__ ((visibility("default"))) int btConvexConvexAlgorithm_CreateFunc_getNumPerturbationIterations(void* obj);
 __attribute__ ((visibility("default"))) void* btConvexConvexAlgorithm_CreateFunc_getPdSolver(void* obj);
 __attribute__ ((visibility("default"))) void* btConvexConvexAlgorithm_CreateFunc_getSimplexSolver(void* obj);
 __attribute__ ((visibility("default"))) void btConvexConvexAlgorithm_CreateFunc_setMinimumPointsPerturbationThreshold(void* obj, int value);
 __attribute__ ((visibility("default"))) void btConvexConvexAlgorithm_CreateFunc_setNumPerturbationIterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void btConvexConvexAlgorithm_CreateFunc_setPdSolver(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexConvexAlgorithm_CreateFunc_setSimplexSolver(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btConvexConvexAlgorithm_new(void* mf, const void* ci, const void* body0Wrap, const void* body1Wrap, void* simplexSolver, void* pdSolver, int numPerturbationIterations, int minimumPointsPerturbationThreshold);
 __attribute__ ((visibility("default"))) const void* btConvexConvexAlgorithm_getManifold(void* obj);
 __attribute__ ((visibility("default"))) void btConvexConvexAlgorithm_setLowLevelOfDetail(void* obj, bool useLowLevel);


 __attribute__ ((visibility("default"))) void* btConvexHullShape_new();
 __attribute__ ((visibility("default"))) void* btConvexHullShape_new2(const float* points);
 __attribute__ ((visibility("default"))) void* btConvexHullShape_new3(const float* points, int numPoints);
 __attribute__ ((visibility("default"))) void* btConvexHullShape_new4(const float* points, int numPoints, int stride);
 __attribute__ ((visibility("default"))) void btConvexHullShape_addPoint(void* obj, const void* point);
 __attribute__ ((visibility("default"))) void btConvexHullShape_addPoint2(void* obj, const void* point, bool recalculateLocalAabb);
 __attribute__ ((visibility("default"))) int btConvexHullShape_getNumPoints(void* obj);
 __attribute__ ((visibility("default"))) void btConvexHullShape_getScaledPoint(void* obj, int i, void* value);
 __attribute__ ((visibility("default"))) void* btConvexHullShape_getUnscaledPoints(void* obj);


 __attribute__ ((visibility("default"))) void btConvexInternalShape_getImplicitShapeDimensions(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexInternalShape_getLocalScalingNV(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btConvexInternalShape_getMarginNV(void* obj);
 __attribute__ ((visibility("default"))) void btConvexInternalShape_setImplicitShapeDimensions(void* obj, const void* dimensions);
 __attribute__ ((visibility("default"))) void btConvexInternalShape_setSafeMargin(void* obj, float minDimension);
 __attribute__ ((visibility("default"))) void btConvexInternalShape_setSafeMargin2(void* obj, float minDimension, float defaultMarginMultiplier);
 __attribute__ ((visibility("default"))) void btConvexInternalShape_setSafeMargin3(void* obj, const void* halfExtents);
 __attribute__ ((visibility("default"))) void btConvexInternalShape_setSafeMargin4(void* obj, const void* halfExtents, float defaultMarginMultiplier);
 __attribute__ ((visibility("default"))) void btConvexInternalAabbCachingShape_recalcLocalAabb(void* obj);


 __attribute__ ((visibility("default"))) bool btConvexPenetrationDepthSolver_calcPenDepth(void* obj, void* simplexSolver, const void* convexA, const void* convexB, const void* transA, const void* transB, void* v, void* pa, void* pb, void* debugDraw);
 __attribute__ ((visibility("default"))) void btConvexPenetrationDepthSolver_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btConvexPlaneCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) int btConvexPlaneCollisionAlgorithm_CreateFunc_getMinimumPointsPerturbationThreshold(void* obj);
 __attribute__ ((visibility("default"))) int btConvexPlaneCollisionAlgorithm_CreateFunc_getNumPerturbationIterations(void* obj);
 __attribute__ ((visibility("default"))) void btConvexPlaneCollisionAlgorithm_CreateFunc_setMinimumPointsPerturbationThreshold(void* obj, int value);
 __attribute__ ((visibility("default"))) void btConvexPlaneCollisionAlgorithm_CreateFunc_setNumPerturbationIterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void* btConvexPlaneCollisionAlgorithm_new(void* mf, const void* ci, const void* body0Wrap, const void* body1Wrap, bool isSwapped, int numPerturbationIterations, int minimumPointsPerturbationThreshold);
 __attribute__ ((visibility("default"))) void btConvexPlaneCollisionAlgorithm_collideSingleContact(void* obj, const void* perturbeRot, const void* body0Wrap, const void* body1Wrap, const void* dispatchInfo, void* resultOut);


 __attribute__ ((visibility("default"))) void* btConvexPointCloudShape_new();
 __attribute__ ((visibility("default"))) void* btConvexPointCloudShape_new2(void* points, int numPoints, const void* localScaling);
 __attribute__ ((visibility("default"))) void* btConvexPointCloudShape_new3(void* points, int numPoints, const void* localScaling, bool computeAabb);
 __attribute__ ((visibility("default"))) int btConvexPointCloudShape_getNumPoints(void* obj);
 __attribute__ ((visibility("default"))) void btConvexPointCloudShape_getScaledPoint(void* obj, int index, void* value);
 __attribute__ ((visibility("default"))) void* btConvexPointCloudShape_getUnscaledPoints(void* obj);
 __attribute__ ((visibility("default"))) void btConvexPointCloudShape_setPoints(void* obj, void* points, int numPoints);
 __attribute__ ((visibility("default"))) void btConvexPointCloudShape_setPoints2(void* obj, void* points, int numPoints, bool computeAabb);
 __attribute__ ((visibility("default"))) void btConvexPointCloudShape_setPoints3(void* obj, void* points, int numPoints, bool computeAabb, const void* localScaling);


 __attribute__ ((visibility("default"))) void* btFace_new();
 __attribute__ ((visibility("default"))) void* btFace_getIndices(void* obj);
 __attribute__ ((visibility("default"))) float* btFace_getPlane(void* obj);
 __attribute__ ((visibility("default"))) void btFace_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btConvexPolyhedron_new();
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_getExtents(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btConvexPolyhedron_getFaces(void* obj);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_getLocalCenter(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_getMC(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_getME(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btConvexPolyhedron_getRadius(void* obj);
 __attribute__ ((visibility("default"))) void* btConvexPolyhedron_getUniqueEdges(void* obj);
 __attribute__ ((visibility("default"))) void* btConvexPolyhedron_getVertices(void* obj);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_initialize(void* obj);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_project(void* obj, const void* trans, const void* dir, float* minProj, float* maxProj, void* witnesPtMin, void* witnesPtMax);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_setExtents(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_setLocalCenter(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_setMC(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_setME(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_setRadius(void* obj, float value);
 __attribute__ ((visibility("default"))) bool btConvexPolyhedron_testContainment(void* obj);
 __attribute__ ((visibility("default"))) void btConvexPolyhedron_delete(void* obj);


 __attribute__ ((visibility("default"))) void btConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin(void* obj, const void* vectors, void* supportVerticesOut, int numVectors);
 __attribute__ ((visibility("default"))) void btConvexShape_getAabbNonVirtual(void* obj, const void* t, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) void btConvexShape_getAabbSlow(void* obj, const void* t, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) float btConvexShape_getMarginNonVirtual(void* obj);
 __attribute__ ((visibility("default"))) int btConvexShape_getNumPreferredPenetrationDirections(void* obj);
 __attribute__ ((visibility("default"))) void btConvexShape_getPreferredPenetrationDirection(void* obj, int index, void* penetrationVector);
 __attribute__ ((visibility("default"))) void btConvexShape_localGetSupportingVertex(void* obj, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btConvexShape_localGetSupportingVertexWithoutMargin(void* obj, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btConvexShape_localGetSupportVertexNonVirtual(void* obj, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btConvexShape_localGetSupportVertexWithoutMarginNonVirtual(void* obj, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btConvexShape_project(void* obj, const void* trans, const void* dir, float* minProj, float* maxProj, void* witnesPtMin, void* witnesPtMax);


 __attribute__ ((visibility("default"))) void* btConvexTriangleMeshShape_new(void* meshInterface);
 __attribute__ ((visibility("default"))) void* btConvexTriangleMeshShape_new2(void* meshInterface, bool calcAabb);
 __attribute__ ((visibility("default"))) void btConvexTriangleMeshShape_calculatePrincipalAxisTransform(void* obj, void* principal, void* inertia, float* volume);
 __attribute__ ((visibility("default"))) void* btConvexTriangleMeshShape_getMeshInterface(void* obj);


 __attribute__ ((visibility("default"))) void* btCylinderShape_new(const void* halfExtents);
 __attribute__ ((visibility("default"))) void* btCylinderShape_new2(float halfExtentX, float halfExtentY, float halfExtentZ);
 __attribute__ ((visibility("default"))) void btCylinderShape_getHalfExtentsWithMargin(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btCylinderShape_getHalfExtentsWithoutMargin(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btCylinderShape_getRadius(void* obj);
 __attribute__ ((visibility("default"))) int btCylinderShape_getUpAxis(void* obj);
 __attribute__ ((visibility("default"))) void* btCylinderShapeX_new(const void* halfExtents);
 __attribute__ ((visibility("default"))) void* btCylinderShapeX_new2(float halfExtentX, float halfExtentY, float halfExtentZ);
 __attribute__ ((visibility("default"))) void* btCylinderShapeZ_new(const void* halfExtents);
 __attribute__ ((visibility("default"))) void* btCylinderShapeZ_new2(float halfExtentX, float halfExtentY, float halfExtentZ);


 __attribute__ ((visibility("default"))) void* btDantzigSolver_new();


 __attribute__ ((visibility("default"))) void* btDbvtAabbMm_new();
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_Center(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btDbvtAabbMm_Classify(void* obj, const void* n, float o, int s);
 __attribute__ ((visibility("default"))) bool btDbvtAabbMm_Contain(void* obj, const void* a);
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_Expand(void* obj, const void* e);
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_Extents(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btDbvtAabbMm_FromCE(const void* c, const void* e);
 __attribute__ ((visibility("default"))) void* btDbvtAabbMm_FromCR(const void* c, float r);
 __attribute__ ((visibility("default"))) void* btDbvtAabbMm_FromMM(const void* mi, const void* mx);
 __attribute__ ((visibility("default"))) void* btDbvtAabbMm_FromPoints(const void** ppts, int n);
 __attribute__ ((visibility("default"))) void* btDbvtAabbMm_FromPoints2(const void* pts, int n);
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_Lengths(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_Maxs(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_Mins(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btDbvtAabbMm_ProjectMinimum(void* obj, const void* v, unsigned int signs);
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_SignedExpand(void* obj, const void* e);
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_tMaxs(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_tMins(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvtAabbMm_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvtNode_new();
 __attribute__ ((visibility("default"))) void** btDbvtNode_getChilds(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvtNode_getData(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtNode_getDataAsInt(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvtNode_getParent(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvtNode_getVolume(void* obj);
 __attribute__ ((visibility("default"))) bool btDbvtNode_isinternal(void* obj);
 __attribute__ ((visibility("default"))) bool btDbvtNode_isleaf(void* obj);
 __attribute__ ((visibility("default"))) void btDbvtNode_setData(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvtNode_setDataAsInt(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtNode_setParent(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvtNode_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_IClone_new();
 __attribute__ ((visibility("default"))) void btDbvt_IClone_CloneLeaf(void* obj, void* __unnamed0);
 __attribute__ ((visibility("default"))) void btDbvt_IClone_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_ICollide_new();
 __attribute__ ((visibility("default"))) bool btDbvt_ICollide_AllLeaves(void* obj, const void* __unnamed0);
 __attribute__ ((visibility("default"))) bool btDbvt_ICollide_Descent(void* obj, const void* __unnamed0);
 __attribute__ ((visibility("default"))) void btDbvt_ICollide_Process(void* obj, const void* __unnamed0, const void* __unnamed1);
 __attribute__ ((visibility("default"))) void btDbvt_ICollide_Process2(void* obj, const void* __unnamed0);
 __attribute__ ((visibility("default"))) void btDbvt_ICollide_Process3(void* obj, const void* n, float __unnamed1);
 __attribute__ ((visibility("default"))) void btDbvt_ICollide_delete(void* obj);
 __attribute__ ((visibility("default"))) void btDbvt_IWriter_Prepare(void* obj, const void* root, int numnodes);
 __attribute__ ((visibility("default"))) void btDbvt_IWriter_WriteLeaf(void* obj, const void* __unnamed0, int index, int parent);
 __attribute__ ((visibility("default"))) void btDbvt_IWriter_WriteNode(void* obj, const void* __unnamed0, int index, int parent, int child0, int child1);
 __attribute__ ((visibility("default"))) void btDbvt_IWriter_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_sStkCLN_new(const void* n, void* p);
 __attribute__ ((visibility("default"))) const void* btDbvt_sStkCLN_getNode(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_sStkCLN_getParent(void* obj);
 __attribute__ ((visibility("default"))) void btDbvt_sStkCLN_setNode(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDbvt_sStkCLN_setParent(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvt_sStkCLN_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_sStkNN_new();
 __attribute__ ((visibility("default"))) void* btDbvt_sStkNN_new2(const void* na, const void* nb);
 __attribute__ ((visibility("default"))) const void* btDbvt_sStkNN_getA(void* obj);
 __attribute__ ((visibility("default"))) const void* btDbvt_sStkNN_getB(void* obj);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNN_setA(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNN_setB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNN_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_sStkNP_new(const void* n, unsigned int m);
 __attribute__ ((visibility("default"))) int btDbvt_sStkNP_getMask(void* obj);
 __attribute__ ((visibility("default"))) const void* btDbvt_sStkNP_getNode(void* obj);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNP_setMask(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNP_setNode(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNP_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_sStkNPS_new();
 __attribute__ ((visibility("default"))) void* btDbvt_sStkNPS_new2(const void* n, unsigned int m, float v);
 __attribute__ ((visibility("default"))) int btDbvt_sStkNPS_getMask(void* obj);
 __attribute__ ((visibility("default"))) const void* btDbvt_sStkNPS_getNode(void* obj);
 __attribute__ ((visibility("default"))) float btDbvt_sStkNPS_getValue(void* obj);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNPS_setMask(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNPS_setNode(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNPS_setValue(void* obj, float value);
 __attribute__ ((visibility("default"))) void btDbvt_sStkNPS_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_new();
 __attribute__ ((visibility("default"))) int btDbvt_allocate(void* ifree, void* stock, const void* value);
 __attribute__ ((visibility("default"))) void btDbvt_benchmark();
 __attribute__ ((visibility("default"))) void btDbvt_clear(void* obj);
 __attribute__ ((visibility("default"))) void btDbvt_clone(void* obj, void* dest);
 __attribute__ ((visibility("default"))) void btDbvt_clone2(void* obj, void* dest, void* iclone);
 __attribute__ ((visibility("default"))) int btDbvt_countLeaves(const void* node);
 __attribute__ ((visibility("default"))) bool btDbvt_empty(void* obj);
 __attribute__ ((visibility("default"))) void btDbvt_extractLeaves(const void* node, void* leaves);
 __attribute__ ((visibility("default"))) void* btDbvt_getFree(void* obj);
 __attribute__ ((visibility("default"))) int btDbvt_getLeaves(void* obj);
 __attribute__ ((visibility("default"))) int btDbvt_getLkhd(void* obj);
 __attribute__ ((visibility("default"))) unsigned int btDbvt_getOpath(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_getRayTestStack(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_getRoot(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_getStkStack(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvt_insert(void* obj, const void* box, void* data);
 __attribute__ ((visibility("default"))) int btDbvt_maxdepth(const void* node);
 __attribute__ ((visibility("default"))) int btDbvt_nearest(const int* i, const void* a, float v, int l, int h);
 __attribute__ ((visibility("default"))) void btDbvt_optimizeBottomUp(void* obj);
 __attribute__ ((visibility("default"))) void btDbvt_optimizeIncremental(void* obj, int passes);
 __attribute__ ((visibility("default"))) void btDbvt_optimizeTopDown(void* obj);
 __attribute__ ((visibility("default"))) void btDbvt_optimizeTopDown2(void* obj, int bu_treshold);
 __attribute__ ((visibility("default"))) void btDbvt_rayTest(const void* root, const void* rayFrom, const void* rayTo, void* policy);
 __attribute__ ((visibility("default"))) void btDbvt_rayTestInternal(void* obj, const void* root, const void* rayFrom, const void* rayTo, const void* rayDirectionInverse, unsigned int* signs, float lambda_max, const void* aabbMin, const void* aabbMax, const void* policy);
 __attribute__ ((visibility("default"))) void btDbvt_remove(void* obj, void* leaf);
 __attribute__ ((visibility("default"))) void btDbvt_setFree(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvt_setLeaves(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvt_setLkhd(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvt_setOpath(void* obj, unsigned int value);
 __attribute__ ((visibility("default"))) void btDbvt_setRoot(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvt_update(void* obj, void* leaf, void* volume);
 __attribute__ ((visibility("default"))) void btDbvt_update2(void* obj, void* leaf);
 __attribute__ ((visibility("default"))) void btDbvt_update3(void* obj, void* leaf, int lookahead);
 __attribute__ ((visibility("default"))) bool btDbvt_update4(void* obj, void* leaf, void* volume, float margin);
 __attribute__ ((visibility("default"))) bool btDbvt_update5(void* obj, void* leaf, void* volume, const void* velocity);
 __attribute__ ((visibility("default"))) bool btDbvt_update6(void* obj, void* leaf, void* volume, const void* velocity, float margin);
 __attribute__ ((visibility("default"))) void btDbvt_write(void* obj, void* iwriter);
 __attribute__ ((visibility("default"))) void btDbvt_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btDbvtProxy_getLeaf(void* obj);
 __attribute__ ((visibility("default"))) void** btDbvtProxy_getLinks(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtProxy_getStage(void* obj);
 __attribute__ ((visibility("default"))) void btDbvtProxy_setLeaf(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvtProxy_setStage(void* obj, int value);
 __attribute__ ((visibility("default"))) void* btDbvtBroadphase_new();
 __attribute__ ((visibility("default"))) void* btDbvtBroadphase_new2(void* paircache);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_benchmark(void* __unnamed0);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_collide(void* obj, void* dispatcher);
 __attribute__ ((visibility("default"))) int btDbvtBroadphase_getCid(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtBroadphase_getCupdates(void* obj);
 __attribute__ ((visibility("default"))) bool btDbvtBroadphase_getDeferedcollide(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtBroadphase_getDupdates(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtBroadphase_getFixedleft(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtBroadphase_getFupdates(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtBroadphase_getGid(void* obj);
 __attribute__ ((visibility("default"))) bool btDbvtBroadphase_getNeedcleanup(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtBroadphase_getNewpairs(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvtBroadphase_getPaircache(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtBroadphase_getPid(void* obj);
 __attribute__ ((visibility("default"))) float btDbvtBroadphase_getPrediction(void* obj);
 __attribute__ ((visibility("default"))) bool btDbvtBroadphase_getReleasepaircache(void* obj);
 __attribute__ ((visibility("default"))) void* btDbvtBroadphase_getSets(void* obj);
 __attribute__ ((visibility("default"))) int btDbvtBroadphase_getStageCurrent(void* obj);
 __attribute__ ((visibility("default"))) void** btDbvtBroadphase_getStageRoots(void* obj);
 __attribute__ ((visibility("default"))) unsigned int btDbvtBroadphase_getUpdates_call(void* obj);
 __attribute__ ((visibility("default"))) unsigned int btDbvtBroadphase_getUpdates_done(void* obj);
 __attribute__ ((visibility("default"))) float btDbvtBroadphase_getUpdates_ratio(void* obj);
 __attribute__ ((visibility("default"))) float btDbvtBroadphase_getVelocityPrediction(void* obj);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_optimize(void* obj);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_performDeferredRemoval(void* obj, void* dispatcher);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setAabbForceUpdate(void* obj, void* absproxy, const void* aabbMin, const void* aabbMax, void* __unnamed3);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setCid(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setCupdates(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setDeferedcollide(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setDupdates(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setFixedleft(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setFupdates(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setGid(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setNeedcleanup(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setNewpairs(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setPaircache(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setPid(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setPrediction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setReleasepaircache(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setStageCurrent(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setUpdates_call(void* obj, unsigned int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setUpdates_done(void* obj, unsigned int value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setUpdates_ratio(void* obj, float value);
 __attribute__ ((visibility("default"))) void btDbvtBroadphase_setVelocityPrediction(void* obj, float prediction);


 __attribute__ ((visibility("default"))) void* btDefaultCollisionConstructionInfo_new();
 __attribute__ ((visibility("default"))) void* btDefaultCollisionConstructionInfo_getCollisionAlgorithmPool(void* obj);
 __attribute__ ((visibility("default"))) int btDefaultCollisionConstructionInfo_getCustomCollisionAlgorithmMaxElementSize(void* obj);
 __attribute__ ((visibility("default"))) int btDefaultCollisionConstructionInfo_getDefaultMaxCollisionAlgorithmPoolSize(void* obj);
 __attribute__ ((visibility("default"))) int btDefaultCollisionConstructionInfo_getDefaultMaxPersistentManifoldPoolSize(void* obj);
 __attribute__ ((visibility("default"))) void* btDefaultCollisionConstructionInfo_getPersistentManifoldPool(void* obj);
 __attribute__ ((visibility("default"))) int btDefaultCollisionConstructionInfo_getUseEpaPenetrationAlgorithm(void* obj);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConstructionInfo_setCollisionAlgorithmPool(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConstructionInfo_setCustomCollisionAlgorithmMaxElementSize(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConstructionInfo_setDefaultMaxCollisionAlgorithmPoolSize(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConstructionInfo_setDefaultMaxPersistentManifoldPoolSize(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConstructionInfo_setPersistentManifoldPool(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConstructionInfo_setUseEpaPenetrationAlgorithm(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConstructionInfo_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDefaultCollisionConfiguration_new();
 __attribute__ ((visibility("default"))) void* btDefaultCollisionConfiguration_new2(const void* constructionInfo);
 __attribute__ ((visibility("default"))) void* btDefaultCollisionConfiguration_getSimplexSolver(void* obj);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations(void* obj);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations2(void* obj, int numPerturbationIterations);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations3(void* obj, int numPerturbationIterations, int minimumPointsPerturbationThreshold);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations(void* obj);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations2(void* obj, int numPerturbationIterations);
 __attribute__ ((visibility("default"))) void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations3(void* obj, int numPerturbationIterations, int minimumPointsPerturbationThreshold);


 __attribute__ ((visibility("default"))) void* btDefaultMotionState_new();
 __attribute__ ((visibility("default"))) void* btDefaultMotionState_new2(const void* startTrans);
 __attribute__ ((visibility("default"))) void* btDefaultMotionState_new3(const void* startTrans, const void* centerOfMassOffset);
 __attribute__ ((visibility("default"))) void btDefaultMotionState_getCenterOfMassOffset(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDefaultMotionState_getGraphicsWorldTrans(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDefaultMotionState_getStartWorldTrans(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btDefaultMotionState_getUserPointer(void* obj);
 __attribute__ ((visibility("default"))) void btDefaultMotionState_setCenterOfMassOffset(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDefaultMotionState_setGraphicsWorldTrans(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDefaultMotionState_setStartWorldTrans(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDefaultMotionState_setUserPointer(void* obj, void* value);


 __attribute__ ((visibility("default"))) void* btDefaultSoftBodySolver_new();
 __attribute__ ((visibility("default"))) void btDefaultSoftBodySolver_copySoftBodyToVertexBuffer(void* obj, const void* softBody, void* vertexBuffer);


 __attribute__ ((visibility("default"))) void* btDiscreteCollisionDetectorInterface_ClosestPointInput_new();
 __attribute__ ((visibility("default"))) float btDiscreteCollisionDetectorInterface_ClosestPointInput_getMaximumDistanceSquared(void* obj);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_ClosestPointInput_getTransformA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_ClosestPointInput_getTransformB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_ClosestPointInput_setMaximumDistanceSquared(void* obj, float value);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_ClosestPointInput_setTransformA(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_ClosestPointInput_setTransformB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_ClosestPointInput_delete(void* obj);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_Result_addContactPoint(void* obj, const void* normalOnBInWorld, const void* pointInWorld, float depth);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersA(void* obj, int partId0, int index0);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersB(void* obj, int partId1, int index1);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_Result_delete(void* obj);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_getClosestPoints(void* obj, const void* input, void* output, void* debugDraw);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_getClosestPoints2(void* obj, const void* input, void* output, void* debugDraw, bool swapResults);
 __attribute__ ((visibility("default"))) void btDiscreteCollisionDetectorInterface_delete(void* obj);
 __attribute__ ((visibility("default"))) void btStorageResult_getClosestPointInB(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btStorageResult_getDistance(void* obj);
 __attribute__ ((visibility("default"))) void btStorageResult_getNormalOnSurfaceB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btStorageResult_setClosestPointInB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btStorageResult_setDistance(void* obj, float value);
 __attribute__ ((visibility("default"))) void btStorageResult_setNormalOnSurfaceB(void* obj, const void* value);


 __attribute__ ((visibility("default"))) void* btDiscreteDynamicsWorld_new(void* dispatcher, void* pairCache, void* constraintSolver, void* collisionConfiguration);
 __attribute__ ((visibility("default"))) void btDiscreteDynamicsWorld_applyGravity(void* obj);
 __attribute__ ((visibility("default"))) void btDiscreteDynamicsWorld_debugDrawConstraint(void* obj, void* constraint);
 __attribute__ ((visibility("default"))) bool btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution(void* obj);
 __attribute__ ((visibility("default"))) void* btDiscreteDynamicsWorld_getCollisionWorld(void* obj);
 __attribute__ ((visibility("default"))) bool btDiscreteDynamicsWorld_getLatencyMotionStateInterpolation(void* obj);
 __attribute__ ((visibility("default"))) void* btDiscreteDynamicsWorld_getSimulationIslandManager(void* obj);
 __attribute__ ((visibility("default"))) bool btDiscreteDynamicsWorld_getSynchronizeAllMotionStates(void* obj);
 __attribute__ ((visibility("default"))) void btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution(void* obj, bool enable);
 __attribute__ ((visibility("default"))) void btDiscreteDynamicsWorld_setLatencyMotionStateInterpolation(void* obj, bool latencyInterpolation);
 __attribute__ ((visibility("default"))) void btDiscreteDynamicsWorld_setNumTasks(void* obj, int numTasks);
 __attribute__ ((visibility("default"))) void btDiscreteDynamicsWorld_setSynchronizeAllMotionStates(void* obj, bool synchronizeAll);
 __attribute__ ((visibility("default"))) void btDiscreteDynamicsWorld_synchronizeSingleMotionState(void* obj, void* body);
 __attribute__ ((visibility("default"))) void btDiscreteDynamicsWorld_updateVehicles(void* obj, float timeStep);


 __attribute__ ((visibility("default"))) float btDispatcherInfo_getAllowedCcdPenetration(void* obj);
 __attribute__ ((visibility("default"))) float btDispatcherInfo_getConvexConservativeDistanceThreshold(void* obj);
 __attribute__ ((visibility("default"))) void* btDispatcherInfo_getDebugDraw(void* obj);
 __attribute__ ((visibility("default"))) int btDispatcherInfo_getDispatchFunc(void* obj);
 __attribute__ ((visibility("default"))) bool btDispatcherInfo_getEnableSatConvex(void* obj);
 __attribute__ ((visibility("default"))) bool btDispatcherInfo_getEnableSPU(void* obj);
 __attribute__ ((visibility("default"))) int btDispatcherInfo_getStepCount(void* obj);
 __attribute__ ((visibility("default"))) float btDispatcherInfo_getTimeOfImpact(void* obj);
 __attribute__ ((visibility("default"))) float btDispatcherInfo_getTimeStep(void* obj);
 __attribute__ ((visibility("default"))) bool btDispatcherInfo_getUseContinuous(void* obj);
 __attribute__ ((visibility("default"))) bool btDispatcherInfo_getUseConvexConservativeDistanceUtil(void* obj);
 __attribute__ ((visibility("default"))) bool btDispatcherInfo_getUseEpa(void* obj);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setAllowedCcdPenetration(void* obj, float value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setConvexConservativeDistanceThreshold(void* obj, float value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setDebugDraw(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setDispatchFunc(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setEnableSatConvex(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setEnableSPU(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setStepCount(void* obj, int value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setTimeOfImpact(void* obj, float value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setTimeStep(void* obj, float value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setUseContinuous(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setUseConvexConservativeDistanceUtil(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btDispatcherInfo_setUseEpa(void* obj, bool value);
 __attribute__ ((visibility("default"))) void* btDispatcher_allocateCollisionAlgorithm(void* obj, int size);
 __attribute__ ((visibility("default"))) void btDispatcher_clearManifold(void* obj, void* manifold);
 __attribute__ ((visibility("default"))) void btDispatcher_dispatchAllCollisionPairs(void* obj, void* pairCache, const void* dispatchInfo, void* dispatcher);
 __attribute__ ((visibility("default"))) void* btDispatcher_findAlgorithm(void* obj, const void* body0Wrap, const void* body1Wrap);
 __attribute__ ((visibility("default"))) void* btDispatcher_findAlgorithm2(void* obj, const void* body0Wrap, const void* body1Wrap, void* sharedManifold);
 __attribute__ ((visibility("default"))) void btDispatcher_freeCollisionAlgorithm(void* obj, void* ptr);
 __attribute__ ((visibility("default"))) void** btDispatcher_getInternalManifoldPointer(void* obj);
 __attribute__ ((visibility("default"))) void* btDispatcher_getInternalManifoldPool(void* obj);
 __attribute__ ((visibility("default"))) void* btDispatcher_getManifoldByIndexInternal(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btDispatcher_getNewManifold(void* obj, const void* b0, const void* b1);
 __attribute__ ((visibility("default"))) int btDispatcher_getNumManifolds(void* obj);
 __attribute__ ((visibility("default"))) bool btDispatcher_needsCollision(void* obj, const void* body0, const void* body1);
 __attribute__ ((visibility("default"))) bool btDispatcher_needsResponse(void* obj, const void* body0, const void* body1);
 __attribute__ ((visibility("default"))) void btDispatcher_releaseManifold(void* obj, void* manifold);
 __attribute__ ((visibility("default"))) void btDispatcher_delete(void* obj);


 __attribute__ ((visibility("default"))) void btDynamicsWorld_addAction(void* obj, void* action);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_addConstraint(void* obj, void* constraint);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_addConstraint2(void* obj, void* constraint, bool disableCollisionsBetweenLinkedBodies);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_addRigidBody(void* obj, void* body);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_addRigidBody2(void* obj, void* body, short group, short mask);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_clearForces(void* obj);
 __attribute__ ((visibility("default"))) void* btDynamicsWorld_getConstraint(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btDynamicsWorld_getConstraintSolver(void* obj);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_getGravity(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btDynamicsWorld_getNumConstraints(void* obj);
 __attribute__ ((visibility("default"))) void* btDynamicsWorld_getSolverInfo(void* obj);
 __attribute__ ((visibility("default"))) int btDynamicsWorld_getWorldType(void* obj);
 __attribute__ ((visibility("default"))) void* btDynamicsWorld_getWorldUserInfo(void* obj);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_removeAction(void* obj, void* action);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_removeConstraint(void* obj, void* constraint);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_removeRigidBody(void* obj, void* body);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_setConstraintSolver(void* obj, void* solver);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_setGravity(void* obj, const void* gravity);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_setInternalTickCallback(void* obj, void* cb);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_setInternalTickCallback2(void* obj, void* cb, void* worldUserInfo);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_setInternalTickCallback3(void* obj, void* cb, void* worldUserInfo, bool isPreTick);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_setWorldUserInfo(void* obj, void* worldUserInfo);
 __attribute__ ((visibility("default"))) int btDynamicsWorld_stepSimulation(void* obj, float timeStep);
 __attribute__ ((visibility("default"))) int btDynamicsWorld_stepSimulation2(void* obj, float timeStep, int maxSubSteps);
 __attribute__ ((visibility("default"))) int btDynamicsWorld_stepSimulation3(void* obj, float timeStep, int maxSubSteps, float fixedTimeStep);
 __attribute__ ((visibility("default"))) void btDynamicsWorld_synchronizeMotionStates(void* obj);


 __attribute__ ((visibility("default"))) void* btEmptyAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btEmptyAlgorithm_new(const void* ci);


 __attribute__ ((visibility("default"))) void* btEmptyShape_new();


 __attribute__ ((visibility("default"))) void* btFixedConstraint_new(void* rbA, void* rbB, const void* frameInA, const void* frameInB);


 __attribute__ ((visibility("default"))) void* btGearConstraint_new(void* rbA, void* rbB, const void* axisInA, const void* axisInB);
 __attribute__ ((visibility("default"))) void* btGearConstraint_new2(void* rbA, void* rbB, const void* axisInA, const void* axisInB, float ratio);
 __attribute__ ((visibility("default"))) void btGearConstraint_getAxisA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btGearConstraint_getAxisB(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btGearConstraint_getRatio(void* obj);
 __attribute__ ((visibility("default"))) void btGearConstraint_setAxisA(void* obj, void* axisA);
 __attribute__ ((visibility("default"))) void btGearConstraint_setAxisB(void* obj, void* axisB);
 __attribute__ ((visibility("default"))) void btGearConstraint_setRatio(void* obj, float ratio);


 __attribute__ ((visibility("default"))) void* btRotationalLimitMotor_new();
 __attribute__ ((visibility("default"))) void* btRotationalLimitMotor_new2(const void* limot);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getAccumulatedImpulse(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getBounce(void* obj);
 __attribute__ ((visibility("default"))) int btRotationalLimitMotor_getCurrentLimit(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getCurrentLimitError(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getCurrentPosition(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getDamping(void* obj);
 __attribute__ ((visibility("default"))) bool btRotationalLimitMotor_getEnableMotor(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getHiLimit(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getLimitSoftness(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getLoLimit(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getMaxLimitForce(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getMaxMotorForce(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getNormalCFM(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getStopCFM(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getStopERP(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_getTargetVelocity(void* obj);
 __attribute__ ((visibility("default"))) bool btRotationalLimitMotor_isLimited(void* obj);
 __attribute__ ((visibility("default"))) bool btRotationalLimitMotor_needApplyTorques(void* obj);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setAccumulatedImpulse(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setBounce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setCurrentLimit(void* obj, int value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setCurrentLimitError(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setCurrentPosition(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setEnableMotor(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setHiLimit(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setLimitSoftness(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setLoLimit(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setMaxLimitForce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setMaxMotorForce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setNormalCFM(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setStopCFM(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setStopERP(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_setTargetVelocity(void* obj, float value);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor_solveAngularLimits(void* obj, float timeStep, void* axis, float jacDiagABInv, void* body0, void* body1);
 __attribute__ ((visibility("default"))) int btRotationalLimitMotor_testLimitValue(void* obj, float test_value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btTranslationalLimitMotor_new();
 __attribute__ ((visibility("default"))) void* btTranslationalLimitMotor_new2(const void* other);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getAccumulatedImpulse(void* obj, void* value);
 __attribute__ ((visibility("default"))) int* btTranslationalLimitMotor_getCurrentLimit(void* obj);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getCurrentLimitError(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getCurrentLinearDiff(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btTranslationalLimitMotor_getDamping(void* obj);
 __attribute__ ((visibility("default"))) bool* btTranslationalLimitMotor_getEnableMotor(void* obj);
 __attribute__ ((visibility("default"))) float btTranslationalLimitMotor_getLimitSoftness(void* obj);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getLowerLimit(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getMaxMotorForce(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getNormalCFM(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btTranslationalLimitMotor_getRestitution(void* obj);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getStopCFM(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getStopERP(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getTargetVelocity(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_getUpperLimit(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btTranslationalLimitMotor_isLimited(void* obj, int limitIndex);
 __attribute__ ((visibility("default"))) bool btTranslationalLimitMotor_needApplyForce(void* obj, int limitIndex);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setAccumulatedImpulse(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setCurrentLimitError(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setCurrentLinearDiff(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setLimitSoftness(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setLowerLimit(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setMaxMotorForce(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setNormalCFM(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setRestitution(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setStopCFM(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setStopERP(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setTargetVelocity(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_setUpperLimit(void* obj, const void* value);
 __attribute__ ((visibility("default"))) float btTranslationalLimitMotor_solveLinearAxis(void* obj, float timeStep, float jacDiagABInv, void* body1, const void* pointInA, void* body2, const void* pointInB, int limit_index, const void* axis_normal_on_a, const void* anchorPos);
 __attribute__ ((visibility("default"))) int btTranslationalLimitMotor_testLimitValue(void* obj, int limitIndex, float test_value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btGeneric6DofConstraint_new(void* rbA, void* rbB, const void* frameInA, const void* frameInB, bool useLinearReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btGeneric6DofConstraint_new2(void* rbB, const void* frameInB, bool useLinearReferenceFrameB);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_calcAnchorPos(void* obj);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_calculateTransforms(void* obj, const void* transA, const void* transB);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_calculateTransforms2(void* obj);
 __attribute__ ((visibility("default"))) int btGeneric6DofConstraint_get_limit_motor_info2(void* obj, void* limot, const void* transA, const void* transB, const void* linVelA, const void* linVelB, const void* angVelA, const void* angVelB, void* info, int row, void* ax1, int rotational);
 __attribute__ ((visibility("default"))) int btGeneric6DofConstraint_get_limit_motor_info22(void* obj, void* limot, const void* transA, const void* transB, const void* linVelA, const void* linVelB, const void* angVelA, const void* angVelB, void* info, int row, void* ax1, int rotational, int rotAllowed);
 __attribute__ ((visibility("default"))) float btGeneric6DofConstraint_getAngle(void* obj, int axis_index);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getAngularLowerLimit(void* obj, void* angularLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getAngularUpperLimit(void* obj, void* angularUpper);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getAxis(void* obj, int axis_index, void* value);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getCalculatedTransformA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getCalculatedTransformB(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btGeneric6DofConstraint_getFlags(void* obj);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getFrameOffsetA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getFrameOffsetB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getInfo1NonVirtual(void* obj, void* info);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getInfo2NonVirtual(void* obj, void* info, const void* transA, const void* transB, const void* linVelA, const void* linVelB, const void* angVelA, const void* angVelB);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getLinearLowerLimit(void* obj, void* linearLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_getLinearUpperLimit(void* obj, void* linearUpper);
 __attribute__ ((visibility("default"))) float btGeneric6DofConstraint_getRelativePivotPosition(void* obj, int axis_index);
 __attribute__ ((visibility("default"))) void* btGeneric6DofConstraint_getRotationalLimitMotor(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btGeneric6DofConstraint_getTranslationalLimitMotor(void* obj);
 __attribute__ ((visibility("default"))) bool btGeneric6DofConstraint_getUseFrameOffset(void* obj);
 __attribute__ ((visibility("default"))) bool btGeneric6DofConstraint_getUseLinearReferenceFrameA(void* obj);
 __attribute__ ((visibility("default"))) bool btGeneric6DofConstraint_getUseSolveConstraintObsolete(void* obj);
 __attribute__ ((visibility("default"))) bool btGeneric6DofConstraint_isLimited(void* obj, int limitIndex);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setAngularLowerLimit(void* obj, const void* angularLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setAngularUpperLimit(void* obj, const void* angularUpper);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setAxis(void* obj, const void* axis1, const void* axis2);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setFrames(void* obj, const void* frameA, const void* frameB);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setLimit(void* obj, int axis, float lo, float hi);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setLinearLowerLimit(void* obj, const void* linearLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setLinearUpperLimit(void* obj, const void* linearUpper);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setUseFrameOffset(void* obj, bool frameOffsetOnOff);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setUseLinearReferenceFrameA(void* obj, bool linearReferenceFrameA);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_setUseSolveConstraintObsolete(void* obj, bool value);
 __attribute__ ((visibility("default"))) bool btGeneric6DofConstraint_testAngularLimitMotor(void* obj, int axis_index);
 __attribute__ ((visibility("default"))) void btGeneric6DofConstraint_updateRHS(void* obj, float timeStep);


 __attribute__ ((visibility("default"))) void* btRotationalLimitMotor2_new();
 __attribute__ ((visibility("default"))) void* btRotationalLimitMotor2_new2(const void* limot);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getBounce(void* obj);
 __attribute__ ((visibility("default"))) int btRotationalLimitMotor2_getCurrentLimit(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getCurrentLimitError(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getCurrentLimitErrorHi(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getCurrentPosition(void* obj);
 __attribute__ ((visibility("default"))) bool btRotationalLimitMotor2_getEnableMotor(void* obj);
 __attribute__ ((visibility("default"))) bool btRotationalLimitMotor2_getEnableSpring(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getEquilibriumPoint(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getHiLimit(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getLoLimit(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getMaxMotorForce(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getMotorCFM(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getMotorERP(void* obj);
 __attribute__ ((visibility("default"))) bool btRotationalLimitMotor2_getServoMotor(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getServoTarget(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getSpringDamping(void* obj);
 __attribute__ ((visibility("default"))) bool btRotationalLimitMotor2_getSpringDampingLimited(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getSpringStiffness(void* obj);
 __attribute__ ((visibility("default"))) bool btRotationalLimitMotor2_getSpringStiffnessLimited(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getStopCFM(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getStopERP(void* obj);
 __attribute__ ((visibility("default"))) float btRotationalLimitMotor2_getTargetVelocity(void* obj);
 __attribute__ ((visibility("default"))) bool btRotationalLimitMotor2_isLimited(void* obj);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setBounce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setCurrentLimit(void* obj, int value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setCurrentLimitError(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setCurrentLimitErrorHi(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setCurrentPosition(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setEnableMotor(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setEnableSpring(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setEquilibriumPoint(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setHiLimit(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setLoLimit(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setMaxMotorForce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setMotorCFM(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setMotorERP(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setServoMotor(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setServoTarget(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setSpringDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setSpringDampingLimited(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setSpringStiffness(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setSpringStiffnessLimited(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setStopCFM(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setStopERP(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_setTargetVelocity(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_testLimitValue(void* obj, float test_value);
 __attribute__ ((visibility("default"))) void btRotationalLimitMotor2_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btTranslationalLimitMotor2_new();
 __attribute__ ((visibility("default"))) void* btTranslationalLimitMotor2_new2(const void* other);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getBounce(void* obj, void* value);
 __attribute__ ((visibility("default"))) int* btTranslationalLimitMotor2_getCurrentLimit(void* obj);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getCurrentLimitError(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getCurrentLimitErrorHi(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getCurrentLinearDiff(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool* btTranslationalLimitMotor2_getEnableMotor(void* obj);
 __attribute__ ((visibility("default"))) bool* btTranslationalLimitMotor2_getEnableSpring(void* obj);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getEquilibriumPoint(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getLowerLimit(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getMaxMotorForce(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getMotorCFM(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getMotorERP(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool* btTranslationalLimitMotor2_getServoMotor(void* obj);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getServoTarget(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getSpringDamping(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool* btTranslationalLimitMotor2_getSpringDampingLimited(void* obj);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getSpringStiffness(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool* btTranslationalLimitMotor2_getSpringStiffnessLimited(void* obj);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getStopCFM(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getStopERP(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getTargetVelocity(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_getUpperLimit(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btTranslationalLimitMotor2_isLimited(void* obj, int limitIndex);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setBounce(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setCurrentLimitError(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setCurrentLimitErrorHi(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setCurrentLinearDiff(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setEquilibriumPoint(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setLowerLimit(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setMaxMotorForce(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setMotorCFM(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setMotorERP(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setServoTarget(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setSpringDamping(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setSpringStiffness(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setStopCFM(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setStopERP(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setTargetVelocity(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_setUpperLimit(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_testLimitValue(void* obj, int limitIndex, float test_value);
 __attribute__ ((visibility("default"))) void btTranslationalLimitMotor2_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btGeneric6DofSpring2Constraint_new(void* rbA, void* rbB, const void* frameInA, const void* frameInB);
 __attribute__ ((visibility("default"))) void* btGeneric6DofSpring2Constraint_new2(void* rbA, void* rbB, const void* frameInA, const void* frameInB, int rotOrder);
 __attribute__ ((visibility("default"))) void* btGeneric6DofSpring2Constraint_new3(void* rbB, const void* frameInB);
 __attribute__ ((visibility("default"))) void* btGeneric6DofSpring2Constraint_new4(void* rbB, const void* frameInB, int rotOrder);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_calculateTransforms(void* obj, const void* transA, const void* transB);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_calculateTransforms2(void* obj);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_enableMotor(void* obj, int index, bool onOff);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_enableSpring(void* obj, int index, bool onOff);
 __attribute__ ((visibility("default"))) float btGeneric6DofSpring2Constraint_getAngle(void* obj, int axis_index);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getAngularLowerLimit(void* obj, void* angularLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getAngularLowerLimitReversed(void* obj, void* angularLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getAngularUpperLimit(void* obj, void* angularUpper);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getAngularUpperLimitReversed(void* obj, void* angularUpper);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getAxis(void* obj, int axis_index, void* value);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getCalculatedTransformA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getCalculatedTransformB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getFrameOffsetA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getFrameOffsetB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getLinearLowerLimit(void* obj, void* linearLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_getLinearUpperLimit(void* obj, void* linearUpper);
 __attribute__ ((visibility("default"))) float btGeneric6DofSpring2Constraint_getRelativePivotPosition(void* obj, int axis_index);
 __attribute__ ((visibility("default"))) void* btGeneric6DofSpring2Constraint_getRotationalLimitMotor(void* obj, int index);
 __attribute__ ((visibility("default"))) int btGeneric6DofSpring2Constraint_getRotationOrder(void* obj);
 __attribute__ ((visibility("default"))) void* btGeneric6DofSpring2Constraint_getTranslationalLimitMotor(void* obj);
 __attribute__ ((visibility("default"))) bool btGeneric6DofSpring2Constraint_isLimited(void* obj, int limitIndex);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setAngularLowerLimit(void* obj, const void* angularLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setAngularLowerLimitReversed(void* obj, const void* angularLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setAngularUpperLimit(void* obj, const void* angularUpper);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setAngularUpperLimitReversed(void* obj, const void* angularUpper);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setAxis(void* obj, const void* axis1, const void* axis2);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setBounce(void* obj, int index, float bounce);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setDamping(void* obj, int index, float damping);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setDamping2(void* obj, int index, float damping, bool limitIfNeeded);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setEquilibriumPoint(void* obj);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setEquilibriumPoint2(void* obj, int index, float val);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setEquilibriumPoint3(void* obj, int index);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setFrames(void* obj, const void* frameA, const void* frameB);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setLimit(void* obj, int axis, float lo, float hi);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setLimitReversed(void* obj, int axis, float lo, float hi);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setLinearLowerLimit(void* obj, const void* linearLower);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setLinearUpperLimit(void* obj, const void* linearUpper);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setMaxMotorForce(void* obj, int index, float force);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setRotationOrder(void* obj, int order);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setServo(void* obj, int index, bool onOff);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setServoTarget(void* obj, int index, float target);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setStiffness(void* obj, int index, float stiffness);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setStiffness2(void* obj, int index, float stiffness, bool limitIfNeeded);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpring2Constraint_setTargetVelocity(void* obj, int index, float velocity);


 __attribute__ ((visibility("default"))) void* btGeneric6DofSpringConstraint_new(void* rbA, void* rbB, const void* frameInA, const void* frameInB, bool useLinearReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btGeneric6DofSpringConstraint_new2(void* rbB, const void* frameInB, bool useLinearReferenceFrameB);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpringConstraint_enableSpring(void* obj, int index, bool onOff);
 __attribute__ ((visibility("default"))) float btGeneric6DofSpringConstraint_getDamping(void* obj, int index);
 __attribute__ ((visibility("default"))) float btGeneric6DofSpringConstraint_getEquilibriumPoint(void* obj, int index);
 __attribute__ ((visibility("default"))) float btGeneric6DofSpringConstraint_getStiffness(void* obj, int index);
 __attribute__ ((visibility("default"))) bool btGeneric6DofSpringConstraint_isSpringEnabled(void* obj, int index);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpringConstraint_setDamping(void* obj, int index, float damping);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpringConstraint_setEquilibriumPoint(void* obj);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpringConstraint_setEquilibriumPoint2(void* obj, int index);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpringConstraint_setEquilibriumPoint3(void* obj, int index, float val);
 __attribute__ ((visibility("default"))) void btGeneric6DofSpringConstraint_setStiffness(void* obj, int index, float stiffness);


 __attribute__ ((visibility("default"))) bool btGeometryUtil_areVerticesBehindPlane(const void* planeNormal, const void* vertices, float margin);
 __attribute__ ((visibility("default"))) void btGeometryUtil_getPlaneEquationsFromVertices(void* vertices, void* planeEquationsOut);
 __attribute__ ((visibility("default"))) void btGeometryUtil_getVerticesFromPlaneEquations(const void* planeEquations, void* verticesOut);
 __attribute__ ((visibility("default"))) bool btGeometryUtil_isPointInsidePlanes(const void* planeEquations, const void* point, float margin);


 __attribute__ ((visibility("default"))) void* btGhostObject_new();
 __attribute__ ((visibility("default"))) void btGhostObject_addOverlappingObjectInternal(void* obj, void* otherProxy);
 __attribute__ ((visibility("default"))) void btGhostObject_addOverlappingObjectInternal2(void* obj, void* otherProxy, void* thisProxy);
 __attribute__ ((visibility("default"))) void btGhostObject_convexSweepTest(void* obj, const void* castShape, const void* convexFromWorld, const void* convexToWorld, void* resultCallback);
 __attribute__ ((visibility("default"))) void btGhostObject_convexSweepTest2(void* obj, const void* castShape, const void* convexFromWorld, const void* convexToWorld, void* resultCallback, float allowedCcdPenetration);
 __attribute__ ((visibility("default"))) int btGhostObject_getNumOverlappingObjects(void* obj);
 __attribute__ ((visibility("default"))) void* btGhostObject_getOverlappingObject(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btGhostObject_getOverlappingPairs(void* obj);
 __attribute__ ((visibility("default"))) void btGhostObject_rayTest(void* obj, const void* rayFromWorld, const void* rayToWorld, void* resultCallback);
 __attribute__ ((visibility("default"))) void btGhostObject_removeOverlappingObjectInternal(void* obj, void* otherProxy, void* dispatcher);
 __attribute__ ((visibility("default"))) void btGhostObject_removeOverlappingObjectInternal2(void* obj, void* otherProxy, void* dispatcher, void* thisProxy);
 __attribute__ ((visibility("default"))) void* btGhostObject_upcast(void* colObj);
 __attribute__ ((visibility("default"))) void* btPairCachingGhostObject_new();
 __attribute__ ((visibility("default"))) void* btPairCachingGhostObject_getOverlappingPairCache(void* obj);
 __attribute__ ((visibility("default"))) void* btGhostPairCallback_new();


 __attribute__ ((visibility("default"))) void* GIM_PAIR_new();
 __attribute__ ((visibility("default"))) void* GIM_PAIR_new2(const void* p);
 __attribute__ ((visibility("default"))) void* GIM_PAIR_new3(int index1, int index2);
 __attribute__ ((visibility("default"))) int GIM_PAIR_getIndex1(void* obj);
 __attribute__ ((visibility("default"))) int GIM_PAIR_getIndex2(void* obj);
 __attribute__ ((visibility("default"))) void GIM_PAIR_setIndex1(void* obj, int value);
 __attribute__ ((visibility("default"))) void GIM_PAIR_setIndex2(void* obj, int value);
 __attribute__ ((visibility("default"))) void GIM_PAIR_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btPairSet_new();
 __attribute__ ((visibility("default"))) void btPairSet_push_pair(void* obj, int index1, int index2);
 __attribute__ ((visibility("default"))) void btPairSet_push_pair_inv(void* obj, int index1, int index2);
 __attribute__ ((visibility("default"))) void btPairSet_delete(void* obj);
 __attribute__ ((visibility("default"))) void* GIM_BVH_DATA_new();
 __attribute__ ((visibility("default"))) void* GIM_BVH_DATA_getBound(void* obj);
 __attribute__ ((visibility("default"))) int GIM_BVH_DATA_getData(void* obj);
 __attribute__ ((visibility("default"))) void GIM_BVH_DATA_setBound(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void GIM_BVH_DATA_setData(void* obj, int value);
 __attribute__ ((visibility("default"))) void GIM_BVH_DATA_delete(void* obj);
 __attribute__ ((visibility("default"))) void* GIM_BVH_TREE_NODE_new();
 __attribute__ ((visibility("default"))) void* GIM_BVH_TREE_NODE_getBound(void* obj);
 __attribute__ ((visibility("default"))) int GIM_BVH_TREE_NODE_getDataIndex(void* obj);
 __attribute__ ((visibility("default"))) int GIM_BVH_TREE_NODE_getEscapeIndex(void* obj);
 __attribute__ ((visibility("default"))) bool GIM_BVH_TREE_NODE_isLeafNode(void* obj);
 __attribute__ ((visibility("default"))) void GIM_BVH_TREE_NODE_setBound(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void GIM_BVH_TREE_NODE_setDataIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void GIM_BVH_TREE_NODE_setEscapeIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void GIM_BVH_TREE_NODE_delete(void* obj);
 __attribute__ ((visibility("default"))) void* GIM_BVH_DATA_ARRAY_new();
 __attribute__ ((visibility("default"))) void GIM_BVH_DATA_ARRAY_delete(void* obj);
 __attribute__ ((visibility("default"))) void* GIM_BVH_TREE_NODE_ARRAY_new();
 __attribute__ ((visibility("default"))) void GIM_BVH_TREE_NODE_ARRAY_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btBvhTree_new();
 __attribute__ ((visibility("default"))) void btBvhTree_build_tree(void* obj, void* primitive_boxes);
 __attribute__ ((visibility("default"))) void btBvhTree_clearNodes(void* obj);
 __attribute__ ((visibility("default"))) const void* btBvhTree_get_node_pointer(void* obj);
 __attribute__ ((visibility("default"))) const void* btBvhTree_get_node_pointer2(void* obj, int index);
 __attribute__ ((visibility("default"))) int btBvhTree_getEscapeNodeIndex(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) int btBvhTree_getLeftNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void btBvhTree_getNodeBound(void* obj, int nodeindex, void* bound);
 __attribute__ ((visibility("default"))) int btBvhTree_getNodeCount(void* obj);
 __attribute__ ((visibility("default"))) int btBvhTree_getNodeData(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) int btBvhTree_getRightNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) bool btBvhTree_isLeafNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void btBvhTree_setNodeBound(void* obj, int nodeindex, const void* bound);
 __attribute__ ((visibility("default"))) void btBvhTree_delete(void* obj);
 __attribute__ ((visibility("default"))) void btPrimitiveManagerBase_get_primitive_box(void* obj, int prim_index, void* primbox);
 __attribute__ ((visibility("default"))) int btPrimitiveManagerBase_get_primitive_count(void* obj);
 __attribute__ ((visibility("default"))) void btPrimitiveManagerBase_get_primitive_triangle(void* obj, int prim_index, void* triangle);
 __attribute__ ((visibility("default"))) bool btPrimitiveManagerBase_is_trimesh(void* obj);
 __attribute__ ((visibility("default"))) void btPrimitiveManagerBase_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btGImpactBvh_new();
 __attribute__ ((visibility("default"))) void* btGImpactBvh_new2(void* primitive_manager);
 __attribute__ ((visibility("default"))) bool btGImpactBvh_boxQuery(void* obj, const void* box, void* collided_results);
 __attribute__ ((visibility("default"))) bool btGImpactBvh_boxQueryTrans(void* obj, const void* box, const void* transform, void* collided_results);
 __attribute__ ((visibility("default"))) void btGImpactBvh_buildSet(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactBvh_find_collision(void* boxset1, const void* trans1, void* boxset2, const void* trans2, void* collision_pairs);
 __attribute__ ((visibility("default"))) const void* btGImpactBvh_get_node_pointer(void* obj);
 __attribute__ ((visibility("default"))) const void* btGImpactBvh_get_node_pointer2(void* obj, int index);
 __attribute__ ((visibility("default"))) int btGImpactBvh_getEscapeNodeIndex(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void* btGImpactBvh_getGlobalBox(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactBvh_getLeftNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void btGImpactBvh_getNodeBound(void* obj, int nodeindex, void* bound);
 __attribute__ ((visibility("default"))) int btGImpactBvh_getNodeCount(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactBvh_getNodeData(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void btGImpactBvh_getNodeTriangle(void* obj, int nodeindex, void* triangle);
 __attribute__ ((visibility("default"))) void* btGImpactBvh_getPrimitiveManager(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactBvh_getRightNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) bool btGImpactBvh_hasHierarchy(void* obj);
 __attribute__ ((visibility("default"))) bool btGImpactBvh_isLeafNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) bool btGImpactBvh_isTrimesh(void* obj);
 __attribute__ ((visibility("default"))) bool btGImpactBvh_rayQuery(void* obj, const void* ray_dir, const void* ray_origin, void* collided_results);
 __attribute__ ((visibility("default"))) void btGImpactBvh_setNodeBound(void* obj, int nodeindex, const void* bound);
 __attribute__ ((visibility("default"))) void btGImpactBvh_setPrimitiveManager(void* obj, void* primitive_manager);
 __attribute__ ((visibility("default"))) void btGImpactBvh_update(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactBvh_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btGImpactCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btGImpactCollisionAlgorithm_new(const void* ci, const void* body0Wrap, const void* body1Wrap);
 __attribute__ ((visibility("default"))) int btGImpactCollisionAlgorithm_getFace0(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactCollisionAlgorithm_getFace1(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactCollisionAlgorithm_getPart0(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactCollisionAlgorithm_getPart1(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactCollisionAlgorithm_gimpact_vs_compoundshape(void* obj, const void* body0Wrap, const void* body1Wrap, const void* shape0, const void* shape1, bool swapped);
 __attribute__ ((visibility("default"))) void btGImpactCollisionAlgorithm_gimpact_vs_concave(void* obj, const void* body0Wrap, const void* body1Wrap, const void* shape0, const void* shape1, bool swapped);
 __attribute__ ((visibility("default"))) void btGImpactCollisionAlgorithm_gimpact_vs_gimpact(void* obj, const void* body0Wrap, const void* body1Wrap, const void* shape0, const void* shape1);
 __attribute__ ((visibility("default"))) void btGImpactCollisionAlgorithm_gimpact_vs_shape(void* obj, const void* body0Wrap, const void* body1Wrap, const void* shape0, const void* shape1, bool swapped);
 __attribute__ ((visibility("default"))) void* btGImpactCollisionAlgorithm_internalGetResultOut(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactCollisionAlgorithm_registerAlgorithm(void* dispatcher);
 __attribute__ ((visibility("default"))) void btGImpactCollisionAlgorithm_setFace0(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactCollisionAlgorithm_setFace1(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactCollisionAlgorithm_setPart0(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactCollisionAlgorithm_setPart1(void* obj, int value);


 __attribute__ ((visibility("default"))) void* BT_QUANTIZED_BVH_NODE_new();
 __attribute__ ((visibility("default"))) int BT_QUANTIZED_BVH_NODE_getDataIndex(void* obj);
 __attribute__ ((visibility("default"))) int BT_QUANTIZED_BVH_NODE_getEscapeIndex(void* obj);
 __attribute__ ((visibility("default"))) int BT_QUANTIZED_BVH_NODE_getEscapeIndexOrDataIndex(void* obj);
 __attribute__ ((visibility("default"))) unsigned short* BT_QUANTIZED_BVH_NODE_getQuantizedAabbMax(void* obj);
 __attribute__ ((visibility("default"))) unsigned short* BT_QUANTIZED_BVH_NODE_getQuantizedAabbMin(void* obj);
 __attribute__ ((visibility("default"))) bool BT_QUANTIZED_BVH_NODE_isLeafNode(void* obj);
 __attribute__ ((visibility("default"))) void BT_QUANTIZED_BVH_NODE_setDataIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void BT_QUANTIZED_BVH_NODE_setEscapeIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void BT_QUANTIZED_BVH_NODE_setEscapeIndexOrDataIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) bool BT_QUANTIZED_BVH_NODE_testQuantizedBoxOverlapp(void* obj, unsigned short* quantizedMin, unsigned short* quantizedMax);
 __attribute__ ((visibility("default"))) void BT_QUANTIZED_BVH_NODE_delete(void* obj);
 __attribute__ ((visibility("default"))) void* GIM_QUANTIZED_BVH_NODE_ARRAY_new();
 __attribute__ ((visibility("default"))) void GIM_QUANTIZED_BVH_NODE_ARRAY_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btQuantizedBvhTree_new();
 __attribute__ ((visibility("default"))) void btQuantizedBvhTree_build_tree(void* obj, void* primitive_boxes);
 __attribute__ ((visibility("default"))) void btQuantizedBvhTree_clearNodes(void* obj);
 __attribute__ ((visibility("default"))) const void* btQuantizedBvhTree_get_node_pointer(void* obj);
 __attribute__ ((visibility("default"))) const void* btQuantizedBvhTree_get_node_pointer2(void* obj, int index);
 __attribute__ ((visibility("default"))) int btQuantizedBvhTree_getEscapeNodeIndex(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) int btQuantizedBvhTree_getLeftNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void btQuantizedBvhTree_getNodeBound(void* obj, int nodeindex, void* bound);
 __attribute__ ((visibility("default"))) int btQuantizedBvhTree_getNodeCount(void* obj);
 __attribute__ ((visibility("default"))) int btQuantizedBvhTree_getNodeData(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) int btQuantizedBvhTree_getRightNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) bool btQuantizedBvhTree_isLeafNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void btQuantizedBvhTree_quantizePoint(void* obj, unsigned short* quantizedpoint, const void* point);
 __attribute__ ((visibility("default"))) void btQuantizedBvhTree_setNodeBound(void* obj, int nodeindex, const void* bound);
 __attribute__ ((visibility("default"))) bool btQuantizedBvhTree_testQuantizedBoxOverlapp(void* obj, int node_index, unsigned short* quantizedMin, unsigned short* quantizedMax);
 __attribute__ ((visibility("default"))) void btQuantizedBvhTree_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btGImpactQuantizedBvh_new();
 __attribute__ ((visibility("default"))) void* btGImpactQuantizedBvh_new2(void* primitive_manager);
 __attribute__ ((visibility("default"))) bool btGImpactQuantizedBvh_boxQuery(void* obj, const void* box, void* collided_results);
 __attribute__ ((visibility("default"))) bool btGImpactQuantizedBvh_boxQueryTrans(void* obj, const void* box, const void* transform, void* collided_results);
 __attribute__ ((visibility("default"))) void btGImpactQuantizedBvh_buildSet(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactQuantizedBvh_find_collision(const void* boxset1, const void* trans1, const void* boxset2, const void* trans2, void* collision_pairs);
 __attribute__ ((visibility("default"))) const void* btGImpactQuantizedBvh_get_node_pointer(void* obj);
 __attribute__ ((visibility("default"))) const void* btGImpactQuantizedBvh_get_node_pointer2(void* obj, int index);
 __attribute__ ((visibility("default"))) int btGImpactQuantizedBvh_getEscapeNodeIndex(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void* btGImpactQuantizedBvh_getGlobalBox(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactQuantizedBvh_getLeftNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void btGImpactQuantizedBvh_getNodeBound(void* obj, int nodeindex, void* bound);
 __attribute__ ((visibility("default"))) int btGImpactQuantizedBvh_getNodeCount(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactQuantizedBvh_getNodeData(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) void btGImpactQuantizedBvh_getNodeTriangle(void* obj, int nodeindex, void* triangle);
 __attribute__ ((visibility("default"))) void* btGImpactQuantizedBvh_getPrimitiveManager(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactQuantizedBvh_getRightNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) bool btGImpactQuantizedBvh_hasHierarchy(void* obj);
 __attribute__ ((visibility("default"))) bool btGImpactQuantizedBvh_isLeafNode(void* obj, int nodeindex);
 __attribute__ ((visibility("default"))) bool btGImpactQuantizedBvh_isTrimesh(void* obj);
 __attribute__ ((visibility("default"))) bool btGImpactQuantizedBvh_rayQuery(void* obj, const void* ray_dir, const void* ray_origin, void* collided_results);
 __attribute__ ((visibility("default"))) void btGImpactQuantizedBvh_setNodeBound(void* obj, int nodeindex, const void* bound);
 __attribute__ ((visibility("default"))) void btGImpactQuantizedBvh_setPrimitiveManager(void* obj, void* primitive_manager);
 __attribute__ ((visibility("default"))) void btGImpactQuantizedBvh_update(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactQuantizedBvh_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btTetrahedronShapeEx_new();
 __attribute__ ((visibility("default"))) void btTetrahedronShapeEx_setVertices(void* obj, const void* v0, const void* v1, const void* v2, const void* v3);
 __attribute__ ((visibility("default"))) bool btGImpactShapeInterface_childrenHasTransform(void* obj);
 __attribute__ ((visibility("default"))) const void* btGImpactShapeInterface_getBoxSet(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_getBulletTetrahedron(void* obj, int prim_index, void* tetrahedron);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_getBulletTriangle(void* obj, int prim_index, void* triangle);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_getChildAabb(void* obj, int child_index, const void* t, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) void* btGImpactShapeInterface_getChildShape(void* obj, int index);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_getChildTransform(void* obj, int index, void* value);
 __attribute__ ((visibility("default"))) int btGImpactShapeInterface_getGImpactShapeType(void* obj);
 __attribute__ ((visibility("default"))) const void* btGImpactShapeInterface_getLocalBox(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactShapeInterface_getNumChildShapes(void* obj);
 __attribute__ ((visibility("default"))) const void* btGImpactShapeInterface_getPrimitiveManager(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_getPrimitiveTriangle(void* obj, int index, void* triangle);
 __attribute__ ((visibility("default"))) bool btGImpactShapeInterface_hasBoxSet(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_lockChildShapes(void* obj);
 __attribute__ ((visibility("default"))) bool btGImpactShapeInterface_needsRetrieveTetrahedrons(void* obj);
 __attribute__ ((visibility("default"))) bool btGImpactShapeInterface_needsRetrieveTriangles(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_postUpdate(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_processAllTrianglesRay(void* obj, void* __unnamed0, const void* __unnamed1, const void* __unnamed2);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_rayTest(void* obj, const void* rayFrom, const void* rayTo, void* resultCallback);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_setChildTransform(void* obj, int index, const void* transform);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_unlockChildShapes(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactShapeInterface_updateBound(void* obj);
 __attribute__ ((visibility("default"))) void* btGImpactCompoundShape_CompoundPrimitiveManager_new(const void* compound);
 __attribute__ ((visibility("default"))) void* btGImpactCompoundShape_CompoundPrimitiveManager_new2(void* compoundShape);
 __attribute__ ((visibility("default"))) void* btGImpactCompoundShape_CompoundPrimitiveManager_new3();
 __attribute__ ((visibility("default"))) void* btGImpactCompoundShape_CompoundPrimitiveManager_getCompoundShape(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactCompoundShape_CompoundPrimitiveManager_setCompoundShape(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btGImpactCompoundShape_new();
 __attribute__ ((visibility("default"))) void* btGImpactCompoundShape_new2(bool children_has_transform);
 __attribute__ ((visibility("default"))) void btGImpactCompoundShape_addChildShape(void* obj, const void* localTransform, void* shape);
 __attribute__ ((visibility("default"))) void btGImpactCompoundShape_addChildShape2(void* obj, void* shape);
 __attribute__ ((visibility("default"))) void* btGImpactCompoundShape_getCompoundPrimitiveManager(void* obj);
 __attribute__ ((visibility("default"))) void* btGImpactMeshShapePart_TrimeshPrimitiveManager_new(void* meshInterface, int part);
 __attribute__ ((visibility("default"))) void* btGImpactMeshShapePart_TrimeshPrimitiveManager_new2(const void* manager);
 __attribute__ ((visibility("default"))) void* btGImpactMeshShapePart_TrimeshPrimitiveManager_new3();
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_get_bullet_triangle(void* obj, int prim_index, void* triangle);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_get_indices(void* obj, int face_index, unsigned int* i0, unsigned int* i1, unsigned int* i2b);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_get_vertex(void* obj, unsigned int vertex_index, void* vertex);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_TrimeshPrimitiveManager_get_vertex_count(void* obj);
 __attribute__ ((visibility("default"))) const unsigned char* btGImpactMeshShapePart_TrimeshPrimitiveManager_getIndexbase(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_TrimeshPrimitiveManager_getIndexstride(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_TrimeshPrimitiveManager_getIndicestype(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_TrimeshPrimitiveManager_getLock_count(void* obj);
 __attribute__ ((visibility("default"))) float btGImpactMeshShapePart_TrimeshPrimitiveManager_getMargin(void* obj);
 __attribute__ ((visibility("default"))) void* btGImpactMeshShapePart_TrimeshPrimitiveManager_getMeshInterface(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_TrimeshPrimitiveManager_getNumfaces(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_TrimeshPrimitiveManager_getNumverts(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_TrimeshPrimitiveManager_getPart(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_getScale(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_TrimeshPrimitiveManager_getStride(void* obj);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_TrimeshPrimitiveManager_getType(void* obj);
 __attribute__ ((visibility("default"))) const unsigned char* btGImpactMeshShapePart_TrimeshPrimitiveManager_getVertexbase(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_lock(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setIndexbase(void* obj, const unsigned char* value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setIndexstride(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setIndicestype(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setLock_count(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setMargin(void* obj, float value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setMeshInterface(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setNumfaces(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setNumverts(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setPart(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setScale(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setStride(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setType(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_setVertexbase(void* obj, const unsigned char* value);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_TrimeshPrimitiveManager_unlock(void* obj);
 __attribute__ ((visibility("default"))) void* btGImpactMeshShapePart_new();
 __attribute__ ((visibility("default"))) void* btGImpactMeshShapePart_new2(void* meshInterface, int part);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_getPart(void* obj);
 __attribute__ ((visibility("default"))) void* btGImpactMeshShapePart_getTrimeshPrimitiveManager(void* obj);
 __attribute__ ((visibility("default"))) void btGImpactMeshShapePart_getVertex(void* obj, int vertex_index, void* vertex);
 __attribute__ ((visibility("default"))) int btGImpactMeshShapePart_getVertexCount(void* obj);
 __attribute__ ((visibility("default"))) void* btGImpactMeshShape_new(void* meshInterface);
 __attribute__ ((visibility("default"))) void* btGImpactMeshShape_getMeshInterface(void* obj);
 __attribute__ ((visibility("default"))) void* btGImpactMeshShape_getMeshPart(void* obj, int index);
 __attribute__ ((visibility("default"))) int btGImpactMeshShape_getMeshPartCount(void* obj);


 __attribute__ ((visibility("default"))) void* btGjkConvexCast_new(const void* convexA, const void* convexB, void* simplexSolver);


 __attribute__ ((visibility("default"))) void* btGjkEpaPenetrationDepthSolver_new();


 __attribute__ ((visibility("default"))) void* btGjkPairDetector_new(const void* objectA, const void* objectB, void* simplexSolver, void* penetrationDepthSolver);
 __attribute__ ((visibility("default"))) void* btGjkPairDetector_new2(const void* objectA, const void* objectB, int shapeTypeA, int shapeTypeB, float marginA, float marginB, void* simplexSolver, void* penetrationDepthSolver);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_getCachedSeparatingAxis(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btGjkPairDetector_getCachedSeparatingDistance(void* obj);
 __attribute__ ((visibility("default"))) int btGjkPairDetector_getCatchDegeneracies(void* obj);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_getClosestPointsNonVirtual(void* obj, const void* input, void* output, void* debugDraw);
 __attribute__ ((visibility("default"))) int btGjkPairDetector_getCurIter(void* obj);
 __attribute__ ((visibility("default"))) int btGjkPairDetector_getDegenerateSimplex(void* obj);
 __attribute__ ((visibility("default"))) int btGjkPairDetector_getFixContactNormalDirection(void* obj);
 __attribute__ ((visibility("default"))) int btGjkPairDetector_getLastUsedMethod(void* obj);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setCachedSeparatingAxis(void* obj, const void* seperatingAxis);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setCatchDegeneracies(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setCurIter(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setDegenerateSimplex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setFixContactNormalDirection(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setIgnoreMargin(void* obj, bool ignoreMargin);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setLastUsedMethod(void* obj, int value);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setMinkowskiA(void* obj, const void* minkA);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setMinkowskiB(void* obj, const void* minkB);
 __attribute__ ((visibility("default"))) void btGjkPairDetector_setPenetrationDepthSolver(void* obj, void* penetrationDepthSolver);


 __attribute__ ((visibility("default"))) void* btHeightfieldTerrainShape_new(int heightStickWidth, int heightStickLength, const void* heightfieldData, float heightScale, float minHeight, float maxHeight, int upAxis, int heightDataType, bool flipQuadEdges);
 __attribute__ ((visibility("default"))) void* btHeightfieldTerrainShape_new2(int heightStickWidth, int heightStickLength, const void* heightfieldData, float maxHeight, int upAxis, bool useFloatData, bool flipQuadEdges);
 __attribute__ ((visibility("default"))) void btHeightfieldTerrainShape_setUseDiamondSubdivision(void* obj);
 __attribute__ ((visibility("default"))) void btHeightfieldTerrainShape_setUseDiamondSubdivision2(void* obj, bool useDiamondSubdivision);
 __attribute__ ((visibility("default"))) void btHeightfieldTerrainShape_setUseZigzagSubdivision(void* obj);
 __attribute__ ((visibility("default"))) void btHeightfieldTerrainShape_setUseZigzagSubdivision2(void* obj, bool useZigzagSubdivision);


 __attribute__ ((visibility("default"))) void* btHinge2Constraint_new(void* rbA, void* rbB, void* anchor, void* axis1, void* axis2);
 __attribute__ ((visibility("default"))) void btHinge2Constraint_getAnchor(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btHinge2Constraint_getAnchor2(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btHinge2Constraint_getAngle1(void* obj);
 __attribute__ ((visibility("default"))) float btHinge2Constraint_getAngle2(void* obj);
 __attribute__ ((visibility("default"))) void btHinge2Constraint_getAxis1(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btHinge2Constraint_getAxis2(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btHinge2Constraint_setLowerLimit(void* obj, float ang1min);
 __attribute__ ((visibility("default"))) void btHinge2Constraint_setUpperLimit(void* obj, float ang1max);


 __attribute__ ((visibility("default"))) void* btHingeConstraint_new(void* rbA, void* rbB, const void* pivotInA, const void* pivotInB, const void* axisInA, const void* axisInB);
 __attribute__ ((visibility("default"))) void* btHingeConstraint_new2(void* rbA, void* rbB, const void* pivotInA, const void* pivotInB, const void* axisInA, const void* axisInB, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btHingeConstraint_new3(void* rbA, const void* pivotInA, const void* axisInA);
 __attribute__ ((visibility("default"))) void* btHingeConstraint_new4(void* rbA, const void* pivotInA, const void* axisInA, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btHingeConstraint_new5(void* rbA, void* rbB, const void* rbAFrame, const void* rbBFrame);
 __attribute__ ((visibility("default"))) void* btHingeConstraint_new6(void* rbA, void* rbB, const void* rbAFrame, const void* rbBFrame, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btHingeConstraint_new7(void* rbA, const void* rbAFrame);
 __attribute__ ((visibility("default"))) void* btHingeConstraint_new8(void* rbA, const void* rbAFrame, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void btHingeConstraint_enableAngularMotor(void* obj, bool enableMotor, float targetVelocity, float maxMotorImpulse);
 __attribute__ ((visibility("default"))) void btHingeConstraint_enableMotor(void* obj, bool enableMotor);
 __attribute__ ((visibility("default"))) void btHingeConstraint_getAFrame(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btHingeConstraint_getAngularOnly(void* obj);
 __attribute__ ((visibility("default"))) void btHingeConstraint_getBFrame(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btHingeConstraint_getEnableAngularMotor(void* obj);
 __attribute__ ((visibility("default"))) int btHingeConstraint_getFlags(void* obj);
 __attribute__ ((visibility("default"))) void btHingeConstraint_getFrameOffsetA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btHingeConstraint_getFrameOffsetB(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getHingeAngle(void* obj, const void* transA, const void* transB);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getHingeAngle2(void* obj);
 __attribute__ ((visibility("default"))) void btHingeConstraint_getInfo1NonVirtual(void* obj, void* info);
 __attribute__ ((visibility("default"))) void btHingeConstraint_getInfo2Internal(void* obj, void* info, const void* transA, const void* transB, const void* angVelA, const void* angVelB);
 __attribute__ ((visibility("default"))) void btHingeConstraint_getInfo2InternalUsingFrameOffset(void* obj, void* info, const void* transA, const void* transB, const void* angVelA, const void* angVelB);
 __attribute__ ((visibility("default"))) void btHingeConstraint_getInfo2NonVirtual(void* obj, void* info, const void* transA, const void* transB, const void* angVelA, const void* angVelB);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getLimitBiasFactor(void* obj);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getLimitRelaxationFactor(void* obj);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getLimitSign(void* obj);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getLimitSoftness(void* obj);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getLowerLimit(void* obj);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getMaxMotorImpulse(void* obj);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getMotorTargetVelosity(void* obj);
 __attribute__ ((visibility("default"))) int btHingeConstraint_getSolveLimit(void* obj);
 __attribute__ ((visibility("default"))) float btHingeConstraint_getUpperLimit(void* obj);
 __attribute__ ((visibility("default"))) bool btHingeConstraint_getUseFrameOffset(void* obj);
 __attribute__ ((visibility("default"))) bool btHingeConstraint_getUseReferenceFrameA(void* obj);
 __attribute__ ((visibility("default"))) bool btHingeConstraint_hasLimit(void* obj);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setAngularOnly(void* obj, bool angularOnly);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setAxis(void* obj, void* axisInA);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setFrames(void* obj, const void* frameA, const void* frameB);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setLimit(void* obj, float low, float high);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setLimit2(void* obj, float low, float high, float _softness);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setLimit3(void* obj, float low, float high, float _softness, float _biasFactor);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setLimit4(void* obj, float low, float high, float _softness, float _biasFactor, float _relaxationFactor);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setMaxMotorImpulse(void* obj, float maxMotorImpulse);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setMotorTarget(void* obj, float targetAngle, float dt);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setMotorTarget2(void* obj, const void* qAinB, float dt);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setMotorTargetVelocity(void* obj, float motorTargetVelocity);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setUseFrameOffset(void* obj, bool frameOffsetOnOff);
 __attribute__ ((visibility("default"))) void btHingeConstraint_setUseReferenceFrameA(void* obj, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void btHingeConstraint_testLimit(void* obj, const void* transA, const void* transB);
 __attribute__ ((visibility("default"))) void btHingeConstraint_updateRHS(void* obj, float timeStep);
 __attribute__ ((visibility("default"))) void* btHingeAccumulatedAngleConstraint_new(void* rbA, void* rbB, const void* pivotInA, const void* pivotInB, const void* axisInA, const void* axisInB);
 __attribute__ ((visibility("default"))) void* btHingeAccumulatedAngleConstraint_new2(void* rbA, void* rbB, const void* pivotInA, const void* pivotInB, const void* axisInA, const void* axisInB, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btHingeAccumulatedAngleConstraint_new3(void* rbA, const void* pivotInA, const void* axisInA);
 __attribute__ ((visibility("default"))) void* btHingeAccumulatedAngleConstraint_new4(void* rbA, const void* pivotInA, const void* axisInA, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btHingeAccumulatedAngleConstraint_new5(void* rbA, void* rbB, const void* rbAFrame, const void* rbBFrame);
 __attribute__ ((visibility("default"))) void* btHingeAccumulatedAngleConstraint_new6(void* rbA, void* rbB, const void* rbAFrame, const void* rbBFrame, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btHingeAccumulatedAngleConstraint_new7(void* rbA, const void* rbAFrame);
 __attribute__ ((visibility("default"))) void* btHingeAccumulatedAngleConstraint_new8(void* rbA, const void* rbAFrame, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) float btHingeAccumulatedAngleConstraint_getAccumulatedHingeAngle(void* obj);
 __attribute__ ((visibility("default"))) void btHingeAccumulatedAngleConstraint_setAccumulatedHingeAngle(void* obj, float accAngle);


 __attribute__ ((visibility("default"))) void* btIDebugDrawWrapper_new(void* debugDrawGCHandle,
  void* drawAabbCallback, void* drawArcCallback,
  void* drawBoxCallback,
  void* drawCapsuleCallback, void* drawConeCallback,
  void* drawContactPointCallback, void* drawCylinderCallback,
  void* drawLineCallback,
  void* drawPlaneCallback, void* drawSphereCallback,
  void* drawSpherePatchCallback,
  void* drawTransformCallback, void* drawTriangleCallback,
  void* getDebugModeCallback, void* cb);
 __attribute__ ((visibility("default"))) void* btIDebugDrawWrapper_getGCHandle(void* obj);
 __attribute__ ((visibility("default"))) void btIDebugDraw_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btKinematicCharacterController_new(void* ghostObject, void* convexShape, float stepHeight);
 __attribute__ ((visibility("default"))) void* btKinematicCharacterController_new2(void* ghostObject, void* convexShape, float stepHeight, int upAxis);
 __attribute__ ((visibility("default"))) void* btKinematicCharacterController_getGhostObject(void* obj);
 __attribute__ ((visibility("default"))) float btKinematicCharacterController_getGravity(void* obj);
 __attribute__ ((visibility("default"))) float btKinematicCharacterController_getMaxSlope(void* obj);
 __attribute__ ((visibility("default"))) void btKinematicCharacterController_setFallSpeed(void* obj, float fallSpeed);
 __attribute__ ((visibility("default"))) void btKinematicCharacterController_setGravity(void* obj, float gravity);
 __attribute__ ((visibility("default"))) void btKinematicCharacterController_setJumpSpeed(void* obj, float jumpSpeed);
 __attribute__ ((visibility("default"))) void btKinematicCharacterController_setMaxJumpHeight(void* obj, float maxJumpHeight);
 __attribute__ ((visibility("default"))) void btKinematicCharacterController_setMaxSlope(void* obj, float slopeRadians);
 __attribute__ ((visibility("default"))) void btKinematicCharacterController_setUpAxis(void* obj, int axis);
 __attribute__ ((visibility("default"))) void btKinematicCharacterController_setUseGhostSweepTest(void* obj, bool useGhostObjectSweepTest);


 __attribute__ ((visibility("default"))) void* btManifoldPoint_new();
 __attribute__ ((visibility("default"))) void* btManifoldPoint_new2(const void* pointA, const void* pointB, const void* normal, float distance);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getAppliedImpulse(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getAppliedImpulseLateral1(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getAppliedImpulseLateral2(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getCombinedFriction(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getCombinedRestitution(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getCombinedRollingFriction(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getContactCFM(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getContactERP(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getContactMotion1(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getContactMotion2(void* obj);
 __attribute__ ((visibility("default"))) int btManifoldPoint_getContactPointFlags(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getDistance(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getDistance1(void* obj);
 __attribute__ ((visibility("default"))) float btManifoldPoint_getFrictionCFM(void* obj);
 __attribute__ ((visibility("default"))) int btManifoldPoint_getIndex0(void* obj);
 __attribute__ ((visibility("default"))) int btManifoldPoint_getIndex1(void* obj);
 __attribute__ ((visibility("default"))) void btManifoldPoint_getLateralFrictionDir1(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_getLateralFrictionDir2(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btManifoldPoint_getLifeTime(void* obj);
 __attribute__ ((visibility("default"))) void btManifoldPoint_getLocalPointA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_getLocalPointB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_getNormalWorldOnB(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btManifoldPoint_getPartId0(void* obj);
 __attribute__ ((visibility("default"))) int btManifoldPoint_getPartId1(void* obj);
 __attribute__ ((visibility("default"))) void btManifoldPoint_getPositionWorldOnA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_getPositionWorldOnB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btManifoldPoint_getUserPersistentData(void* obj);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setAppliedImpulse(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setAppliedImpulseLateral1(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setAppliedImpulseLateral2(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setCombinedFriction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setCombinedRestitution(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setCombinedRollingFriction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setContactCFM(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setContactERP(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setContactMotion1(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setContactMotion2(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setContactPointFlags(void* obj, int value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setDistance(void* obj, float dist);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setDistance1(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setFrictionCFM(void* obj, float value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setIndex0(void* obj, int value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setIndex1(void* obj, int value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setLateralFrictionDir1(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setLateralFrictionDir2(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setLifeTime(void* obj, int value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setLocalPointA(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setLocalPointB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setNormalWorldOnB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setPartId0(void* obj, int value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setPartId1(void* obj, int value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setPositionWorldOnA(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setPositionWorldOnB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_setUserPersistentData(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btManifoldPoint_delete(void* obj);
 __attribute__ ((visibility("default"))) void* getGContactAddedCallback();
 __attribute__ ((visibility("default"))) void setGContactAddedCallback(void* value);


 __attribute__ ((visibility("default"))) void* btManifoldResult_new();
 __attribute__ ((visibility("default"))) void* btManifoldResult_new2(const void* body0Wrap, const void* body1Wrap);
 __attribute__ ((visibility("default"))) float btManifoldResult_calculateCombinedFriction(const void* body0, const void* body1);
 __attribute__ ((visibility("default"))) float btManifoldResult_calculateCombinedRestitution(const void* body0, const void* body1);
 __attribute__ ((visibility("default"))) const void* btManifoldResult_getBody0Internal(void* obj);
 __attribute__ ((visibility("default"))) const void* btManifoldResult_getBody0Wrap(void* obj);
 __attribute__ ((visibility("default"))) const void* btManifoldResult_getBody1Internal(void* obj);
 __attribute__ ((visibility("default"))) const void* btManifoldResult_getBody1Wrap(void* obj);
 __attribute__ ((visibility("default"))) void* btManifoldResult_getPersistentManifold(void* obj);
 __attribute__ ((visibility("default"))) void btManifoldResult_refreshContactPoints(void* obj);
 __attribute__ ((visibility("default"))) void btManifoldResult_setBody0Wrap(void* obj, const void* obj0Wrap);
 __attribute__ ((visibility("default"))) void btManifoldResult_setBody1Wrap(void* obj, const void* obj1Wrap);
 __attribute__ ((visibility("default"))) void btManifoldResult_setPersistentManifold(void* obj, void* manifoldPtr);


 __attribute__ ((visibility("default"))) void* btMinkowskiPenetrationDepthSolver_new();


 __attribute__ ((visibility("default"))) void* btMinkowskiSumShape_new(const void* shapeA, const void* shapeB);
 __attribute__ ((visibility("default"))) const void* btMinkowskiSumShape_getShapeA(void* obj);
 __attribute__ ((visibility("default"))) const void* btMinkowskiSumShape_getShapeB(void* obj);
 __attribute__ ((visibility("default"))) void btMinkowskiSumShape_getTransformA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMinkowskiSumShape_GetTransformB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMinkowskiSumShape_setTransformA(void* obj, const void* transA);
 __attribute__ ((visibility("default"))) void btMinkowskiSumShape_setTransformB(void* obj, const void* transB);


 __attribute__ ((visibility("default"))) void* btMLCPSolver_new(void* solver);
 __attribute__ ((visibility("default"))) int btMLCPSolver_getNumFallbacks(void* obj);
 __attribute__ ((visibility("default"))) void btMLCPSolver_setMLCPSolver(void* obj, void* solver);
 __attribute__ ((visibility("default"))) void btMLCPSolver_setNumFallbacks(void* obj, int num);


 __attribute__ ((visibility("default"))) void btMLCPSolverInterface_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btMotionStateWrapper_new(void* getWorldTransformCallback,
  void* setWorldTransformCallback);
 __attribute__ ((visibility("default"))) void btMotionState_getWorldTransform(void* obj, void* worldTrans);
 __attribute__ ((visibility("default"))) void btMotionState_setWorldTransform(void* obj, const void* worldTrans);
 __attribute__ ((visibility("default"))) void btMotionState_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btMultiBody_new(int n_links, float mass, const void* inertia, bool fixedBase, bool canSleep);
 __attribute__ ((visibility("default"))) void btMultiBody_addBaseConstraintForce(void* obj, const void* f);
 __attribute__ ((visibility("default"))) void btMultiBody_addBaseConstraintTorque(void* obj, const void* t);
 __attribute__ ((visibility("default"))) void btMultiBody_addBaseForce(void* obj, const void* f);
 __attribute__ ((visibility("default"))) void btMultiBody_addBaseTorque(void* obj, const void* t);
 __attribute__ ((visibility("default"))) void btMultiBody_addJointTorque(void* obj, int i, float Q);
 __attribute__ ((visibility("default"))) void btMultiBody_addJointTorqueMultiDof(void* obj, int i, const float* Q);
 __attribute__ ((visibility("default"))) void btMultiBody_addJointTorqueMultiDof2(void* obj, int i, int dof, float Q);
 __attribute__ ((visibility("default"))) void btMultiBody_addLinkConstraintForce(void* obj, int i, const void* f);
 __attribute__ ((visibility("default"))) void btMultiBody_addLinkConstraintTorque(void* obj, int i, const void* t);
 __attribute__ ((visibility("default"))) void btMultiBody_addLinkForce(void* obj, int i, const void* f);
 __attribute__ ((visibility("default"))) void btMultiBody_addLinkTorque(void* obj, int i, const void* t);
 __attribute__ ((visibility("default"))) void btMultiBody_applyDeltaVeeMultiDof(void* obj, const float* delta_vee, float multiplier);
 __attribute__ ((visibility("default"))) void btMultiBody_applyDeltaVeeMultiDof2(void* obj, const float* delta_vee, float multiplier);
 __attribute__ ((visibility("default"))) void btMultiBody_calcAccelerationDeltasMultiDof(void* obj, const float* force, float* output, void* scratch_r, void* scratch_v);
 __attribute__ ((visibility("default"))) int btMultiBody_calculateSerializeBufferSize(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_checkMotionAndSleepIfRequired(void* obj, float timestep);
 __attribute__ ((visibility("default"))) void btMultiBody_clearConstraintForces(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_clearForcesAndTorques(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_clearVelocities(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_computeAccelerationsArticulatedBodyAlgorithmMultiDof(void* obj, float dt, void* scratch_r, void* scratch_v, void* scratch_m);
 __attribute__ ((visibility("default"))) void btMultiBody_computeAccelerationsArticulatedBodyAlgorithmMultiDof2(void* obj, float dt, void* scratch_r, void* scratch_v, void* scratch_m, bool isConstraintPass);
 __attribute__ ((visibility("default"))) void btMultiBody_fillConstraintJacobianMultiDof(void* obj, int link, const void* contact_point, const void* normal_ang, const void* normal_lin, float* jac, void* scratch_r, void* scratch_v, void* scratch_m);
 __attribute__ ((visibility("default"))) void btMultiBody_fillContactJacobianMultiDof(void* obj, int link, const void* contact_point, const void* normal, float* jac, void* scratch_r, void* scratch_v, void* scratch_m);
 __attribute__ ((visibility("default"))) void btMultiBody_finalizeMultiDof(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_forwardKinematics(void* obj, void* scratch_q, void* scratch_m);
 __attribute__ ((visibility("default"))) float btMultiBody_getAngularDamping(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_getAngularMomentum(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btMultiBody_getBaseCollider(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_getBaseForce(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_getBaseInertia(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btMultiBody_getBaseMass(void* obj);
 __attribute__ ((visibility("default"))) const char* btMultiBody_getBaseName(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_getBaseOmega(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_getBasePos(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_getBaseTorque(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_getBaseVel(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_getBaseWorldTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btMultiBody_getCanSleep(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBody_getCompanionId(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBody_getJointPos(void* obj, int i);
 __attribute__ ((visibility("default"))) float* btMultiBody_getJointPosMultiDof(void* obj, int i);
 __attribute__ ((visibility("default"))) float btMultiBody_getJointTorque(void* obj, int i);
 __attribute__ ((visibility("default"))) float* btMultiBody_getJointTorqueMultiDof(void* obj, int i);
 __attribute__ ((visibility("default"))) float btMultiBody_getJointVel(void* obj, int i);
 __attribute__ ((visibility("default"))) float* btMultiBody_getJointVelMultiDof(void* obj, int i);
 __attribute__ ((visibility("default"))) float btMultiBody_getKineticEnergy(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBody_getLinearDamping(void* obj);
 __attribute__ ((visibility("default"))) void* btMultiBody_getLink(void* obj, int index);
 __attribute__ ((visibility("default"))) void btMultiBody_getLinkForce(void* obj, int i, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_getLinkInertia(void* obj, int i, void* value);
 __attribute__ ((visibility("default"))) float btMultiBody_getLinkMass(void* obj, int i);
 __attribute__ ((visibility("default"))) void btMultiBody_getLinkTorque(void* obj, int i, void* value);
 __attribute__ ((visibility("default"))) float btMultiBody_getMaxAppliedImpulse(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBody_getMaxCoordinateVelocity(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBody_getNumDofs(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBody_getNumLinks(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBody_getNumPosVars(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBody_getParent(void* obj, int link_num);
 __attribute__ ((visibility("default"))) void btMultiBody_getParentToLocalRot(void* obj, int i, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_getRVector(void* obj, int i, void* value);
 __attribute__ ((visibility("default"))) bool btMultiBody_getUseGyroTerm(void* obj);
 __attribute__ ((visibility("default"))) const float* btMultiBody_getVelocityVector(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_getWorldToBaseRot(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_goToSleep(void* obj);
 __attribute__ ((visibility("default"))) bool btMultiBody_hasFixedBase(void* obj);
 __attribute__ ((visibility("default"))) bool btMultiBody_hasSelfCollision(void* obj);
 __attribute__ ((visibility("default"))) bool btMultiBody_internalNeedsJointFeedback(void* obj);
 __attribute__ ((visibility("default"))) bool btMultiBody_isAwake(void* obj);
 __attribute__ ((visibility("default"))) bool btMultiBody_isPosUpdated(void* obj);
 __attribute__ ((visibility("default"))) bool btMultiBody_isUsingGlobalVelocities(void* obj);
 __attribute__ ((visibility("default"))) bool btMultiBody_isUsingRK4Integration(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_localDirToWorld(void* obj, int i, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_localPosToWorld(void* obj, int i, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_processDeltaVeeMultiDof2(void* obj);
 __attribute__ ((visibility("default"))) const char* btMultiBody_serialize(void* obj, void* dataBuffer, void* serializer);
 __attribute__ ((visibility("default"))) void btMultiBody_setAngularDamping(void* obj, float damp);
 __attribute__ ((visibility("default"))) void btMultiBody_setBaseCollider(void* obj, void* collider);
 __attribute__ ((visibility("default"))) void btMultiBody_setBaseInertia(void* obj, const void* inertia);
 __attribute__ ((visibility("default"))) void btMultiBody_setBaseMass(void* obj, float mass);
 __attribute__ ((visibility("default"))) void btMultiBody_setBaseName(void* obj, const char* name);
 __attribute__ ((visibility("default"))) void btMultiBody_setBaseOmega(void* obj, const void* omega);
 __attribute__ ((visibility("default"))) void btMultiBody_setBasePos(void* obj, const void* pos);
 __attribute__ ((visibility("default"))) void btMultiBody_setBaseVel(void* obj, const void* vel);
 __attribute__ ((visibility("default"))) void btMultiBody_setBaseWorldTransform(void* obj, const void* tr);
 __attribute__ ((visibility("default"))) void btMultiBody_setCanSleep(void* obj, bool canSleep);
 __attribute__ ((visibility("default"))) void btMultiBody_setCompanionId(void* obj, int id);
 __attribute__ ((visibility("default"))) void btMultiBody_setHasSelfCollision(void* obj, bool hasSelfCollision);
 __attribute__ ((visibility("default"))) void btMultiBody_setJointPos(void* obj, int i, float q);
 __attribute__ ((visibility("default"))) void btMultiBody_setJointPosMultiDof(void* obj, int i, float* q);
 __attribute__ ((visibility("default"))) void btMultiBody_setJointVel(void* obj, int i, float qdot);
 __attribute__ ((visibility("default"))) void btMultiBody_setJointVelMultiDof(void* obj, int i, float* qdot);
 __attribute__ ((visibility("default"))) void btMultiBody_setLinearDamping(void* obj, float damp);
 __attribute__ ((visibility("default"))) void btMultiBody_setMaxAppliedImpulse(void* obj, float maxImp);
 __attribute__ ((visibility("default"))) void btMultiBody_setMaxCoordinateVelocity(void* obj, float maxVel);
 __attribute__ ((visibility("default"))) void btMultiBody_setNumLinks(void* obj, int numLinks);
 __attribute__ ((visibility("default"))) void btMultiBody_setPosUpdated(void* obj, bool updated);
 __attribute__ ((visibility("default"))) void btMultiBody_setupFixed(void* obj, int linkIndex, float mass, const void* inertia, int parent, const void* rotParentToThis, const void* parentComToThisPivotOffset, const void* thisPivotToThisComOffset);
 __attribute__ ((visibility("default"))) void btMultiBody_setupPlanar(void* obj, int i, float mass, const void* inertia, int parent, const void* rotParentToThis, const void* rotationAxis, const void* parentComToThisComOffset);
 __attribute__ ((visibility("default"))) void btMultiBody_setupPlanar2(void* obj, int i, float mass, const void* inertia, int parent, const void* rotParentToThis, const void* rotationAxis, const void* parentComToThisComOffset, bool disableParentCollision);
 __attribute__ ((visibility("default"))) void btMultiBody_setupPrismatic(void* obj, int i, float mass, const void* inertia, int parent, const void* rotParentToThis, const void* jointAxis, const void* parentComToThisPivotOffset, const void* thisPivotToThisComOffset, bool disableParentCollision);
 __attribute__ ((visibility("default"))) void btMultiBody_setupRevolute(void* obj, int linkIndex, float mass, const void* inertia, int parentIndex, const void* rotParentToThis, const void* jointAxis, const void* parentComToThisPivotOffset, const void* thisPivotToThisComOffset);
 __attribute__ ((visibility("default"))) void btMultiBody_setupRevolute2(void* obj, int linkIndex, float mass, const void* inertia, int parentIndex, const void* rotParentToThis, const void* jointAxis, const void* parentComToThisPivotOffset, const void* thisPivotToThisComOffset, bool disableParentCollision);
 __attribute__ ((visibility("default"))) void btMultiBody_setupSpherical(void* obj, int linkIndex, float mass, const void* inertia, int parent, const void* rotParentToThis, const void* parentComToThisPivotOffset, const void* thisPivotToThisComOffset);
 __attribute__ ((visibility("default"))) void btMultiBody_setupSpherical2(void* obj, int linkIndex, float mass, const void* inertia, int parent, const void* rotParentToThis, const void* parentComToThisPivotOffset, const void* thisPivotToThisComOffset, bool disableParentCollision);
 __attribute__ ((visibility("default"))) void btMultiBody_setUseGyroTerm(void* obj, bool useGyro);
 __attribute__ ((visibility("default"))) void btMultiBody_setWorldToBaseRot(void* obj, const void* rot);
 __attribute__ ((visibility("default"))) void btMultiBody_stepPositionsMultiDof(void* obj, float dt);
 __attribute__ ((visibility("default"))) void btMultiBody_stepPositionsMultiDof2(void* obj, float dt, float* pq);
 __attribute__ ((visibility("default"))) void btMultiBody_stepPositionsMultiDof3(void* obj, float dt, float* pq, float* pqd);
 __attribute__ ((visibility("default"))) void btMultiBody_updateCollisionObjectWorldTransforms(void* obj, void* scratch_q, void* scratch_m);
 __attribute__ ((visibility("default"))) void btMultiBody_useGlobalVelocities(void* obj, bool use);
 __attribute__ ((visibility("default"))) void btMultiBody_useRK4Integration(void* obj, bool use);
 __attribute__ ((visibility("default"))) void btMultiBody_wakeUp(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBody_worldDirToLocal(void* obj, int i, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_worldPosToLocal(void* obj, int i, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btMultiBody_delete(void* obj);


 __attribute__ ((visibility("default"))) void btMultiBodyConstraint_allocateJacobiansMultiDof(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBodyConstraint_createConstraintRows(void* obj, void* constraintRows, void* data, const void* infoGlobal);
 __attribute__ ((visibility("default"))) void btMultiBodyConstraint_debugDraw(void* obj, void* drawer);
 __attribute__ ((visibility("default"))) void btMultiBodyConstraint_finalizeMultiDof(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodyConstraint_getAppliedImpulse(void* obj, int dof);
 __attribute__ ((visibility("default"))) int btMultiBodyConstraint_getIslandIdA(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodyConstraint_getIslandIdB(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodyConstraint_getMaxAppliedImpulse(void* obj);
 __attribute__ ((visibility("default"))) void* btMultiBodyConstraint_getMultiBodyA(void* obj);
 __attribute__ ((visibility("default"))) void* btMultiBodyConstraint_getMultiBodyB(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodyConstraint_getNumRows(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodyConstraint_getPosition(void* obj, int row);
 __attribute__ ((visibility("default"))) void btMultiBodyConstraint_internalSetAppliedImpulse(void* obj, int dof, float appliedImpulse);
 __attribute__ ((visibility("default"))) bool btMultiBodyConstraint_isUnilateral(void* obj);
 __attribute__ ((visibility("default"))) float* btMultiBodyConstraint_jacobianA(void* obj, int row);
 __attribute__ ((visibility("default"))) float* btMultiBodyConstraint_jacobianB(void* obj, int row);
 __attribute__ ((visibility("default"))) void btMultiBodyConstraint_setMaxAppliedImpulse(void* obj, float maxImp);
 __attribute__ ((visibility("default"))) void btMultiBodyConstraint_setPosition(void* obj, int row, float pos);
 __attribute__ ((visibility("default"))) void btMultiBodyConstraint_updateJacobianSizes(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBodyConstraint_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btMultiBodyConstraintSolver_new();
 __attribute__ ((visibility("default"))) float btMultiBodyConstraintSolver_solveGroupCacheFriendlyFinish(void* obj, void** bodies, int numBodies, const void* infoGlobal);
 __attribute__ ((visibility("default"))) void btMultiBodyConstraintSolver_solveMultiBodyGroup(void* obj, void** bodies, int numBodies, void** manifold, int numManifolds, void** constraints, int numConstraints, void** multiBodyConstraints, int numMultiBodyConstraints, const void* info, void* debugDrawer, void* dispatcher);


 __attribute__ ((visibility("default"))) void* btMultiBodyDynamicsWorld_new(void* dispatcher, void* pairCache, void* constraintSolver, void* collisionConfiguration);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_addMultiBody(void* obj, void* body);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_addMultiBody2(void* obj, void* body, short group);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_addMultiBody3(void* obj, void* body, short group, short mask);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_addMultiBodyConstraint(void* obj, void* constraint);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_clearMultiBodyConstraintForces(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_clearMultiBodyForces(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_debugDrawMultiBodyConstraint(void* obj, void* constraint);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_forwardKinematics(void* obj);
 __attribute__ ((visibility("default"))) void* btMultiBodyDynamicsWorld_getMultiBody(void* obj, int mbIndex);
 __attribute__ ((visibility("default"))) void* btMultiBodyDynamicsWorld_getMultiBodyConstraint(void* obj, int constraintIndex);
 __attribute__ ((visibility("default"))) int btMultiBodyDynamicsWorld_getNumMultibodies(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodyDynamicsWorld_getNumMultiBodyConstraints(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_integrateTransforms(void* obj, float timeStep);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_removeMultiBody(void* obj, void* body);
 __attribute__ ((visibility("default"))) void btMultiBodyDynamicsWorld_removeMultiBodyConstraint(void* obj, void* constraint);


 __attribute__ ((visibility("default"))) void* btMultiBodyJointLimitConstraint_new(void* body, int link, float lower, float upper);


 __attribute__ ((visibility("default"))) void* btMultiBodyJointMotor_new(void* body, int link, float desiredVelocity, float maxMotorImpulse);
 __attribute__ ((visibility("default"))) void* btMultiBodyJointMotor_new2(void* body, int link, int linkDoF, float desiredVelocity, float maxMotorImpulse);
 __attribute__ ((visibility("default"))) void btMultiBodyJointMotor_setVelocityTarget(void* obj, float velTarget);


 __attribute__ ((visibility("default"))) void* btMultibodyLink_getAbsFrameLocVelocity(void* obj);
 __attribute__ ((visibility("default"))) void* btMultibodyLink_getAbsFrameTotVelocity(void* obj);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getAppliedConstraintForce(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getAppliedConstraintTorque(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getAppliedForce(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getAppliedTorque(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btMultibodyLink_getAxes(void* obj);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getAxisBottom(void* obj, int dof, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getAxisTop(void* obj, int dof, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getCachedRotParentToThis(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getCachedRVector(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getCachedWorldTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btMultibodyLink_getCfgOffset(void* obj);
 __attribute__ ((visibility("default"))) void* btMultibodyLink_getCollider(void* obj);
 __attribute__ ((visibility("default"))) int btMultibodyLink_getDofCount(void* obj);
 __attribute__ ((visibility("default"))) int btMultibodyLink_getDofOffset(void* obj);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getDVector(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getEVector(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btMultibodyLink_getFlags(void* obj);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getInertiaLocal(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btMultibodyLink_getJointDamping(void* obj);
 __attribute__ ((visibility("default"))) void* btMultibodyLink_getJointFeedback(void* obj);
 __attribute__ ((visibility("default"))) float btMultibodyLink_getJointFriction(void* obj);
 __attribute__ ((visibility("default"))) const char* btMultibodyLink_getJointName(void* obj);
 __attribute__ ((visibility("default"))) float* btMultibodyLink_getJointPos(void* obj);
 __attribute__ ((visibility("default"))) float* btMultibodyLink_getJointTorque(void* obj);
 __attribute__ ((visibility("default"))) int btMultibodyLink_getJointType(void* obj);
 __attribute__ ((visibility("default"))) const char* btMultibodyLink_getLinkName(void* obj);
 __attribute__ ((visibility("default"))) float btMultibodyLink_getMass(void* obj);
 __attribute__ ((visibility("default"))) int btMultibodyLink_getParent(void* obj);
 __attribute__ ((visibility("default"))) int btMultibodyLink_getPosVarCount(void* obj);
 __attribute__ ((visibility("default"))) void btMultibodyLink_getZeroRotParentToThis(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setAppliedConstraintForce(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setAppliedConstraintTorque(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setAppliedForce(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setAppliedTorque(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setAxisBottom(void* obj, int dof, float x, float y, float z);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setAxisBottom2(void* obj, int dof, const void* axis);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setAxisTop(void* obj, int dof, float x, float y, float z);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setAxisTop2(void* obj, int dof, const void* axis);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setCachedRotParentToThis(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setCachedRVector(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setCachedWorldTransform(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setCfgOffset(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setCollider(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setDofCount(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setDofOffset(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setDVector(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setEVector(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setFlags(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setInertiaLocal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setJointDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setJointFeedback(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setJointFriction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setJointName(void* obj, const char* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setJointType(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setLinkName(void* obj, const char* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setMass(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setParent(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setPosVarCount(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_setZeroRotParentToThis(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultibodyLink_updateCacheMultiDof(void* obj);
 __attribute__ ((visibility("default"))) void btMultibodyLink_updateCacheMultiDof2(void* obj, float* pq);


 __attribute__ ((visibility("default"))) void* btMultiBodyLinkCollider_new(void* multiBody, int link);
 __attribute__ ((visibility("default"))) int btMultiBodyLinkCollider_getLink(void* obj);
 __attribute__ ((visibility("default"))) void* btMultiBodyLinkCollider_getMultiBody(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBodyLinkCollider_setLink(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodyLinkCollider_setMultiBody(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btMultiBodyLinkCollider_upcast(void* colObj);


 __attribute__ ((visibility("default"))) void* btMultiBodyPoint2Point_new(void* body, int link, void* bodyB, const void* pivotInA, const void* pivotInB);
 __attribute__ ((visibility("default"))) void* btMultiBodyPoint2Point_new2(void* bodyA, int linkA, void* bodyB, int linkB, const void* pivotInA, const void* pivotInB);
 __attribute__ ((visibility("default"))) void btMultiBodyPoint2Point_getPivotInB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBodyPoint2Point_setPivotInB(void* obj, const void* pivotInB);


 __attribute__ ((visibility("default"))) void* btMultiBodySolverConstraint_new();
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_getAngularComponentA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_getAngularComponentB(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getAppliedImpulse(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getAppliedPushImpulse(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getCfm(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_getContactNormal1(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_getContactNormal2(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getDeltaVelAindex(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getDeltaVelBindex(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getFriction(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getFrictionIndex(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getJacAindex(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getJacBindex(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getJacDiagABInv(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getLinkA(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getLinkB(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getLowerLimit(void* obj);
 __attribute__ ((visibility("default"))) void* btMultiBodySolverConstraint_getMultiBodyA(void* obj);
 __attribute__ ((visibility("default"))) void* btMultiBodySolverConstraint_getMultiBodyB(void* obj);
 __attribute__ ((visibility("default"))) void* btMultiBodySolverConstraint_getOrgConstraint(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getOrgDofIndex(void* obj);
 __attribute__ ((visibility("default"))) void* btMultiBodySolverConstraint_getOriginalContactPoint(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getOverrideNumSolverIterations(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_getRelpos1CrossNormal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_getRelpos2CrossNormal(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getRhs(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getRhsPenetration(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getSolverBodyIdA(void* obj);
 __attribute__ ((visibility("default"))) int btMultiBodySolverConstraint_getSolverBodyIdB(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getUnusedPadding4(void* obj);
 __attribute__ ((visibility("default"))) float btMultiBodySolverConstraint_getUpperLimit(void* obj);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setAngularComponentA(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setAngularComponentB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setAppliedImpulse(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setAppliedPushImpulse(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setCfm(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setContactNormal1(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setContactNormal2(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setDeltaVelAindex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setDeltaVelBindex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setFriction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setFrictionIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setJacAindex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setJacBindex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setJacDiagABInv(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setLinkA(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setLinkB(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setLowerLimit(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setMultiBodyA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setMultiBodyB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setOrgConstraint(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setOrgDofIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setOriginalContactPoint(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setOverrideNumSolverIterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setRelpos1CrossNormal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setRelpos2CrossNormal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setRhs(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setRhsPenetration(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setSolverBodyIdA(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setSolverBodyIdB(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setUnusedPadding4(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_setUpperLimit(void* obj, float value);
 __attribute__ ((visibility("default"))) void btMultiBodySolverConstraint_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btMultimaterialTriangleMeshShape_new(void* meshInterface, bool useQuantizedAabbCompression);
 __attribute__ ((visibility("default"))) void* btMultimaterialTriangleMeshShape_new2(void* meshInterface, bool useQuantizedAabbCompression, bool buildBvh);
 __attribute__ ((visibility("default"))) void* btMultimaterialTriangleMeshShape_new3(void* meshInterface, bool useQuantizedAabbCompression, const void* bvhAabbMin, const void* bvhAabbMax);
 __attribute__ ((visibility("default"))) void* btMultimaterialTriangleMeshShape_new4(void* meshInterface, bool useQuantizedAabbCompression, const void* bvhAabbMin, const void* bvhAabbMax, bool buildBvh);
 __attribute__ ((visibility("default"))) const void* btMultimaterialTriangleMeshShape_getMaterialProperties(void* obj, int partID, int triIndex);


 __attribute__ ((visibility("default"))) void* btMultiSphereShape_new(const float* positions, const float* radi, int numSpheres);
 __attribute__ ((visibility("default"))) void* btMultiSphereShape_new2(const void* positions, const float* radi, int numSpheres);
 __attribute__ ((visibility("default"))) int btMultiSphereShape_getSphereCount(void* obj);
 __attribute__ ((visibility("default"))) void btMultiSphereShape_getSpherePosition(void* obj, int index, void* value);
 __attribute__ ((visibility("default"))) float btMultiSphereShape_getSphereRadius(void* obj, int index);


 __attribute__ ((visibility("default"))) void* btNNCGConstraintSolver_new();
 __attribute__ ((visibility("default"))) bool btNNCGConstraintSolver_getOnlyForNoneContact(void* obj);
 __attribute__ ((visibility("default"))) void btNNCGConstraintSolver_setOnlyForNoneContact(void* obj, bool value);


 __attribute__ ((visibility("default"))) void* btOptimizedBvh_new();
 __attribute__ ((visibility("default"))) void btOptimizedBvh_build(void* obj, void* triangles, bool useQuantizedAabbCompression, const void* bvhAabbMin, const void* bvhAabbMax);
 __attribute__ ((visibility("default"))) void* btOptimizedBvh_deSerializeInPlace(void* i_alignedDataBuffer, unsigned int i_dataBufferSize, bool i_swapEndian);
 __attribute__ ((visibility("default"))) void btOptimizedBvh_refit(void* obj, void* triangles, const void* aabbMin, const void* aabbMax);
 __attribute__ ((visibility("default"))) void btOptimizedBvh_refitPartial(void* obj, void* triangles, const void* aabbMin, const void* aabbMax);
 __attribute__ ((visibility("default"))) bool btOptimizedBvh_serializeInPlace(void* obj, void* o_alignedDataBuffer, unsigned int i_dataBufferSize, bool i_swapEndian);
 __attribute__ ((visibility("default"))) void btOptimizedBvh_updateBvhNodes(void* obj, void* meshInterface, int firstNode, int endNode, int index);


 __attribute__ ((visibility("default"))) bool btOverlapCallback_processOverlap(void* obj, void* pair);
 __attribute__ ((visibility("default"))) void btOverlapCallback_delete(void* obj);
 __attribute__ ((visibility("default"))) bool btOverlapFilterCallback_needBroadphaseCollision(void* obj, void* proxy0, void* proxy1);
 __attribute__ ((visibility("default"))) void btOverlapFilterCallback_delete(void* obj);
 __attribute__ ((visibility("default"))) void btOverlappingPairCache_cleanOverlappingPair(void* obj, void* pair, void* dispatcher);
 __attribute__ ((visibility("default"))) void btOverlappingPairCache_cleanProxyFromPairs(void* obj, void* proxy, void* dispatcher);
 __attribute__ ((visibility("default"))) void* btOverlappingPairCache_findPair(void* obj, void* proxy0, void* proxy1);
 __attribute__ ((visibility("default"))) int btOverlappingPairCache_getNumOverlappingPairs(void* obj);
 __attribute__ ((visibility("default"))) void* btOverlappingPairCache_getOverlappingPairArray(void* obj);
 __attribute__ ((visibility("default"))) void* btOverlappingPairCache_getOverlappingPairArrayPtr(void* obj);
 __attribute__ ((visibility("default"))) bool btOverlappingPairCache_hasDeferredRemoval(void* obj);
 __attribute__ ((visibility("default"))) void btOverlappingPairCache_processAllOverlappingPairs(void* obj, void* __unnamed0, void* dispatcher);
 __attribute__ ((visibility("default"))) void btOverlappingPairCache_setInternalGhostPairCallback(void* obj, void* ghostPairCallback);
 __attribute__ ((visibility("default"))) void btOverlappingPairCache_setOverlapFilterCallback(void* obj, void* callback);
 __attribute__ ((visibility("default"))) void btOverlappingPairCache_sortOverlappingPairs(void* obj, void* dispatcher);
 __attribute__ ((visibility("default"))) void* btHashedOverlappingPairCache_new();
 __attribute__ ((visibility("default"))) int btHashedOverlappingPairCache_GetCount(void* obj);
 __attribute__ ((visibility("default"))) void* btHashedOverlappingPairCache_getOverlapFilterCallback(void* obj);
 __attribute__ ((visibility("default"))) bool btHashedOverlappingPairCache_needsBroadphaseCollision(void* obj, void* proxy0, void* proxy1);
 __attribute__ ((visibility("default"))) void* btSortedOverlappingPairCache_new();
 __attribute__ ((visibility("default"))) void* btSortedOverlappingPairCache_getOverlapFilterCallback(void* obj);
 __attribute__ ((visibility("default"))) bool btSortedOverlappingPairCache_needsBroadphaseCollision(void* obj, void* proxy0, void* proxy1);
 __attribute__ ((visibility("default"))) void* btNullPairCache_new();


 __attribute__ ((visibility("default"))) void* btOverlappingPairCallback_addOverlappingPair(void* obj, void* proxy0, void* proxy1);
 __attribute__ ((visibility("default"))) void* btOverlappingPairCallback_removeOverlappingPair(void* obj, void* proxy0, void* proxy1, void* dispatcher);
 __attribute__ ((visibility("default"))) void btOverlappingPairCallback_removeOverlappingPairsContainingProxy(void* obj, void* proxy0, void* dispatcher);
 __attribute__ ((visibility("default"))) void btOverlappingPairCallback_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btPersistentManifold_new();
 __attribute__ ((visibility("default"))) void* btPersistentManifold_new2(const void* body0, const void* body1, int __unnamed2, float contactBreakingThreshold, float contactProcessingThreshold);
 __attribute__ ((visibility("default"))) int btPersistentManifold_addManifoldPoint(void* obj, const void* newPoint);
 __attribute__ ((visibility("default"))) int btPersistentManifold_addManifoldPoint2(void* obj, const void* newPoint, bool isPredictive);
 __attribute__ ((visibility("default"))) void btPersistentManifold_clearManifold(void* obj);
 __attribute__ ((visibility("default"))) void btPersistentManifold_clearUserCache(void* obj, void* pt);
 __attribute__ ((visibility("default"))) const void* btPersistentManifold_getBody0(void* obj);
 __attribute__ ((visibility("default"))) const void* btPersistentManifold_getBody1(void* obj);
 __attribute__ ((visibility("default"))) int btPersistentManifold_getCacheEntry(void* obj, const void* newPoint);
 __attribute__ ((visibility("default"))) int btPersistentManifold_getCompanionIdA(void* obj);
 __attribute__ ((visibility("default"))) int btPersistentManifold_getCompanionIdB(void* obj);
 __attribute__ ((visibility("default"))) float btPersistentManifold_getContactBreakingThreshold(void* obj);
 __attribute__ ((visibility("default"))) void* btPersistentManifold_getContactPoint(void* obj, int index);
 __attribute__ ((visibility("default"))) float btPersistentManifold_getContactProcessingThreshold(void* obj);
 __attribute__ ((visibility("default"))) int btPersistentManifold_getIndex1a(void* obj);
 __attribute__ ((visibility("default"))) int btPersistentManifold_getNumContacts(void* obj);
 __attribute__ ((visibility("default"))) void btPersistentManifold_refreshContactPoints(void* obj, const void* trA, const void* trB);
 __attribute__ ((visibility("default"))) void btPersistentManifold_removeContactPoint(void* obj, int index);
 __attribute__ ((visibility("default"))) void btPersistentManifold_replaceContactPoint(void* obj, const void* newPoint, int insertIndex);
 __attribute__ ((visibility("default"))) void btPersistentManifold_setBodies(void* obj, const void* body0, const void* body1);
 __attribute__ ((visibility("default"))) void btPersistentManifold_setCompanionIdA(void* obj, int value);
 __attribute__ ((visibility("default"))) void btPersistentManifold_setCompanionIdB(void* obj, int value);
 __attribute__ ((visibility("default"))) void btPersistentManifold_setContactBreakingThreshold(void* obj, float contactBreakingThreshold);
 __attribute__ ((visibility("default"))) void btPersistentManifold_setContactProcessingThreshold(void* obj, float contactProcessingThreshold);
 __attribute__ ((visibility("default"))) void btPersistentManifold_setIndex1a(void* obj, int value);
 __attribute__ ((visibility("default"))) void btPersistentManifold_setNumContacts(void* obj, int cachedPoints);
 __attribute__ ((visibility("default"))) bool btPersistentManifold_validContactDistance(void* obj, const void* pt);
 __attribute__ ((visibility("default"))) void btPersistentManifold_delete(void* obj);
 __attribute__ ((visibility("default"))) void* getGContactDestroyedCallback();
 __attribute__ ((visibility("default"))) void* getGContactProcessedCallback();
 __attribute__ ((visibility("default"))) void setGContactDestroyedCallback(void* callback);
 __attribute__ ((visibility("default"))) void setGContactProcessedCallback(void* callback);


 __attribute__ ((visibility("default"))) void* btConstraintSetting_new();
 __attribute__ ((visibility("default"))) float btConstraintSetting_getDamping(void* obj);
 __attribute__ ((visibility("default"))) float btConstraintSetting_getImpulseClamp(void* obj);
 __attribute__ ((visibility("default"))) float btConstraintSetting_getTau(void* obj);
 __attribute__ ((visibility("default"))) void btConstraintSetting_setDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btConstraintSetting_setImpulseClamp(void* obj, float value);
 __attribute__ ((visibility("default"))) void btConstraintSetting_setTau(void* obj, float value);
 __attribute__ ((visibility("default"))) void btConstraintSetting_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btPoint2PointConstraint_new(void* rbA, void* rbB, const void* pivotInA, const void* pivotInB);
 __attribute__ ((visibility("default"))) void* btPoint2PointConstraint_new2(void* rbA, const void* pivotInA);
 __attribute__ ((visibility("default"))) int btPoint2PointConstraint_getFlags(void* obj);
 __attribute__ ((visibility("default"))) void btPoint2PointConstraint_getInfo1NonVirtual(void* obj, void* info);
 __attribute__ ((visibility("default"))) void btPoint2PointConstraint_getInfo2NonVirtual(void* obj, void* info, const void* body0_trans, const void* body1_trans);
 __attribute__ ((visibility("default"))) void btPoint2PointConstraint_getPivotInA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btPoint2PointConstraint_getPivotInB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btPoint2PointConstraint_getSetting(void* obj);
 __attribute__ ((visibility("default"))) bool btPoint2PointConstraint_getUseSolveConstraintObsolete(void* obj);
 __attribute__ ((visibility("default"))) void btPoint2PointConstraint_setPivotA(void* obj, const void* pivotA);
 __attribute__ ((visibility("default"))) void btPoint2PointConstraint_setPivotB(void* obj, const void* pivotB);
 __attribute__ ((visibility("default"))) void btPoint2PointConstraint_setUseSolveConstraintObsolete(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btPoint2PointConstraint_updateRHS(void* obj, float timeStep);


 __attribute__ ((visibility("default"))) void* btPointCollector_new();
 __attribute__ ((visibility("default"))) float btPointCollector_getDistance(void* obj);
 __attribute__ ((visibility("default"))) bool btPointCollector_getHasResult(void* obj);
 __attribute__ ((visibility("default"))) void btPointCollector_getNormalOnBInWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btPointCollector_getPointInWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btPointCollector_setDistance(void* obj, float value);
 __attribute__ ((visibility("default"))) void btPointCollector_setHasResult(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btPointCollector_setNormalOnBInWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btPointCollector_setPointInWorld(void* obj, const void* value);


 __attribute__ ((visibility("default"))) void* btPolarDecomposition_new();
 __attribute__ ((visibility("default"))) void* btPolarDecomposition_new2(float tolerance);
 __attribute__ ((visibility("default"))) void* btPolarDecomposition_new3(float tolerance, unsigned int maxIterations);
 __attribute__ ((visibility("default"))) unsigned int btPolarDecomposition_decompose(void* obj, const void* a, void* u, void* h);
 __attribute__ ((visibility("default"))) unsigned int btPolarDecomposition_maxIterations(void* obj);
 __attribute__ ((visibility("default"))) void btPolarDecomposition_delete(void* obj);


 __attribute__ ((visibility("default"))) const void* btPolyhedralConvexShape_getConvexPolyhedron(void* obj);
 __attribute__ ((visibility("default"))) void btPolyhedralConvexShape_getEdge(void* obj, int i, void* pa, void* pb);
 __attribute__ ((visibility("default"))) int btPolyhedralConvexShape_getNumEdges(void* obj);
 __attribute__ ((visibility("default"))) int btPolyhedralConvexShape_getNumPlanes(void* obj);
 __attribute__ ((visibility("default"))) int btPolyhedralConvexShape_getNumVertices(void* obj);
 __attribute__ ((visibility("default"))) void btPolyhedralConvexShape_getPlane(void* obj, void* planeNormal, void* planeSupport, int i);
 __attribute__ ((visibility("default"))) void btPolyhedralConvexShape_getVertex(void* obj, int i, void* vtx);
 __attribute__ ((visibility("default"))) bool btPolyhedralConvexShape_initializePolyhedralFeatures(void* obj);
 __attribute__ ((visibility("default"))) bool btPolyhedralConvexShape_initializePolyhedralFeatures2(void* obj, int shiftVerticesByMargin);
 __attribute__ ((visibility("default"))) bool btPolyhedralConvexShape_isInside(void* obj, const void* pt, float tolerance);
 __attribute__ ((visibility("default"))) void btPolyhedralConvexAabbCachingShape_getNonvirtualAabb(void* obj, const void* trans, void* aabbMin, void* aabbMax, float margin);
 __attribute__ ((visibility("default"))) void btPolyhedralConvexAabbCachingShape_recalcLocalAabb(void* obj);


 __attribute__ ((visibility("default"))) void* btQuantizedBvhNode_new();
 __attribute__ ((visibility("default"))) int btQuantizedBvhNode_getEscapeIndex(void* obj);
 __attribute__ ((visibility("default"))) int btQuantizedBvhNode_getEscapeIndexOrTriangleIndex(void* obj);
 __attribute__ ((visibility("default"))) int btQuantizedBvhNode_getPartId(void* obj);
 __attribute__ ((visibility("default"))) unsigned short* btQuantizedBvhNode_getQuantizedAabbMax(void* obj);
 __attribute__ ((visibility("default"))) unsigned short* btQuantizedBvhNode_getQuantizedAabbMin(void* obj);
 __attribute__ ((visibility("default"))) int btQuantizedBvhNode_getTriangleIndex(void* obj);
 __attribute__ ((visibility("default"))) bool btQuantizedBvhNode_isLeafNode(void* obj);
 __attribute__ ((visibility("default"))) void btQuantizedBvhNode_setEscapeIndexOrTriangleIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btQuantizedBvhNode_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btOptimizedBvhNode_new();
 __attribute__ ((visibility("default"))) void btOptimizedBvhNode_getAabbMaxOrg(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btOptimizedBvhNode_getAabbMinOrg(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btOptimizedBvhNode_getEscapeIndex(void* obj);
 __attribute__ ((visibility("default"))) int btOptimizedBvhNode_getSubPart(void* obj);
 __attribute__ ((visibility("default"))) int btOptimizedBvhNode_getTriangleIndex(void* obj);
 __attribute__ ((visibility("default"))) void btOptimizedBvhNode_setAabbMaxOrg(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btOptimizedBvhNode_setAabbMinOrg(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btOptimizedBvhNode_setEscapeIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btOptimizedBvhNode_setSubPart(void* obj, int value);
 __attribute__ ((visibility("default"))) void btOptimizedBvhNode_setTriangleIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btOptimizedBvhNode_delete(void* obj);
 __attribute__ ((visibility("default"))) void btNodeOverlapCallback_processNode(void* obj, int subPart, int triangleIndex);
 __attribute__ ((visibility("default"))) void btNodeOverlapCallback_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btQuantizedBvh_new();
 __attribute__ ((visibility("default"))) void btQuantizedBvh_buildInternal(void* obj);
 __attribute__ ((visibility("default"))) unsigned int btQuantizedBvh_calculateSerializeBufferSize(void* obj);
 __attribute__ ((visibility("default"))) int btQuantizedBvh_calculateSerializeBufferSizeNew(void* obj);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_deSerializeDouble(void* obj, void* quantizedBvhDoubleData);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_deSerializeFloat(void* obj, void* quantizedBvhFloatData);
 __attribute__ ((visibility("default"))) void* btQuantizedBvh_deSerializeInPlace(void* i_alignedDataBuffer, unsigned int i_dataBufferSize, bool i_swapEndian);
 __attribute__ ((visibility("default"))) unsigned int btQuantizedBvh_getAlignmentSerializationPadding();
 __attribute__ ((visibility("default"))) void* btQuantizedBvh_getLeafNodeArray(void* obj);
 __attribute__ ((visibility("default"))) void* btQuantizedBvh_getQuantizedNodeArray(void* obj);
 __attribute__ ((visibility("default"))) void* btQuantizedBvh_getSubtreeInfoArray(void* obj);
 __attribute__ ((visibility("default"))) bool btQuantizedBvh_isQuantized(void* obj);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_quantize(void* obj, unsigned short* out, const void* point, int isMax);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_quantizeWithClamp(void* obj, unsigned short* out, const void* point2, int isMax);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_reportAabbOverlappingNodex(void* obj, void* nodeCallback, const void* aabbMin, const void* aabbMax);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_reportBoxCastOverlappingNodex(void* obj, void* nodeCallback, const void* raySource, const void* rayTarget, const void* aabbMin, const void* aabbMax);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_reportRayOverlappingNodex(void* obj, void* nodeCallback, const void* raySource, const void* rayTarget);
 __attribute__ ((visibility("default"))) bool btQuantizedBvh_serialize(void* obj, void* o_alignedDataBuffer, unsigned int i_dataBufferSize, bool i_swapEndian);
 __attribute__ ((visibility("default"))) const char* btQuantizedBvh_serialize2(void* obj, void* dataBuffer, void* serializer);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_setQuantizationValues(void* obj, const void* bvhAabbMin, const void* bvhAabbMax);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_setQuantizationValues2(void* obj, const void* bvhAabbMin, const void* bvhAabbMax, float quantizationMargin);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_setTraversalMode(void* obj, int traversalMode);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_unQuantize(void* obj, const unsigned short* vecIn, void* value);
 __attribute__ ((visibility("default"))) void btQuantizedBvh_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btRaycastVehicle_btVehicleTuning_new();
 __attribute__ ((visibility("default"))) float btRaycastVehicle_btVehicleTuning_getFrictionSlip(void* obj);
 __attribute__ ((visibility("default"))) float btRaycastVehicle_btVehicleTuning_getMaxSuspensionForce(void* obj);
 __attribute__ ((visibility("default"))) float btRaycastVehicle_btVehicleTuning_getMaxSuspensionTravelCm(void* obj);
 __attribute__ ((visibility("default"))) float btRaycastVehicle_btVehicleTuning_getSuspensionCompression(void* obj);
 __attribute__ ((visibility("default"))) float btRaycastVehicle_btVehicleTuning_getSuspensionDamping(void* obj);
 __attribute__ ((visibility("default"))) float btRaycastVehicle_btVehicleTuning_getSuspensionStiffness(void* obj);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_btVehicleTuning_setFrictionSlip(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_btVehicleTuning_setMaxSuspensionForce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_btVehicleTuning_setMaxSuspensionTravelCm(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_btVehicleTuning_setSuspensionCompression(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_btVehicleTuning_setSuspensionDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_btVehicleTuning_setSuspensionStiffness(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_btVehicleTuning_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btRaycastVehicle_new(const void* tuning, void* chassis, void* raycaster);
 __attribute__ ((visibility("default"))) void* btRaycastVehicle_addWheel(void* obj, const void* connectionPointCS0, const void* wheelDirectionCS0, const void* wheelAxleCS, float suspensionRestLength, float wheelRadius, const void* tuning, bool isFrontWheel);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_applyEngineForce(void* obj, float force, int wheel);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_getChassisWorldTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btRaycastVehicle_getCurrentSpeedKmHour(void* obj);
 __attribute__ ((visibility("default"))) int btRaycastVehicle_getForwardAxis(void* obj);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_getForwardVector(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btRaycastVehicle_getNumWheels(void* obj);
 __attribute__ ((visibility("default"))) int btRaycastVehicle_getRightAxis(void* obj);
 __attribute__ ((visibility("default"))) void* btRaycastVehicle_getRigidBody(void* obj);
 __attribute__ ((visibility("default"))) float btRaycastVehicle_getSteeringValue(void* obj, int wheel);
 __attribute__ ((visibility("default"))) int btRaycastVehicle_getUpAxis(void* obj);
 __attribute__ ((visibility("default"))) int btRaycastVehicle_getUserConstraintId(void* obj);
 __attribute__ ((visibility("default"))) int btRaycastVehicle_getUserConstraintType(void* obj);
 __attribute__ ((visibility("default"))) void* btRaycastVehicle_getWheelInfo(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btRaycastVehicle_getWheelInfo2(void* obj);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_getWheelTransformWS(void* obj, int wheelIndex, void* value);
 __attribute__ ((visibility("default"))) float btRaycastVehicle_rayCast(void* obj, void* wheel);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_resetSuspension(void* obj);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_setBrake(void* obj, float brake, int wheelIndex);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_setCoordinateSystem(void* obj, int rightIndex, int upIndex, int forwardIndex);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_setPitchControl(void* obj, float pitch);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_setSteeringValue(void* obj, float steering, int wheel);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_setUserConstraintId(void* obj, int uid);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_setUserConstraintType(void* obj, int userConstraintType);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_updateFriction(void* obj, float timeStep);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_updateSuspension(void* obj, float deltaTime);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_updateVehicle(void* obj, float step);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_updateWheelTransform(void* obj, int wheelIndex);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_updateWheelTransform2(void* obj, int wheelIndex, bool interpolatedTransform);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_updateWheelTransformsWS(void* obj, void* wheel);
 __attribute__ ((visibility("default"))) void btRaycastVehicle_updateWheelTransformsWS2(void* obj, void* wheel, bool interpolatedTransform);
 __attribute__ ((visibility("default"))) void* btDefaultVehicleRaycaster_new(void* world);


 __attribute__ ((visibility("default"))) void* btRigidBody_btRigidBodyConstructionInfo_new(float mass, void* motionState, void* collisionShape);
 __attribute__ ((visibility("default"))) void* btRigidBody_btRigidBodyConstructionInfo_new2(float mass, void* motionState, void* collisionShape, const void* localInertia);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getAdditionalAngularDampingFactor(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getAdditionalAngularDampingThresholdSqr(void* obj);
 __attribute__ ((visibility("default"))) bool btRigidBody_btRigidBodyConstructionInfo_getAdditionalDamping(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getAdditionalDampingFactor(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getAdditionalLinearDampingThresholdSqr(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getAngularDamping(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getAngularSleepingThreshold(void* obj);
 __attribute__ ((visibility("default"))) void* btRigidBody_btRigidBodyConstructionInfo_getCollisionShape(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getFriction(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getLinearDamping(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getLinearSleepingThreshold(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_getLocalInertia(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getMass(void* obj);
 __attribute__ ((visibility("default"))) void* btRigidBody_btRigidBodyConstructionInfo_getMotionState(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getRestitution(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_btRigidBodyConstructionInfo_getRollingFriction(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_getStartWorldTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setAdditionalAngularDampingFactor(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setAdditionalAngularDampingThresholdSqr(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setAdditionalDamping(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setAdditionalDampingFactor(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setAdditionalLinearDampingThresholdSqr(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setAngularDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setAngularSleepingThreshold(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setCollisionShape(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setFriction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setLinearDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setLinearSleepingThreshold(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setLocalInertia(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setMass(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setMotionState(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setRestitution(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setRollingFriction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_setStartWorldTransform(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_btRigidBodyConstructionInfo_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btRigidBody_new(const void* constructionInfo);
 __attribute__ ((visibility("default"))) void btRigidBody_addConstraintRef(void* obj, void* c);
 __attribute__ ((visibility("default"))) void btRigidBody_applyCentralForce(void* obj, const void* force);
 __attribute__ ((visibility("default"))) void btRigidBody_applyCentralImpulse(void* obj, const void* impulse);
 __attribute__ ((visibility("default"))) void btRigidBody_applyDamping(void* obj, float timeStep);
 __attribute__ ((visibility("default"))) void btRigidBody_applyForce(void* obj, const void* force, const void* rel_pos);
 __attribute__ ((visibility("default"))) void btRigidBody_applyGravity(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_applyImpulse(void* obj, const void* impulse, const void* rel_pos);
 __attribute__ ((visibility("default"))) void btRigidBody_applyTorque(void* obj, const void* torque);
 __attribute__ ((visibility("default"))) void btRigidBody_applyTorqueImpulse(void* obj, const void* torque);
 __attribute__ ((visibility("default"))) void btRigidBody_clearForces(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_computeAngularImpulseDenominator(void* obj, const void* axis);
 __attribute__ ((visibility("default"))) void btRigidBody_computeGyroscopicForceExplicit(void* obj, float maxGyroscopicForce, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_computeGyroscopicImpulseImplicit_Body(void* obj, float step, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_computeGyroscopicImpulseImplicit_World(void* obj, float dt, void* value);
 __attribute__ ((visibility("default"))) float btRigidBody_computeImpulseDenominator(void* obj, const void* pos, const void* normal);
 __attribute__ ((visibility("default"))) void btRigidBody_getAabb(void* obj, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) float btRigidBody_getAngularDamping(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_getAngularFactor(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btRigidBody_getAngularSleepingThreshold(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_getAngularVelocity(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btRigidBody_getBroadphaseProxy(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_getCenterOfMassPosition(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_getCenterOfMassTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btRigidBody_getConstraintRef(void* obj, int index);
 __attribute__ ((visibility("default"))) int btRigidBody_getContactSolverType(void* obj);
 __attribute__ ((visibility("default"))) int btRigidBody_getFlags(void* obj);
 __attribute__ ((visibility("default"))) int btRigidBody_getFrictionSolverType(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_getGravity(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_getInvInertiaDiagLocal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_getInvInertiaTensorWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btRigidBody_getInvMass(void* obj);
 __attribute__ ((visibility("default"))) float btRigidBody_getLinearDamping(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_getLinearFactor(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btRigidBody_getLinearSleepingThreshold(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_getLinearVelocity(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_getLocalInertia(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btRigidBody_getMotionState(void* obj);
 __attribute__ ((visibility("default"))) int btRigidBody_getNumConstraintRefs(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_getOrientation(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_getTotalForce(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_getTotalTorque(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_getVelocityInLocalPoint(void* obj, const void* rel_pos, void* value);
 __attribute__ ((visibility("default"))) void btRigidBody_integrateVelocities(void* obj, float step);
 __attribute__ ((visibility("default"))) bool btRigidBody_isInWorld(void* obj);
 __attribute__ ((visibility("default"))) void btRigidBody_predictIntegratedTransform(void* obj, float step, void* predictedTransform);
 __attribute__ ((visibility("default"))) void btRigidBody_proceedToTransform(void* obj, const void* newTrans);
 __attribute__ ((visibility("default"))) void btRigidBody_removeConstraintRef(void* obj, void* c);
 __attribute__ ((visibility("default"))) void btRigidBody_saveKinematicState(void* obj, float step);
 __attribute__ ((visibility("default"))) void btRigidBody_setAngularFactor(void* obj, const void* angFac);
 __attribute__ ((visibility("default"))) void btRigidBody_setAngularFactor2(void* obj, float angFac);
 __attribute__ ((visibility("default"))) void btRigidBody_setAngularVelocity(void* obj, const void* ang_vel);
 __attribute__ ((visibility("default"))) void btRigidBody_setCenterOfMassTransform(void* obj, const void* xform);
 __attribute__ ((visibility("default"))) void btRigidBody_setContactSolverType(void* obj, int value);
 __attribute__ ((visibility("default"))) void btRigidBody_setDamping(void* obj, float lin_damping, float ang_damping);
 __attribute__ ((visibility("default"))) void btRigidBody_setFlags(void* obj, int flags);
 __attribute__ ((visibility("default"))) void btRigidBody_setFrictionSolverType(void* obj, int value);
 __attribute__ ((visibility("default"))) void btRigidBody_setGravity(void* obj, const void* acceleration);
 __attribute__ ((visibility("default"))) void btRigidBody_setInvInertiaDiagLocal(void* obj, const void* diagInvInertia);
 __attribute__ ((visibility("default"))) void btRigidBody_setLinearFactor(void* obj, const void* linearFactor);
 __attribute__ ((visibility("default"))) void btRigidBody_setLinearVelocity(void* obj, const void* lin_vel);
 __attribute__ ((visibility("default"))) void btRigidBody_setMassProps(void* obj, float mass, const void* inertia);
 __attribute__ ((visibility("default"))) void btRigidBody_setMotionState(void* obj, void* motionState);
 __attribute__ ((visibility("default"))) void btRigidBody_setNewBroadphaseProxy(void* obj, void* broadphaseProxy);
 __attribute__ ((visibility("default"))) void btRigidBody_setSleepingThresholds(void* obj, float linear, float angular);
 __attribute__ ((visibility("default"))) void btRigidBody_translate(void* obj, const void* v);
 __attribute__ ((visibility("default"))) void* btRigidBody_upcast(void* colObj);
 __attribute__ ((visibility("default"))) void btRigidBody_updateDeactivation(void* obj, float timeStep);
 __attribute__ ((visibility("default"))) void btRigidBody_updateInertiaTensor(void* obj);
 __attribute__ ((visibility("default"))) bool btRigidBody_wantsSleeping(void* obj);


 __attribute__ ((visibility("default"))) void* btScaledBvhTriangleMeshShape_new(void* childShape, const void* localScaling);
 __attribute__ ((visibility("default"))) void* btScaledBvhTriangleMeshShape_getChildShape(void* obj);


 __attribute__ ((visibility("default"))) void* btSequentialImpulseConstraintSolver_new();
 __attribute__ ((visibility("default"))) unsigned long btSequentialImpulseConstraintSolver_btRand2(void* obj);
 __attribute__ ((visibility("default"))) int btSequentialImpulseConstraintSolver_btRandInt2(void* obj, int n);
 __attribute__ ((visibility("default"))) unsigned long btSequentialImpulseConstraintSolver_getRandSeed(void* obj);
 __attribute__ ((visibility("default"))) void btSequentialImpulseConstraintSolver_setRandSeed(void* obj, unsigned long seed);


 __attribute__ ((visibility("default"))) void* btChunk_new();
 __attribute__ ((visibility("default"))) int btChunk_getChunkCode(void* obj);
 __attribute__ ((visibility("default"))) int btChunk_getDna_nr(void* obj);
 __attribute__ ((visibility("default"))) int btChunk_getLength(void* obj);
 __attribute__ ((visibility("default"))) int btChunk_getNumber(void* obj);
 __attribute__ ((visibility("default"))) void* btChunk_getOldPtr(void* obj);
 __attribute__ ((visibility("default"))) void btChunk_setChunkCode(void* obj, int value);
 __attribute__ ((visibility("default"))) void btChunk_setDna_nr(void* obj, int value);
 __attribute__ ((visibility("default"))) void btChunk_setLength(void* obj, int value);
 __attribute__ ((visibility("default"))) void btChunk_setNumber(void* obj, int value);
 __attribute__ ((visibility("default"))) void btChunk_setOldPtr(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btChunk_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSerializerWrapper_new(void* allocateCallback,
  void* finalizeChunkCallback, void* findNameForPointerCallback,
  void* findPointerCallback, void* finishSerializationCallback,
  void* getBufferPointerCallback, void* getChunkCallback,
  void* getCurrentBufferSizeCallback, void* getNumChunksCallback,
  void* getSerializationFlagsCallback, void* getUniquePointerCallback,
  void* registerNameForPointerCallback, void* serializeNameCallback,
  void* setSerializationFlagsCallback, void* startSerializationCallback);
 __attribute__ ((visibility("default"))) void btSerializer_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btDefaultSerializer_new();
 __attribute__ ((visibility("default"))) void* btDefaultSerializer_new2(int totalSize);
 __attribute__ ((visibility("default"))) unsigned char* btDefaultSerializer_internalAlloc(void* obj, size_t size);
 __attribute__ ((visibility("default"))) void btDefaultSerializer_writeHeader(void* obj, unsigned char* buffer);
 __attribute__ ((visibility("default"))) char* getBulletDNAstr();
 __attribute__ ((visibility("default"))) int getBulletDNAlen();
 __attribute__ ((visibility("default"))) char* getBulletDNAstr64();
 __attribute__ ((visibility("default"))) int getBulletDNAlen64();


 __attribute__ ((visibility("default"))) void* btShapeHull_new(const void* shape);
 __attribute__ ((visibility("default"))) bool btShapeHull_buildHull(void* obj, float margin);
 __attribute__ ((visibility("default"))) const unsigned int* btShapeHull_getIndexPointer(void* obj);
 __attribute__ ((visibility("default"))) const void* btShapeHull_getVertexPointer(void* obj);
 __attribute__ ((visibility("default"))) int btShapeHull_numIndices(void* obj);
 __attribute__ ((visibility("default"))) int btShapeHull_numTriangles(void* obj);
 __attribute__ ((visibility("default"))) int btShapeHull_numVertices(void* obj);
 __attribute__ ((visibility("default"))) void btShapeHull_delete(void* obj);


 __attribute__ ((visibility("default"))) void btSimulationIslandManager_IslandCallback_processIsland(void* obj, void** bodies, int numBodies, void** manifolds, int numManifolds, int islandId);
 __attribute__ ((visibility("default"))) void btSimulationIslandManager_IslandCallback_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSimulationIslandManager_new();
 __attribute__ ((visibility("default"))) void btSimulationIslandManager_buildAndProcessIslands(void* obj, void* dispatcher, void* collisionWorld, void* callback);
 __attribute__ ((visibility("default"))) void btSimulationIslandManager_buildIslands(void* obj, void* dispatcher, void* colWorld);
 __attribute__ ((visibility("default"))) void btSimulationIslandManager_findUnions(void* obj, void* dispatcher, void* colWorld);
 __attribute__ ((visibility("default"))) bool btSimulationIslandManager_getSplitIslands(void* obj);
 __attribute__ ((visibility("default"))) void* btSimulationIslandManager_getUnionFind(void* obj);
 __attribute__ ((visibility("default"))) void btSimulationIslandManager_initUnionFind(void* obj, int n);
 __attribute__ ((visibility("default"))) void btSimulationIslandManager_setSplitIslands(void* obj, bool doSplitIslands);
 __attribute__ ((visibility("default"))) void btSimulationIslandManager_storeIslandActivationState(void* obj, void* world);
 __attribute__ ((visibility("default"))) void btSimulationIslandManager_updateActivationState(void* obj, void* colWorld, void* dispatcher);
 __attribute__ ((visibility("default"))) void btSimulationIslandManager_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btSliderConstraint_new(void* rbA, void* rbB, const void* frameInA, const void* frameInB, bool useLinearReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btSliderConstraint_new2(void* rbB, const void* frameInB, bool useLinearReferenceFrameA);
 __attribute__ ((visibility("default"))) void btSliderConstraint_calculateTransforms(void* obj, const void* transA, const void* transB);
 __attribute__ ((visibility("default"))) void btSliderConstraint_getAncorInA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSliderConstraint_getAncorInB(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getAngDepth(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getAngularPos(void* obj);
 __attribute__ ((visibility("default"))) void btSliderConstraint_getCalculatedTransformA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSliderConstraint_getCalculatedTransformB(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getDampingDirAng(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getDampingDirLin(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getDampingLimAng(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getDampingLimLin(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getDampingOrthoAng(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getDampingOrthoLin(void* obj);
 __attribute__ ((visibility("default"))) int btSliderConstraint_getFlags(void* obj);
 __attribute__ ((visibility("default"))) void btSliderConstraint_getFrameOffsetA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSliderConstraint_getFrameOffsetB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSliderConstraint_getInfo1NonVirtual(void* obj, void* info);
 __attribute__ ((visibility("default"))) void btSliderConstraint_getInfo2NonVirtual(void* obj, void* info, const void* transA, const void* transB, const void* linVelA, const void* linVelB, float rbAinvMass, float rbBinvMass);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getLinDepth(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getLinearPos(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getLowerAngLimit(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getLowerLinLimit(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getMaxAngMotorForce(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getMaxLinMotorForce(void* obj);
 __attribute__ ((visibility("default"))) bool btSliderConstraint_getPoweredAngMotor(void* obj);
 __attribute__ ((visibility("default"))) bool btSliderConstraint_getPoweredLinMotor(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getRestitutionDirAng(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getRestitutionDirLin(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getRestitutionLimAng(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getRestitutionLimLin(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getRestitutionOrthoAng(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getRestitutionOrthoLin(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getSoftnessDirAng(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getSoftnessDirLin(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getSoftnessLimAng(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getSoftnessLimLin(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getSoftnessOrthoAng(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getSoftnessOrthoLin(void* obj);
 __attribute__ ((visibility("default"))) bool btSliderConstraint_getSolveAngLimit(void* obj);
 __attribute__ ((visibility("default"))) bool btSliderConstraint_getSolveLinLimit(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getTargetAngMotorVelocity(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getTargetLinMotorVelocity(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getUpperAngLimit(void* obj);
 __attribute__ ((visibility("default"))) float btSliderConstraint_getUpperLinLimit(void* obj);
 __attribute__ ((visibility("default"))) bool btSliderConstraint_getUseFrameOffset(void* obj);
 __attribute__ ((visibility("default"))) bool btSliderConstraint_getUseLinearReferenceFrameA(void* obj);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setDampingDirAng(void* obj, float dampingDirAng);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setDampingDirLin(void* obj, float dampingDirLin);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setDampingLimAng(void* obj, float dampingLimAng);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setDampingLimLin(void* obj, float dampingLimLin);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setDampingOrthoAng(void* obj, float dampingOrthoAng);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setDampingOrthoLin(void* obj, float dampingOrthoLin);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setFrames(void* obj, const void* frameA, const void* frameB);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setLowerAngLimit(void* obj, float lowerLimit);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setLowerLinLimit(void* obj, float lowerLimit);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setMaxAngMotorForce(void* obj, float maxAngMotorForce);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setMaxLinMotorForce(void* obj, float maxLinMotorForce);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setPoweredAngMotor(void* obj, bool onOff);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setPoweredLinMotor(void* obj, bool onOff);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setRestitutionDirAng(void* obj, float restitutionDirAng);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setRestitutionDirLin(void* obj, float restitutionDirLin);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setRestitutionLimAng(void* obj, float restitutionLimAng);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setRestitutionLimLin(void* obj, float restitutionLimLin);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setRestitutionOrthoAng(void* obj, float restitutionOrthoAng);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setRestitutionOrthoLin(void* obj, float restitutionOrthoLin);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setSoftnessDirAng(void* obj, float softnessDirAng);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setSoftnessDirLin(void* obj, float softnessDirLin);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setSoftnessLimAng(void* obj, float softnessLimAng);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setSoftnessLimLin(void* obj, float softnessLimLin);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setSoftnessOrthoAng(void* obj, float softnessOrthoAng);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setSoftnessOrthoLin(void* obj, float softnessOrthoLin);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setTargetAngMotorVelocity(void* obj, float targetAngMotorVelocity);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setTargetLinMotorVelocity(void* obj, float targetLinMotorVelocity);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setUpperAngLimit(void* obj, float upperLimit);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setUpperLinLimit(void* obj, float upperLimit);
 __attribute__ ((visibility("default"))) void btSliderConstraint_setUseFrameOffset(void* obj, bool frameOffsetOnOff);
 __attribute__ ((visibility("default"))) void btSliderConstraint_testAngLimits(void* obj);
 __attribute__ ((visibility("default"))) void btSliderConstraint_testLinLimits(void* obj);


 __attribute__ ((visibility("default"))) void* btSoftBodyWorldInfo_new();
 __attribute__ ((visibility("default"))) float btSoftBodyWorldInfo_getAir_density(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBodyWorldInfo_getBroadphase(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBodyWorldInfo_getDispatcher(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_getGravity(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBodyWorldInfo_getMaxDisplacement(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBodyWorldInfo_getSparsesdf(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBodyWorldInfo_getWater_density(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_getWater_normal(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBodyWorldInfo_getWater_offset(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_setAir_density(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_setBroadphase(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_setDispatcher(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_setGravity(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_setMaxDisplacement(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_setWater_density(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_setWater_normal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_setWater_offset(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBodyWorldInfo_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_AJoint_IControlWrapper_new(
  void* PrepareCallback, void* SpeedCallback);
 __attribute__ ((visibility("default"))) void* btSoftBody_AJoint_IControlWrapper_getWrapperData(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_AJoint_IControlWrapper_setWrapperData(void* obj, void* data);
 __attribute__ ((visibility("default"))) void* btSoftBody_AJoint_IControl_new();
 __attribute__ ((visibility("default"))) void* btSoftBody_AJoint_IControl_Default();
 __attribute__ ((visibility("default"))) void btSoftBody_AJoint_IControl_Prepare(void* obj, void* __unnamed0);
 __attribute__ ((visibility("default"))) float btSoftBody_AJoint_IControl_Speed(void* obj, void* __unnamed0, float current);
 __attribute__ ((visibility("default"))) void btSoftBody_AJoint_IControl_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_AJoint_Specs_new();
 __attribute__ ((visibility("default"))) void btSoftBody_AJoint_Specs_getAxis(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_AJoint_Specs_getIcontrol(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_AJoint_Specs_setAxis(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_AJoint_Specs_setIcontrol(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_AJoint_getAxis(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_AJoint_getIcontrol(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_AJoint_setIcontrol(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Anchor_getBody(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_getC0(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_getC1(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_Anchor_getC2(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Anchor_getInfluence(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_getLocal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Anchor_getNode(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_setBody(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_setC0(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_setC1(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_setC2(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_setInfluence(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_setLocal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Anchor_setNode(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Body_new();
 __attribute__ ((visibility("default"))) void* btSoftBody_Body_new2(const void* colObj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Body_new3(void* p);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_activate(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_angularVelocity(void* obj, const void* rpos, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_angularVelocity2(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_applyAImpulse(void* obj, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_applyDAImpulse(void* obj, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_applyDCImpulse(void* obj, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_applyDImpulse(void* obj, const void* impulse, const void* rpos);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_applyImpulse(void* obj, const void* impulse, const void* rpos);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_applyVAImpulse(void* obj, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_applyVImpulse(void* obj, const void* impulse, const void* rpos);
 __attribute__ ((visibility("default"))) const void* btSoftBody_Body_getCollisionObject(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Body_getRigid(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Body_getSoft(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Body_invMass(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_invWorldInertia(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_linearVelocity(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_setCollisionObject(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_setRigid(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_setSoft(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_velocity(void* obj, const void* rpos, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_xform(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Body_delete(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_CJoint_getFriction(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_CJoint_getLife(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_CJoint_getMaxlife(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_CJoint_getNormal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_CJoint_getRpos(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_CJoint_setFriction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_CJoint_setLife(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_CJoint_setMaxlife(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_CJoint_setNormal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_Cluster_getAdamping(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_getAv(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btSoftBody_Cluster_getClusterIndex(void* obj);
 __attribute__ ((visibility("default"))) bool btSoftBody_Cluster_getCollide(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_getCom(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btSoftBody_Cluster_getContainsAnchor(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Cluster_getDimpulses(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Cluster_getFramerefs(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_getFramexform(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_Cluster_getIdmass(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Cluster_getImass(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_getInvwi(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_Cluster_getLdamping(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Cluster_getLeaf(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_getLocii(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_getLv(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Cluster_getMasses(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Cluster_getMatching(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Cluster_getMaxSelfCollisionImpulse(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Cluster_getNdamping(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Cluster_getNdimpulses(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Cluster_getNodes(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Cluster_getNvimpulses(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Cluster_getSelfCollisionImpulseFactor(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Cluster_getVimpulses(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setAdamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setAv(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setClusterIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setCollide(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setCom(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setContainsAnchor(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setFramexform(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setIdmass(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setImass(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setInvwi(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setLdamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setLeaf(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setLocii(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setLv(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setMatching(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setMaxSelfCollisionImpulse(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setNdamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setNdimpulses(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setNvimpulses(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Cluster_setSelfCollisionImpulseFactor(void* obj, float value);
 __attribute__ ((visibility("default"))) int btSoftBody_Config_getAeromodel(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Config_getCiterations(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Config_getCollisions(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Config_getDiterations(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Config_getDsequence(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKAHR(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKCHR(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKDF(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKDG(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKDP(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKKHR(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKLF(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKMT(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKPR(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKSHR(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKSK_SPLT_CL(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKSKHR_CL(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKSR_SPLT_CL(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKSRHR_CL(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKSS_SPLT_CL(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKSSHR_CL(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKVC(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getKVCF(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getMaxvolume(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Config_getPiterations(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Config_getPsequence(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Config_getTimescale(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Config_getViterations(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Config_getVsequence(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setAeromodel(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setCiterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setCollisions(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setDiterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKAHR(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKCHR(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKDF(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKDG(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKDP(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKKHR(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKLF(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKMT(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKPR(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKSHR(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKSK_SPLT_CL(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKSKHR_CL(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKSR_SPLT_CL(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKSRHR_CL(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKSS_SPLT_CL(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKSSHR_CL(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKVC(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setKVCF(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setMaxvolume(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setPiterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setTimescale(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Config_setViterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Element_getTag(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Element_setTag(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Element_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Face_getLeaf(void* obj);
 __attribute__ ((visibility("default"))) void** btSoftBody_Face_getN(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Face_getNormal(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_Face_getRa(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Face_setLeaf(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Face_setNormal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Face_setRa(void* obj, float value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Feature_getMaterial(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Feature_setMaterial(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_ImplicitFnWrapper_new(void* EvalCallback);
 __attribute__ ((visibility("default"))) float btSoftBody_ImplicitFn_Eval(void* obj, const void* x);
 __attribute__ ((visibility("default"))) void btSoftBody_ImplicitFn_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Impulse_new();
 __attribute__ ((visibility("default"))) int btSoftBody_Impulse_getAsDrift(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Impulse_getAsVelocity(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Impulse_getDrift(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Impulse_getVelocity(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Impulse_operator_n(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Impulse_operator_m(void* obj, float x);
 __attribute__ ((visibility("default"))) void btSoftBody_Impulse_setAsDrift(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Impulse_setAsVelocity(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Impulse_setDrift(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Impulse_setVelocity(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Impulse_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Joint_Specs_new();
 __attribute__ ((visibility("default"))) float btSoftBody_Joint_Specs_getCfm(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Joint_Specs_getErp(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Joint_Specs_getSplit(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_Specs_setCfm(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_Specs_setErp(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_Specs_setSplit(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_Specs_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Joint_getBodies(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Joint_getCfm(void* obj);
 __attribute__ ((visibility("default"))) bool btSoftBody_Joint_getDelete(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_getDrift(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_Joint_getErp(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_getMassmatrix(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Joint_getRefs(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_getSdrift(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_Joint_getSplit(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_Prepare(void* obj, float dt, int iterations);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_setCfm(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_setDelete(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_setDrift(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_setErp(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_setMassmatrix(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_setSdrift(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_setSplit(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_Solve(void* obj, float dt, float sor);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_Terminate(void* obj, float dt);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_Type(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Joint_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Link_new();
 __attribute__ ((visibility("default"))) void* btSoftBody_Link_new2(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Link_getBbending(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Link_getC0(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Link_getC1(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Link_getC2(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Link_getC3(void* obj, void* value);
 __attribute__ ((visibility("default"))) void** btSoftBody_Link_getN(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Link_getRl(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Link_setBbending(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Link_setC0(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Link_setC1(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Link_setC2(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Link_setC3(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Link_setRl(void* obj, float value);
 __attribute__ ((visibility("default"))) void* btSoftBody_LJoint_Specs_new();
 __attribute__ ((visibility("default"))) void btSoftBody_LJoint_Specs_getPosition(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_LJoint_Specs_setPosition(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_LJoint_getRpos(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Material_getFlags(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Material_getKAST(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Material_getKLST(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Material_getKVST(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Material_setFlags(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Material_setKAST(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Material_setKLST(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Material_setKVST(void* obj, float value);
 __attribute__ ((visibility("default"))) float btSoftBody_Node_getArea(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_Node_getBattach(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_getF(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_Node_getIm(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Node_getLeaf(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_getN(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_getQ(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_getV(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_getX(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_setArea(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_setBattach(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_setF(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_setIm(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_setLeaf(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_setN(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_setQ(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_setV(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Node_setX(void* obj, const void* value);
 __attribute__ ((visibility("default"))) float* btSoftBody_Note_getCoords(void* obj);
 __attribute__ ((visibility("default"))) void** btSoftBody_Note_getNodes(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Note_getOffset(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btSoftBody_Note_getRank(void* obj);
 __attribute__ ((visibility("default"))) const char* btSoftBody_Note_getText(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Note_setOffset(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Note_setRank(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_Note_setText(void* obj, const char* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_getAqq(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btSoftBody_Pose_getBframe(void* obj);
 __attribute__ ((visibility("default"))) bool btSoftBody_Pose_getBvolume(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_getCom(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Pose_getPos(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_getRot(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_getScl(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_Pose_getWgh(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Pose_getVolume(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_setAqq(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_setBframe(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_setBvolume(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_setCom(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_setRot(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_setScl(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Pose_setVolume(void* obj, float value);
 __attribute__ ((visibility("default"))) void* btSoftBody_RayFromToCaster_new(const void* rayFrom, const void* rayTo, float mxt);
 __attribute__ ((visibility("default"))) void* btSoftBody_RayFromToCaster_getFace(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_RayFromToCaster_getMint(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_RayFromToCaster_getRayFrom(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RayFromToCaster_getRayNormalizedDirection(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RayFromToCaster_getRayTo(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btSoftBody_RayFromToCaster_getTests(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_RayFromToCaster_rayFromToTriangle(const void* rayFrom, const void* rayTo, const void* rayNormalizedDirection, const void* a, const void* b, const void* c);
 __attribute__ ((visibility("default"))) float btSoftBody_RayFromToCaster_rayFromToTriangle2(const void* rayFrom, const void* rayTo, const void* rayNormalizedDirection, const void* a, const void* b, const void* c, float maxt);
 __attribute__ ((visibility("default"))) void btSoftBody_RayFromToCaster_setFace(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RayFromToCaster_setMint(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_RayFromToCaster_setRayFrom(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RayFromToCaster_setRayNormalizedDirection(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RayFromToCaster_setRayTo(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RayFromToCaster_setTests(void* obj, int value);
 __attribute__ ((visibility("default"))) void* btSoftBody_RContact_new();
 __attribute__ ((visibility("default"))) void btSoftBody_RContact_getC0(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RContact_getC1(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_RContact_getC2(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_RContact_getC3(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_RContact_getC4(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_RContact_getCti(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_RContact_getNode(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_RContact_setC0(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RContact_setC1(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RContact_setC2(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_RContact_setC3(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_RContact_setC4(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_RContact_setNode(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_RContact_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_SContact_new();
 __attribute__ ((visibility("default"))) float* btSoftBody_SContact_getCfm(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_SContact_getFace(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_SContact_getFriction(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_SContact_getMargin(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_SContact_getNode(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_SContact_getNormal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_SContact_getWeights(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_SContact_setFace(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_SContact_setFriction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_SContact_setMargin(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_SContact_setNode(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_SContact_setNormal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_SContact_setWeights(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_SContact_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_sCti_new();
 __attribute__ ((visibility("default"))) const void* btSoftBody_sCti_getColObj(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_sCti_getNormal(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btSoftBody_sCti_getOffset(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_sCti_setColObj(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_sCti_setNormal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_sCti_setOffset(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_sCti_delete(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_SolverState_getIsdt(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_SolverState_getRadmrg(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_SolverState_getSdt(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_SolverState_getUpdmrg(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_SolverState_getVelmrg(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_SolverState_setIsdt(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_SolverState_setRadmrg(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_SolverState_setSdt(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_SolverState_setUpdmrg(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_SolverState_setVelmrg(void* obj, float value);
 __attribute__ ((visibility("default"))) void* btSoftBody_sRayCast_new();
 __attribute__ ((visibility("default"))) void* btSoftBody_sRayCast_getBody(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_sRayCast_getFeature(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_sRayCast_getFraction(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBody_sRayCast_getIndex(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_sRayCast_setBody(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_sRayCast_setFeature(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_sRayCast_setFraction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_sRayCast_setIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btSoftBody_sRayCast_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Tetra_getC0(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Tetra_getC1(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Tetra_getC2(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_Tetra_getLeaf(void* obj);
 __attribute__ ((visibility("default"))) void** btSoftBody_Tetra_getN(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_Tetra_getRv(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_Tetra_setC1(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Tetra_setC2(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_Tetra_setLeaf(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_Tetra_setRv(void* obj, float value);
 __attribute__ ((visibility("default"))) void* btSoftBody_new(void* worldInfo, int node_count, const float* x, const float* m);
 __attribute__ ((visibility("default"))) void* btSoftBody_new2(void* worldInfo);
 __attribute__ ((visibility("default"))) void btSoftBody_addAeroForceToFace(void* obj, const void* windVelocity, int faceIndex);
 __attribute__ ((visibility("default"))) void btSoftBody_addAeroForceToNode(void* obj, const void* windVelocity, int nodeIndex);
 __attribute__ ((visibility("default"))) void btSoftBody_addForce(void* obj, const void* force);
 __attribute__ ((visibility("default"))) void btSoftBody_addForce2(void* obj, const void* force, int node);
 __attribute__ ((visibility("default"))) void btSoftBody_addVelocity(void* obj, const void* velocity);
 __attribute__ ((visibility("default"))) void btSoftBody_addVelocity2(void* obj, const void* velocity, int node);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAnchor(void* obj, int node, void* body, const void* localPivot);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAnchor2(void* obj, int node, void* body, const void* localPivot, bool disableCollisionBetweenLinkedBodies);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAnchor3(void* obj, int node, void* body, const void* localPivot, bool disableCollisionBetweenLinkedBodies, float influence);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAnchor4(void* obj, int node, void* body);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAnchor5(void* obj, int node, void* body, bool disableCollisionBetweenLinkedBodies);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAnchor6(void* obj, int node, void* body, bool disableCollisionBetweenLinkedBodies, float influence);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAngularJoint(void* obj, const void* specs);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAngularJoint2(void* obj, const void* specs, void* body);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAngularJoint3(void* obj, const void* specs, void* body);
 __attribute__ ((visibility("default"))) void btSoftBody_appendAngularJoint4(void* obj, const void* specs, void* body0, void* body1);
 __attribute__ ((visibility("default"))) void btSoftBody_appendFace(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_appendFace2(void* obj, int model);
 __attribute__ ((visibility("default"))) void btSoftBody_appendFace3(void* obj, int model, void* mat);
 __attribute__ ((visibility("default"))) void btSoftBody_appendFace4(void* obj, int node0, int node1, int node2);
 __attribute__ ((visibility("default"))) void btSoftBody_appendFace5(void* obj, int node0, int node1, int node2, void* mat);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLinearJoint(void* obj, const void* specs, void* body);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLinearJoint2(void* obj, const void* specs);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLinearJoint3(void* obj, const void* specs, void* body);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLinearJoint4(void* obj, const void* specs, void* body0, void* body1);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLink(void* obj, int node0, int node1);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLink2(void* obj, int node0, int node1, void* mat);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLink3(void* obj, int node0, int node1, void* mat, bool bcheckexist);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLink4(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLink5(void* obj, int model);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLink6(void* obj, int model, void* mat);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLink7(void* obj, void* node0, void* node1);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLink8(void* obj, void* node0, void* node1, void* mat);
 __attribute__ ((visibility("default"))) void btSoftBody_appendLink9(void* obj, void* node0, void* node1, void* mat, bool bcheckexist);
 __attribute__ ((visibility("default"))) void* btSoftBody_appendMaterial(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNode(void* obj, const void* x, float m);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNote(void* obj, const char* text, const void* o, void* feature);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNote2(void* obj, const char* text, const void* o, void* feature);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNote3(void* obj, const char* text, const void* o, void* feature);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNote4(void* obj, const char* text, const void* o);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNote5(void* obj, const char* text, const void* o, const void* c);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNote6(void* obj, const char* text, const void* o, const void* c, void* n0);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNote7(void* obj, const char* text, const void* o, const void* c, void* n0, void* n1);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNote8(void* obj, const char* text, const void* o, const void* c, void* n0, void* n1, void* n2);
 __attribute__ ((visibility("default"))) void btSoftBody_appendNote9(void* obj, const char* text, const void* o, const void* c, void* n0, void* n1, void* n2, void* n3);
 __attribute__ ((visibility("default"))) void btSoftBody_appendTetra(void* obj, int model, void* mat);
 __attribute__ ((visibility("default"))) void btSoftBody_appendTetra2(void* obj, int node0, int node1, int node2, int node3);
 __attribute__ ((visibility("default"))) void btSoftBody_appendTetra3(void* obj, int node0, int node1, int node2, int node3, void* mat);
 __attribute__ ((visibility("default"))) void btSoftBody_applyClusters(void* obj, bool drift);
 __attribute__ ((visibility("default"))) void btSoftBody_applyForces(void* obj);
 __attribute__ ((visibility("default"))) bool btSoftBody_checkContact(void* obj, const void* colObjWrap, const void* x, float margin, void* cti);
 __attribute__ ((visibility("default"))) bool btSoftBody_checkFace(void* obj, int node0, int node1, int node2);
 __attribute__ ((visibility("default"))) bool btSoftBody_checkLink(void* obj, const void* node0, const void* node1);
 __attribute__ ((visibility("default"))) bool btSoftBody_checkLink2(void* obj, int node0, int node1);
 __attribute__ ((visibility("default"))) void btSoftBody_cleanupClusters(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterAImpulse(void* cluster, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterCom(void* obj, int cluster, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterCom2(const void* cluster, void* value);
 __attribute__ ((visibility("default"))) int btSoftBody_clusterCount(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterDAImpulse(void* cluster, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterDCImpulse(void* cluster, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterDImpulse(void* cluster, const void* rpos, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterImpulse(void* cluster, const void* rpos, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterVAImpulse(void* cluster, const void* impulse);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterVelocity(const void* cluster, const void* rpos, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_clusterVImpulse(void* cluster, const void* rpos, const void* impulse);
 __attribute__ ((visibility("default"))) bool btSoftBody_cutLink(void* obj, const void* node0, const void* node1, float position);
 __attribute__ ((visibility("default"))) bool btSoftBody_cutLink2(void* obj, int node0, int node1, float position);
 __attribute__ ((visibility("default"))) void btSoftBody_dampClusters(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_defaultCollisionHandler(void* obj, const void* pcoWrap);
 __attribute__ ((visibility("default"))) void btSoftBody_defaultCollisionHandler2(void* obj, void* psb);
 __attribute__ ((visibility("default"))) void btSoftBody_evaluateCom(void* obj, void* value);
 __attribute__ ((visibility("default"))) int btSoftBody_generateBendingConstraints(void* obj, int distance);
 __attribute__ ((visibility("default"))) int btSoftBody_generateBendingConstraints2(void* obj, int distance, void* mat);
 __attribute__ ((visibility("default"))) int btSoftBody_generateClusters(void* obj, int k);
 __attribute__ ((visibility("default"))) int btSoftBody_generateClusters2(void* obj, int k, int maxiterations);
 __attribute__ ((visibility("default"))) void btSoftBody_getAabb(void* obj, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) void* btSoftBody_getAnchors(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getBounds(void* obj);
 __attribute__ ((visibility("default"))) bool btSoftBody_getBUpdateRtCst(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getCdbvt(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getCfg(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getClusterConnectivity(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getClusters(void* obj);
 __attribute__ ((visibility("default"))) btAlignedObjectArray_const_btCollisionObjectPtr* btSoftBody_getCollisionDisabledObjects(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getFaces(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getFdbvt(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_getInitialWorldTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btSoftBody_getJoints(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getLinks(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_getMass(void* obj, int node);
 __attribute__ ((visibility("default"))) void* btSoftBody_getMaterials(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getNdbvt(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getNodes(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getNotes(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getPose(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getRcontacts(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_getRestLengthScale(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getScontacts(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getSoftBodySolver(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getSst(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getTag(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getTetras(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_getTimeacc(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBody_getTotalMass(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getUserIndexMapping(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_getWindVelocity(void* obj, void* velocity);
 __attribute__ ((visibility("default"))) float btSoftBody_getVolume(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftBody_getWorldInfo(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_indicesToPointers(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_indicesToPointers2(void* obj, const int* map);
 __attribute__ ((visibility("default"))) void btSoftBody_initDefaults(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_initializeClusters(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_initializeFaceTree(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_integrateMotion(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_pointersToIndices(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_predictMotion(void* obj, float dt);
 __attribute__ ((visibility("default"))) void btSoftBody_prepareClusters(void* obj, int iterations);
 __attribute__ ((visibility("default"))) void btSoftBody_PSolve_Anchors(void* psb, float kst, float ti);
 __attribute__ ((visibility("default"))) void btSoftBody_PSolve_Links(void* psb, float kst, float ti);
 __attribute__ ((visibility("default"))) void btSoftBody_PSolve_RContacts(void* psb, float kst, float ti);
 __attribute__ ((visibility("default"))) void btSoftBody_PSolve_SContacts(void* psb, float __unnamed1, float ti);
 __attribute__ ((visibility("default"))) void btSoftBody_randomizeConstraints(void* obj);
 __attribute__ ((visibility("default"))) bool btSoftBody_rayTest(void* obj, const void* rayFrom, const void* rayTo, void* results);
 __attribute__ ((visibility("default"))) int btSoftBody_rayTest2(void* obj, const void* rayFrom, const void* rayTo, float* mint, int* feature, int* index, bool bcountonly);
 __attribute__ ((visibility("default"))) void btSoftBody_refine(void* obj, void* ifn, float accurary, bool cut);
 __attribute__ ((visibility("default"))) void btSoftBody_releaseCluster(void* obj, int index);
 __attribute__ ((visibility("default"))) void btSoftBody_releaseClusters(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_resetLinkRestLengths(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_rotate(void* obj, const void* rot);
 __attribute__ ((visibility("default"))) void btSoftBody_scale(void* obj, const void* scl);
 __attribute__ ((visibility("default"))) void btSoftBody_setBUpdateRtCst(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btSoftBody_setInitialWorldTransform(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_setMass(void* obj, int node, float mass);
 __attribute__ ((visibility("default"))) void btSoftBody_setPose(void* obj, bool bvolume, bool bframe);
 __attribute__ ((visibility("default"))) void btSoftBody_setRestLengthScale(void* obj, float restLength);
 __attribute__ ((visibility("default"))) void btSoftBody_setSoftBodySolver(void* obj, void* softBodySolver);
 __attribute__ ((visibility("default"))) void btSoftBody_setSolver(void* obj, int preset);
 __attribute__ ((visibility("default"))) void btSoftBody_setTag(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_setTimeacc(void* obj, float value);
 __attribute__ ((visibility("default"))) void btSoftBody_setTotalDensity(void* obj, float density);
 __attribute__ ((visibility("default"))) void btSoftBody_setTotalMass(void* obj, float mass);
 __attribute__ ((visibility("default"))) void btSoftBody_setTotalMass2(void* obj, float mass, bool fromfaces);
 __attribute__ ((visibility("default"))) void btSoftBody_setVelocity(void* obj, const void* velocity);
 __attribute__ ((visibility("default"))) void btSoftBody_setWindVelocity(void* obj, const void* velocity);
 __attribute__ ((visibility("default"))) void btSoftBody_setVolumeDensity(void* obj, float density);
 __attribute__ ((visibility("default"))) void btSoftBody_setVolumeMass(void* obj, float mass);
 __attribute__ ((visibility("default"))) void btSoftBody_setWorldInfo(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btSoftBody_solveClusters(const void* bodies);
 __attribute__ ((visibility("default"))) void btSoftBody_solveClusters2(void* obj, float sor);
 __attribute__ ((visibility("default"))) void btSoftBody_solveCommonConstraints(void** bodies, int count, int iterations);
 __attribute__ ((visibility("default"))) void btSoftBody_solveConstraints(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_staticSolve(void* obj, int iterations);
 __attribute__ ((visibility("default"))) void btSoftBody_transform(void* obj, const void* trs);
 __attribute__ ((visibility("default"))) void btSoftBody_translate(void* obj, const void* trs);
 __attribute__ ((visibility("default"))) void* btSoftBody_upcast(void* colObj);
 __attribute__ ((visibility("default"))) void btSoftBody_updateArea(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_updateArea2(void* obj, bool averageArea);
 __attribute__ ((visibility("default"))) void btSoftBody_updateBounds(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_updateClusters(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_updateConstants(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_updateLinkConstants(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_updateNormals(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_updatePose(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBody_VSolve_Links(void* psb, float kst);
 __attribute__ ((visibility("default"))) int btSoftBody_getFaceVertexData(void* obj, float* vertices);
 __attribute__ ((visibility("default"))) int btSoftBody_getFaceVertexNormalData(void* obj, float* vertices);
 __attribute__ ((visibility("default"))) int btSoftBody_getFaceVertexNormalData2(void* obj, float* vertices, float* normals);
 __attribute__ ((visibility("default"))) int btSoftBody_getLinkVertexData(void* obj, float* vertices);
 __attribute__ ((visibility("default"))) int btSoftBody_getLinkVertexNormalData(void* obj, float* vertices);
 __attribute__ ((visibility("default"))) int btSoftBody_getTetraVertexData(void* obj, float* vertices);
 __attribute__ ((visibility("default"))) int btSoftBody_getTetraVertexNormalData(void* obj, float* vertices);
 __attribute__ ((visibility("default"))) int btSoftBody_getTetraVertexNormalData2(void* obj, float* vertices, float* normals);


 __attribute__ ((visibility("default"))) void* btSoftBodyConcaveCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc_new();
 __attribute__ ((visibility("default"))) void* btSoftBodyConcaveCollisionAlgorithm_new(const void* ci, const void* body0Wrap, const void* body1Wrap, bool isSwapped);
 __attribute__ ((visibility("default"))) void btSoftBodyConcaveCollisionAlgorithm_clearCache(void* obj);


 __attribute__ ((visibility("default"))) void* btSoftBodyHelpers_CreateFromConvexHull(void* worldInfo, const float* vertices, int nvertices);
 __attribute__ ((visibility("default"))) void* btSoftBodyHelpers_CreateFromConvexHull2(void* worldInfo, const float* vertices, int nvertices, bool randomizeConstraints);
 __attribute__ ((visibility("default"))) void* btSoftBodyHelpers_CreatePatchUV(void* worldInfo, const void* corner00, const void* corner10, const void* corner01, const void* corner11, int resx, int resy, int fixeds, bool gendiags);
 __attribute__ ((visibility("default"))) void* btSoftBodyHelpers_CreatePatchUV2(void* worldInfo, const void* corner00, const void* corner10, const void* corner01, const void* corner11, int resx, int resy, int fixeds, bool gendiags, float* tex_coords);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_Draw(void* psb, void* idraw);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_Draw2(void* psb, void* idraw, int drawflags);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawClusterTree(void* psb, void* idraw);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawClusterTree2(void* psb, void* idraw, int mindepth);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawClusterTree3(void* psb, void* idraw, int mindepth, int maxdepth);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawFaceTree(void* psb, void* idraw);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawFaceTree2(void* psb, void* idraw, int mindepth);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawFaceTree3(void* psb, void* idraw, int mindepth, int maxdepth);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawFrame(void* psb, void* idraw);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawInfos(void* psb, void* idraw, bool masses, bool areas, bool stress);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawNodeTree(void* psb, void* idraw);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawNodeTree2(void* psb, void* idraw, int mindepth);
 __attribute__ ((visibility("default"))) void btSoftBodyHelpers_DrawNodeTree3(void* psb, void* idraw, int mindepth, int maxdepth);


 __attribute__ ((visibility("default"))) void* btSoftBodyRigidBodyCollisionConfiguration_new();
 __attribute__ ((visibility("default"))) void* btSoftBodyRigidBodyCollisionConfiguration_new2(const void* constructionInfo);


 __attribute__ ((visibility("default"))) bool btSoftBodySolver_checkInitialized(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBodySolver_copyBackToSoftBodies(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBodySolver_copyBackToSoftBodies2(void* obj, bool bMove);
 __attribute__ ((visibility("default"))) int btSoftBodySolver_getNumberOfPositionIterations(void* obj);
 __attribute__ ((visibility("default"))) int btSoftBodySolver_getNumberOfVelocityIterations(void* obj);
 __attribute__ ((visibility("default"))) float btSoftBodySolver_getTimeScale(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBodySolver_predictMotion(void* obj, float solverdt);
 __attribute__ ((visibility("default"))) void btSoftBodySolver_setNumberOfPositionIterations(void* obj, int iterations);
 __attribute__ ((visibility("default"))) void btSoftBodySolver_setNumberOfVelocityIterations(void* obj, int iterations);
 __attribute__ ((visibility("default"))) void btSoftBodySolver_solveConstraints(void* obj, float solverdt);
 __attribute__ ((visibility("default"))) void btSoftBodySolver_updateSoftBodies(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBodySolver_delete(void* obj);
 __attribute__ ((visibility("default"))) void btSoftBodySolverOutput_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btSoftRigidCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btSoftRigidCollisionAlgorithm_new(void* mf, const void* ci, const void* col0, const void* col1Wrap, bool isSwapped);


 __attribute__ ((visibility("default"))) void* btSoftRigidDynamicsWorld_new(void* dispatcher, void* pairCache, void* constraintSolver, void* collisionConfiguration);
 __attribute__ ((visibility("default"))) void* btSoftRigidDynamicsWorld_new2(void* dispatcher, void* pairCache, void* constraintSolver, void* collisionConfiguration, void* softBodySolver);
 __attribute__ ((visibility("default"))) void btSoftRigidDynamicsWorld_addSoftBody(void* obj, void* body);
 __attribute__ ((visibility("default"))) void btSoftRigidDynamicsWorld_addSoftBody2(void* obj, void* body, short collisionFilterGroup);
 __attribute__ ((visibility("default"))) void btSoftRigidDynamicsWorld_addSoftBody3(void* obj, void* body, short collisionFilterGroup, short collisionFilterMask);
 __attribute__ ((visibility("default"))) int btSoftRigidDynamicsWorld_getDrawFlags(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftRigidDynamicsWorld_getSoftBodyArray(void* obj);
 __attribute__ ((visibility("default"))) void* btSoftRigidDynamicsWorld_getWorldInfo(void* obj);
 __attribute__ ((visibility("default"))) void btSoftRigidDynamicsWorld_removeSoftBody(void* obj, void* body);
 __attribute__ ((visibility("default"))) void btSoftRigidDynamicsWorld_setDrawFlags(void* obj, int f);


 __attribute__ ((visibility("default"))) void* btSoftSoftCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btSoftSoftCollisionAlgorithm_new(const void* ci);
 __attribute__ ((visibility("default"))) void* btSoftSoftCollisionAlgorithm_new2(void* mf, const void* ci, const void* body0Wrap, const void* body1Wrap);


 __attribute__ ((visibility("default"))) void* btSparseSdf_new();
 __attribute__ ((visibility("default"))) void btSparseSdf3_GarbageCollect(void* obj, int lifetime);
 __attribute__ ((visibility("default"))) void btSparseSdf3_GarbageCollect2(void* obj);
 __attribute__ ((visibility("default"))) void btSparseSdf3_Initialize(void* obj, int hashsize, int clampCells);
 __attribute__ ((visibility("default"))) void btSparseSdf3_Initialize2(void* obj, int hashsize);
 __attribute__ ((visibility("default"))) void btSparseSdf3_Initialize3(void* obj);
 __attribute__ ((visibility("default"))) int btSparseSdf3_RemoveReferences(void* obj, void* pcs);
 __attribute__ ((visibility("default"))) void btSparseSdf3_Reset(void* obj);
 __attribute__ ((visibility("default"))) void btSparseSdf_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btSphereBoxCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btSphereBoxCollisionAlgorithm_new(void* mf, const void* ci, const void* body0Wrap, const void* body1Wrap, bool isSwapped);
 __attribute__ ((visibility("default"))) bool btSphereBoxCollisionAlgorithm_getSphereDistance(void* obj, const void* boxObjWrap, void* v3PointOnBox, void* normal, float* penetrationDepth, const void* v3SphereCenter, float fRadius, float maxContactDistance);
 __attribute__ ((visibility("default"))) float btSphereBoxCollisionAlgorithm_getSpherePenetration(void* obj, const void* boxHalfExtent, const void* sphereRelPos, void* closestPoint, void* normal);


 __attribute__ ((visibility("default"))) void* btSphereShape_new(float radius);
 __attribute__ ((visibility("default"))) float btSphereShape_getRadius(void* obj);
 __attribute__ ((visibility("default"))) void btSphereShape_setUnscaledRadius(void* obj, float radius);


 __attribute__ ((visibility("default"))) void* btSphereSphereCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btSphereSphereCollisionAlgorithm_new(void* mf, const void* ci, const void* col0Wrap, const void* col1Wrap);
 __attribute__ ((visibility("default"))) void* btSphereSphereCollisionAlgorithm_new2(const void* ci);


 __attribute__ ((visibility("default"))) void* btSphereTriangleCollisionAlgorithm_CreateFunc_new();
 __attribute__ ((visibility("default"))) void* btSphereTriangleCollisionAlgorithm_new(void* mf, const void* ci, const void* body0Wrap, const void* body1Wrap, bool swapped);
 __attribute__ ((visibility("default"))) void* btSphereTriangleCollisionAlgorithm_new2(const void* ci);


 __attribute__ ((visibility("default"))) void* btStaticPlaneShape_new(const void* planeNormal, float planeConstant);
 __attribute__ ((visibility("default"))) float btStaticPlaneShape_getPlaneConstant(void* obj);
 __attribute__ ((visibility("default"))) void btStaticPlaneShape_getPlaneNormal(void* obj, void* value);


 __attribute__ ((visibility("default"))) void btStridingMeshInterface_calculateAabbBruteForce(void* obj, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) int btStridingMeshInterface_calculateSerializeBufferSize(void* obj);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase(void* obj, const unsigned char** vertexbase, int* numverts, int* type, int* vertexStride, const unsigned char** indexbase, int* indexstride, int* numfaces, int* indicestype);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase2(void* obj, const unsigned char** vertexbase, int* numverts, int* type, int* vertexStride, const unsigned char** indexbase, int* indexstride, int* numfaces, int* indicestype, int subpart);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_getLockedVertexIndexBase(void* obj, unsigned char** vertexbase, int* numverts, int* type, int* vertexStride, unsigned char** indexbase, int* indexstride, int* numfaces, int* indicestype);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_getLockedVertexIndexBase2(void* obj, unsigned char** vertexbase, int* numverts, int* type, int* vertexStride, unsigned char** indexbase, int* indexstride, int* numfaces, int* indicestype, int subpart);
 __attribute__ ((visibility("default"))) int btStridingMeshInterface_getNumSubParts(void* obj);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_getPremadeAabb(void* obj, void* aabbMin, void* aabbMax);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_getScaling(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btStridingMeshInterface_hasPremadeAabb(void* obj);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_InternalProcessAllTriangles(void* obj, void* callback, const void* aabbMin, const void* aabbMax);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_preallocateIndices(void* obj, int numindices);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_preallocateVertices(void* obj, int numverts);
 __attribute__ ((visibility("default"))) const char* btStridingMeshInterface_serialize(void* obj, void* dataBuffer, void* serializer);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_setPremadeAabb(void* obj, const void* aabbMin, const void* aabbMax);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_setScaling(void* obj, const void* scaling);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_unLockReadOnlyVertexBase(void* obj, int subpart);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_unLockVertexBase(void* obj, int subpart);
 __attribute__ ((visibility("default"))) void btStridingMeshInterface_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btBU_Simplex1to4_new();
 __attribute__ ((visibility("default"))) void* btBU_Simplex1to4_new2(const void* pt0);
 __attribute__ ((visibility("default"))) void* btBU_Simplex1to4_new3(const void* pt0, const void* pt1);
 __attribute__ ((visibility("default"))) void* btBU_Simplex1to4_new4(const void* pt0, const void* pt1, const void* pt2);
 __attribute__ ((visibility("default"))) void* btBU_Simplex1to4_new5(const void* pt0, const void* pt1, const void* pt2, const void* pt3);
 __attribute__ ((visibility("default"))) void btBU_Simplex1to4_addVertex(void* obj, const void* pt);
 __attribute__ ((visibility("default"))) int btBU_Simplex1to4_getIndex(void* obj, int i);
 __attribute__ ((visibility("default"))) void btBU_Simplex1to4_reset(void* obj);


 __attribute__ ((visibility("default"))) void btTransformUtil_calculateDiffAxisAngle(const void* transform0, const void* transform1, void* axis, float* angle);
 __attribute__ ((visibility("default"))) void btTransformUtil_calculateDiffAxisAngleQuaternion(const void* orn0, const void* orn1a, void* axis, float* angle);
 __attribute__ ((visibility("default"))) void btTransformUtil_calculateVelocity(const void* transform0, const void* transform1, float timeStep, void* linVel, void* angVel);
 __attribute__ ((visibility("default"))) void btTransformUtil_calculateVelocityQuaternion(const void* pos0, const void* pos1, const void* orn0, const void* orn1, float timeStep, void* linVel, void* angVel);
 __attribute__ ((visibility("default"))) void btTransformUtil_integrateTransform(const void* curTrans, const void* linvel, const void* angvel, float timeStep, void* predictedTransform);
 __attribute__ ((visibility("default"))) void* btConvexSeparatingDistanceUtil_new(float boundingRadiusA, float boundingRadiusB);
 __attribute__ ((visibility("default"))) float btConvexSeparatingDistanceUtil_getConservativeSeparatingDistance(void* obj);
 __attribute__ ((visibility("default"))) void btConvexSeparatingDistanceUtil_initSeparatingDistance(void* obj, const void* separatingVector, float separatingDistance, const void* transA, const void* transB);
 __attribute__ ((visibility("default"))) void btConvexSeparatingDistanceUtil_updateSeparatingDistance(void* obj, const void* transA, const void* transB);
 __attribute__ ((visibility("default"))) void btConvexSeparatingDistanceUtil_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btTriangle_new();
 __attribute__ ((visibility("default"))) int btTriangle_getPartId(void* obj);
 __attribute__ ((visibility("default"))) int btTriangle_getTriangleIndex(void* obj);
 __attribute__ ((visibility("default"))) void btTriangle_getVertex0(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTriangle_getVertex1(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTriangle_getVertex2(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTriangle_setPartId(void* obj, int value);
 __attribute__ ((visibility("default"))) void btTriangle_setTriangleIndex(void* obj, int value);
 __attribute__ ((visibility("default"))) void btTriangle_setVertex0(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTriangle_setVertex1(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTriangle_setVertex2(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btTriangle_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btTriangleBuffer_new();
 __attribute__ ((visibility("default"))) void btTriangleBuffer_clearBuffer(void* obj);
 __attribute__ ((visibility("default"))) int btTriangleBuffer_getNumTriangles(void* obj);
 __attribute__ ((visibility("default"))) const void* btTriangleBuffer_getTriangle(void* obj, int index);


 __attribute__ ((visibility("default"))) void* btTriangleCallbackWrapper_new(void* processTriangleCallback);
 __attribute__ ((visibility("default"))) void btTriangleCallback_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btInternalTriangleIndexCallbackWrapper_new(
  void* internalProcessTriangleIndexCallback);
 __attribute__ ((visibility("default"))) void btInternalTriangleIndexCallback_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btIndexedMesh_new();
 __attribute__ ((visibility("default"))) int btIndexedMesh_getIndexType(void* obj);
 __attribute__ ((visibility("default"))) int btIndexedMesh_getNumTriangles(void* obj);
 __attribute__ ((visibility("default"))) int btIndexedMesh_getNumVertices(void* obj);
 __attribute__ ((visibility("default"))) const unsigned char* btIndexedMesh_getTriangleIndexBase(void* obj);
 __attribute__ ((visibility("default"))) int btIndexedMesh_getTriangleIndexStride(void* obj);
 __attribute__ ((visibility("default"))) const unsigned char* btIndexedMesh_getVertexBase(void* obj);
 __attribute__ ((visibility("default"))) int btIndexedMesh_getVertexStride(void* obj);
 __attribute__ ((visibility("default"))) int btIndexedMesh_getVertexType(void* obj);
 __attribute__ ((visibility("default"))) void btIndexedMesh_setIndexType(void* obj, int value);
 __attribute__ ((visibility("default"))) void btIndexedMesh_setNumTriangles(void* obj, int value);
 __attribute__ ((visibility("default"))) void btIndexedMesh_setNumVertices(void* obj, int value);
 __attribute__ ((visibility("default"))) void btIndexedMesh_setTriangleIndexBase(void* obj, const unsigned char* value);
 __attribute__ ((visibility("default"))) void btIndexedMesh_setTriangleIndexStride(void* obj, int value);
 __attribute__ ((visibility("default"))) void btIndexedMesh_setVertexBase(void* obj, const unsigned char* value);
 __attribute__ ((visibility("default"))) void btIndexedMesh_setVertexStride(void* obj, int value);
 __attribute__ ((visibility("default"))) void btIndexedMesh_setVertexType(void* obj, int value);
 __attribute__ ((visibility("default"))) void btIndexedMesh_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btTriangleIndexVertexArray_new();
 __attribute__ ((visibility("default"))) void* btTriangleIndexVertexArray_new2(int numTriangles, int* triangleIndexBase, int triangleIndexStride, int numVertices, float* vertexBase, int vertexStride);
 __attribute__ ((visibility("default"))) void btTriangleIndexVertexArray_addIndexedMesh(void* obj, const void* mesh);
 __attribute__ ((visibility("default"))) void btTriangleIndexVertexArray_addIndexedMesh2(void* obj, const void* mesh, int indexType);
 __attribute__ ((visibility("default"))) void* btTriangleIndexVertexArray_getIndexedMeshArray(void* obj);


 __attribute__ ((visibility("default"))) void* btMaterialProperties_new();
 __attribute__ ((visibility("default"))) const unsigned char* btMaterialProperties_getMaterialBase(void* obj);
 __attribute__ ((visibility("default"))) int btMaterialProperties_getMaterialStride(void* obj);
 __attribute__ ((visibility("default"))) int btMaterialProperties_getMaterialType(void* obj);
 __attribute__ ((visibility("default"))) int btMaterialProperties_getNumMaterials(void* obj);
 __attribute__ ((visibility("default"))) int btMaterialProperties_getNumTriangles(void* obj);
 __attribute__ ((visibility("default"))) const unsigned char* btMaterialProperties_getTriangleMaterialsBase(void* obj);
 __attribute__ ((visibility("default"))) int btMaterialProperties_getTriangleMaterialStride(void* obj);
 __attribute__ ((visibility("default"))) int btMaterialProperties_getTriangleType(void* obj);
 __attribute__ ((visibility("default"))) void btMaterialProperties_setMaterialBase(void* obj, const unsigned char* value);
 __attribute__ ((visibility("default"))) void btMaterialProperties_setMaterialStride(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMaterialProperties_setMaterialType(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMaterialProperties_setNumMaterials(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMaterialProperties_setNumTriangles(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMaterialProperties_setTriangleMaterialsBase(void* obj, const unsigned char* value);
 __attribute__ ((visibility("default"))) void btMaterialProperties_setTriangleMaterialStride(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMaterialProperties_setTriangleType(void* obj, int value);
 __attribute__ ((visibility("default"))) void btMaterialProperties_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btTriangleIndexVertexMaterialArray_new();
 __attribute__ ((visibility("default"))) void* btTriangleIndexVertexMaterialArray_new2(int numTriangles, int* triangleIndexBase, int triangleIndexStride, int numVertices, float* vertexBase, int vertexStride, int numMaterials, unsigned char* materialBase, int materialStride, int* triangleMaterialsBase, int materialIndexStride);
 __attribute__ ((visibility("default"))) void btTriangleIndexVertexMaterialArray_addMaterialProperties(void* obj, const void* mat);
 __attribute__ ((visibility("default"))) void btTriangleIndexVertexMaterialArray_addMaterialProperties2(void* obj, const void* mat, int triangleType);
 __attribute__ ((visibility("default"))) void btTriangleIndexVertexMaterialArray_getLockedMaterialBase(void* obj, unsigned char** materialBase, int* numMaterials, int* materialType, int* materialStride, unsigned char** triangleMaterialBase, int* numTriangles, int* triangleMaterialStride, int* triangleType);
 __attribute__ ((visibility("default"))) void btTriangleIndexVertexMaterialArray_getLockedMaterialBase2(void* obj, unsigned char** materialBase, int* numMaterials, int* materialType, int* materialStride, unsigned char** triangleMaterialBase, int* numTriangles, int* triangleMaterialStride, int* triangleType, int subpart);
 __attribute__ ((visibility("default"))) void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase(void* obj, const unsigned char** materialBase, int* numMaterials, int* materialType, int* materialStride, const unsigned char** triangleMaterialBase, int* numTriangles, int* triangleMaterialStride, int* triangleType);
 __attribute__ ((visibility("default"))) void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase2(void* obj, const unsigned char** materialBase, int* numMaterials, int* materialType, int* materialStride, const unsigned char** triangleMaterialBase, int* numTriangles, int* triangleMaterialStride, int* triangleType, int subpart);


 __attribute__ ((visibility("default"))) void* btTriangleInfo_new();
 __attribute__ ((visibility("default"))) float btTriangleInfo_getEdgeV0V1Angle(void* obj);
 __attribute__ ((visibility("default"))) float btTriangleInfo_getEdgeV1V2Angle(void* obj);
 __attribute__ ((visibility("default"))) float btTriangleInfo_getEdgeV2V0Angle(void* obj);
 __attribute__ ((visibility("default"))) int btTriangleInfo_getFlags(void* obj);
 __attribute__ ((visibility("default"))) void btTriangleInfo_setEdgeV0V1Angle(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTriangleInfo_setEdgeV1V2Angle(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTriangleInfo_setEdgeV2V0Angle(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTriangleInfo_setFlags(void* obj, int value);
 __attribute__ ((visibility("default"))) void btTriangleInfo_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btTriangleInfoMap_new();
 __attribute__ ((visibility("default"))) int btTriangleInfoMap_calculateSerializeBufferSize(void* obj);
 __attribute__ ((visibility("default"))) float btTriangleInfoMap_getConvexEpsilon(void* obj);
 __attribute__ ((visibility("default"))) float btTriangleInfoMap_getEdgeDistanceThreshold(void* obj);
 __attribute__ ((visibility("default"))) float btTriangleInfoMap_getEqualVertexThreshold(void* obj);
 __attribute__ ((visibility("default"))) float btTriangleInfoMap_getMaxEdgeAngleThreshold(void* obj);
 __attribute__ ((visibility("default"))) float btTriangleInfoMap_getPlanarEpsilon(void* obj);
 __attribute__ ((visibility("default"))) float btTriangleInfoMap_getZeroAreaThreshold(void* obj);
 __attribute__ ((visibility("default"))) const char* btTriangleInfoMap_serialize(void* obj, void* dataBuffer, void* serializer);
 __attribute__ ((visibility("default"))) void btTriangleInfoMap_setConvexEpsilon(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTriangleInfoMap_setEdgeDistanceThreshold(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTriangleInfoMap_setEqualVertexThreshold(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTriangleInfoMap_setMaxEdgeAngleThreshold(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTriangleInfoMap_setPlanarEpsilon(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTriangleInfoMap_setZeroAreaThreshold(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTriangleInfoMap_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btTriangleMesh_new();
 __attribute__ ((visibility("default"))) void* btTriangleMesh_new2(bool use32bitIndices);
 __attribute__ ((visibility("default"))) void* btTriangleMesh_new3(bool use32bitIndices, bool use4componentVertices);
 __attribute__ ((visibility("default"))) void btTriangleMesh_addIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void btTriangleMesh_addTriangle(void* obj, const void* vertex0, const void* vertex1, const void* vertex2);
 __attribute__ ((visibility("default"))) void btTriangleMesh_addTriangle2(void* obj, const void* vertex0, const void* vertex1, const void* vertex2, bool removeDuplicateVertices);
 __attribute__ ((visibility("default"))) void btTriangleMesh_addTriangleIndices(void* obj, int index1, int index2, int index3);
 __attribute__ ((visibility("default"))) int btTriangleMesh_findOrAddVertex(void* obj, const void* vertex, bool removeDuplicateVertices);
 __attribute__ ((visibility("default"))) int btTriangleMesh_getNumTriangles(void* obj);
 __attribute__ ((visibility("default"))) bool btTriangleMesh_getUse32bitIndices(void* obj);
 __attribute__ ((visibility("default"))) bool btTriangleMesh_getUse4componentVertices(void* obj);
 __attribute__ ((visibility("default"))) float btTriangleMesh_getWeldingThreshold(void* obj);
 __attribute__ ((visibility("default"))) void btTriangleMesh_setWeldingThreshold(void* obj, float value);


 __attribute__ ((visibility("default"))) void btTriangleMeshShape_getLocalAabbMax(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btTriangleMeshShape_getLocalAabbMin(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btTriangleMeshShape_getMeshInterface(void* obj);
 __attribute__ ((visibility("default"))) void btTriangleMeshShape_localGetSupportingVertex(void* obj, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btTriangleMeshShape_localGetSupportingVertexWithoutMargin(void* obj, const void* vec, void* value);
 __attribute__ ((visibility("default"))) void btTriangleMeshShape_recalcLocalAabb(void* obj);


 __attribute__ ((visibility("default"))) void* btTriangleShape_new();
 __attribute__ ((visibility("default"))) void* btTriangleShape_new2(const void* p0, const void* p1, const void* p2);
 __attribute__ ((visibility("default"))) void btTriangleShape_calcNormal(void* obj, void* normal);
 __attribute__ ((visibility("default"))) void btTriangleShape_getPlaneEquation(void* obj, int i, void* planeNormal, void* planeSupport);
 __attribute__ ((visibility("default"))) const float* btTriangleShape_getVertexPtr(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btTriangleShape_getVertices1(void* obj);


 __attribute__ ((visibility("default"))) void* GIM_TRIANGLE_CONTACT_new();
 __attribute__ ((visibility("default"))) void* GIM_TRIANGLE_CONTACT_new2(const void* other);
 __attribute__ ((visibility("default"))) void GIM_TRIANGLE_CONTACT_copy_from(void* obj, const void* other);
 __attribute__ ((visibility("default"))) float GIM_TRIANGLE_CONTACT_getPenetration_depth(void* obj);
 __attribute__ ((visibility("default"))) int GIM_TRIANGLE_CONTACT_getPoint_count(void* obj);
 __attribute__ ((visibility("default"))) void* GIM_TRIANGLE_CONTACT_getPoints(void* obj);
 __attribute__ ((visibility("default"))) void GIM_TRIANGLE_CONTACT_getSeparating_normal(void* obj, void* value);
 __attribute__ ((visibility("default"))) void GIM_TRIANGLE_CONTACT_merge_points(void* obj, const void* plane, float margin, const void* points, int point_count);
 __attribute__ ((visibility("default"))) void GIM_TRIANGLE_CONTACT_setPenetration_depth(void* obj, float value);
 __attribute__ ((visibility("default"))) void GIM_TRIANGLE_CONTACT_setPoint_count(void* obj, int value);
 __attribute__ ((visibility("default"))) void GIM_TRIANGLE_CONTACT_setSeparating_normal(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void GIM_TRIANGLE_CONTACT_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btPrimitiveTriangle_new();
 __attribute__ ((visibility("default"))) void btPrimitiveTriangle_applyTransform(void* obj, const void* t);
 __attribute__ ((visibility("default"))) void btPrimitiveTriangle_buildTriPlane(void* obj);
 __attribute__ ((visibility("default"))) int btPrimitiveTriangle_clip_triangle(void* obj, void* other, void* clipped_points);
 __attribute__ ((visibility("default"))) bool btPrimitiveTriangle_find_triangle_collision_clip_method(void* obj, void* other, void* contacts);
 __attribute__ ((visibility("default"))) void btPrimitiveTriangle_get_edge_plane(void* obj, int edge_index, void* plane);
 __attribute__ ((visibility("default"))) float btPrimitiveTriangle_getDummy(void* obj);
 __attribute__ ((visibility("default"))) float btPrimitiveTriangle_getMargin(void* obj);
 __attribute__ ((visibility("default"))) void btPrimitiveTriangle_getPlane(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btPrimitiveTriangle_getVertices(void* obj);
 __attribute__ ((visibility("default"))) bool btPrimitiveTriangle_overlap_test_conservative(void* obj, const void* other);
 __attribute__ ((visibility("default"))) void btPrimitiveTriangle_setDummy(void* obj, float value);
 __attribute__ ((visibility("default"))) void btPrimitiveTriangle_setMargin(void* obj, float value);
 __attribute__ ((visibility("default"))) void btPrimitiveTriangle_setPlane(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btPrimitiveTriangle_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btTriangleShapeEx_new();
 __attribute__ ((visibility("default"))) void* btTriangleShapeEx_new2(const void* p0, const void* p1, const void* p2);
 __attribute__ ((visibility("default"))) void* btTriangleShapeEx_new3(const void* other);
 __attribute__ ((visibility("default"))) void btTriangleShapeEx_applyTransform(void* obj, const void* t);
 __attribute__ ((visibility("default"))) void btTriangleShapeEx_buildTriPlane(void* obj, void* plane);
 __attribute__ ((visibility("default"))) bool btTriangleShapeEx_overlap_test_conservative(void* obj, const void* other);


 __attribute__ ((visibility("default"))) void* btJointFeedback_new();
 __attribute__ ((visibility("default"))) void btJointFeedback_getAppliedForceBodyA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btJointFeedback_getAppliedForceBodyB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btJointFeedback_getAppliedTorqueBodyA(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btJointFeedback_getAppliedTorqueBodyB(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btJointFeedback_setAppliedForceBodyA(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btJointFeedback_setAppliedForceBodyB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btJointFeedback_setAppliedTorqueBodyA(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btJointFeedback_setAppliedTorqueBodyB(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btJointFeedback_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btTypedConstraint_btConstraintInfo1_new();
 __attribute__ ((visibility("default"))) int btTypedConstraint_btConstraintInfo1_getNub(void* obj);
 __attribute__ ((visibility("default"))) int btTypedConstraint_btConstraintInfo1_getNumConstraintRows(void* obj);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo1_setNub(void* obj, int value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo1_setNumConstraintRows(void* obj, int value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo1_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btTypedConstraint_btConstraintInfo2_new();
 __attribute__ ((visibility("default"))) float* btTypedConstraint_btConstraintInfo2_getCfm(void* obj);
 __attribute__ ((visibility("default"))) float* btTypedConstraint_btConstraintInfo2_getConstraintError(void* obj);
 __attribute__ ((visibility("default"))) float btTypedConstraint_btConstraintInfo2_getDamping(void* obj);
 __attribute__ ((visibility("default"))) float btTypedConstraint_btConstraintInfo2_getErp(void* obj);
 __attribute__ ((visibility("default"))) float btTypedConstraint_btConstraintInfo2_getFps(void* obj);
 __attribute__ ((visibility("default"))) float* btTypedConstraint_btConstraintInfo2_getJ1angularAxis(void* obj);
 __attribute__ ((visibility("default"))) float* btTypedConstraint_btConstraintInfo2_getJ1linearAxis(void* obj);
 __attribute__ ((visibility("default"))) float* btTypedConstraint_btConstraintInfo2_getJ2angularAxis(void* obj);
 __attribute__ ((visibility("default"))) float* btTypedConstraint_btConstraintInfo2_getJ2linearAxis(void* obj);
 __attribute__ ((visibility("default"))) float* btTypedConstraint_btConstraintInfo2_getLowerLimit(void* obj);
 __attribute__ ((visibility("default"))) int btTypedConstraint_btConstraintInfo2_getNumIterations(void* obj);
 __attribute__ ((visibility("default"))) int btTypedConstraint_btConstraintInfo2_getRowskip(void* obj);
 __attribute__ ((visibility("default"))) float* btTypedConstraint_btConstraintInfo2_getUpperLimit(void* obj);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setCfm(void* obj, float* value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setConstraintError(void* obj, float* value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setDamping(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setErp(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setFps(void* obj, float value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setJ1angularAxis(void* obj, float* value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setJ1linearAxis(void* obj, float* value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setJ2angularAxis(void* obj, float* value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setJ2linearAxis(void* obj, float* value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setLowerLimit(void* obj, float* value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setNumIterations(void* obj, int value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setRowskip(void* obj, int value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_setUpperLimit(void* obj, float* value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_btConstraintInfo2_delete(void* obj);
 __attribute__ ((visibility("default"))) void btTypedConstraint_buildJacobian(void* obj);
 __attribute__ ((visibility("default"))) int btTypedConstraint_calculateSerializeBufferSize(void* obj);
 __attribute__ ((visibility("default"))) void btTypedConstraint_enableFeedback(void* obj, bool needsFeedback);
 __attribute__ ((visibility("default"))) float btTypedConstraint_getAppliedImpulse(void* obj);
 __attribute__ ((visibility("default"))) float btTypedConstraint_getBreakingImpulseThreshold(void* obj);
 __attribute__ ((visibility("default"))) int btTypedConstraint_getConstraintType(void* obj);
 __attribute__ ((visibility("default"))) float btTypedConstraint_getDbgDrawSize(void* obj);
 __attribute__ ((visibility("default"))) void* btTypedConstraint_getFixedBody();
 __attribute__ ((visibility("default"))) void btTypedConstraint_getInfo1(void* obj, void* info);
 __attribute__ ((visibility("default"))) void btTypedConstraint_getInfo2(void* obj, void* info);
 __attribute__ ((visibility("default"))) void* btTypedConstraint_getJointFeedback(void* obj);
 __attribute__ ((visibility("default"))) int btTypedConstraint_getOverrideNumSolverIterations(void* obj);
 __attribute__ ((visibility("default"))) float btTypedConstraint_getParam(void* obj, int num);
 __attribute__ ((visibility("default"))) float btTypedConstraint_getParam2(void* obj, int num, int axis);
 __attribute__ ((visibility("default"))) void* btTypedConstraint_getRigidBodyA(void* obj);
 __attribute__ ((visibility("default"))) void* btTypedConstraint_getRigidBodyB(void* obj);
 __attribute__ ((visibility("default"))) int btTypedConstraint_getUid(void* obj);
 __attribute__ ((visibility("default"))) int btTypedConstraint_getUserConstraintId(void* obj);
 __attribute__ ((visibility("default"))) void* btTypedConstraint_getUserConstraintPtr(void* obj);
 __attribute__ ((visibility("default"))) int btTypedConstraint_getUserConstraintType(void* obj);
 __attribute__ ((visibility("default"))) float btTypedConstraint_internalGetAppliedImpulse(void* obj);
 __attribute__ ((visibility("default"))) void btTypedConstraint_internalSetAppliedImpulse(void* obj, float appliedImpulse);
 __attribute__ ((visibility("default"))) bool btTypedConstraint_isEnabled(void* obj);
 __attribute__ ((visibility("default"))) bool btTypedConstraint_needsFeedback(void* obj);
 __attribute__ ((visibility("default"))) const char* btTypedConstraint_serialize(void* obj, void* dataBuffer, void* serializer);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setBreakingImpulseThreshold(void* obj, float threshold);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setDbgDrawSize(void* obj, float dbgDrawSize);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setEnabled(void* obj, bool enabled);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setJointFeedback(void* obj, void* jointFeedback);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setOverrideNumSolverIterations(void* obj, int overideNumIterations);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setParam(void* obj, int num, float value);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setParam2(void* obj, int num, float value, int axis);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setupSolverConstraint(void* obj, void* ca, int solverBodyA, int solverBodyB, float timeStep);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setUserConstraintId(void* obj, int uid);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setUserConstraintPtr(void* obj, void* ptr);
 __attribute__ ((visibility("default"))) void btTypedConstraint_setUserConstraintType(void* obj, int userConstraintType);
 __attribute__ ((visibility("default"))) void btTypedConstraint_solveConstraintObsolete(void* obj, void* __unnamed0, void* __unnamed1, float __unnamed2);
 __attribute__ ((visibility("default"))) void btTypedConstraint_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btAngularLimit_new();
 __attribute__ ((visibility("default"))) void btAngularLimit_fit(void* obj, float* angle);
 __attribute__ ((visibility("default"))) float btAngularLimit_getBiasFactor(void* obj);
 __attribute__ ((visibility("default"))) float btAngularLimit_getCorrection(void* obj);
 __attribute__ ((visibility("default"))) float btAngularLimit_getError(void* obj);
 __attribute__ ((visibility("default"))) float btAngularLimit_getHalfRange(void* obj);
 __attribute__ ((visibility("default"))) float btAngularLimit_getHigh(void* obj);
 __attribute__ ((visibility("default"))) float btAngularLimit_getLow(void* obj);
 __attribute__ ((visibility("default"))) float btAngularLimit_getRelaxationFactor(void* obj);
 __attribute__ ((visibility("default"))) float btAngularLimit_getSign(void* obj);
 __attribute__ ((visibility("default"))) float btAngularLimit_getSoftness(void* obj);
 __attribute__ ((visibility("default"))) bool btAngularLimit_isLimit(void* obj);
 __attribute__ ((visibility("default"))) void btAngularLimit_set(void* obj, float low, float high);
 __attribute__ ((visibility("default"))) void btAngularLimit_set2(void* obj, float low, float high, float _softness);
 __attribute__ ((visibility("default"))) void btAngularLimit_set3(void* obj, float low, float high, float _softness, float _biasFactor);
 __attribute__ ((visibility("default"))) void btAngularLimit_set4(void* obj, float low, float high, float _softness, float _biasFactor, float _relaxationFactor);
 __attribute__ ((visibility("default"))) void btAngularLimit_test(void* obj, float angle);
 __attribute__ ((visibility("default"))) void btAngularLimit_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btUniformScalingShape_new(void* convexChildShape, float uniformScalingFactor);
 __attribute__ ((visibility("default"))) void* btUniformScalingShape_getChildShape(void* obj);
 __attribute__ ((visibility("default"))) float btUniformScalingShape_getUniformScalingFactor(void* obj);


 __attribute__ ((visibility("default"))) void* btElement_new();
 __attribute__ ((visibility("default"))) int btElement_getId(void* obj);
 __attribute__ ((visibility("default"))) int btElement_getSz(void* obj);
 __attribute__ ((visibility("default"))) void btElement_setId(void* obj, int value);
 __attribute__ ((visibility("default"))) void btElement_setSz(void* obj, int value);
 __attribute__ ((visibility("default"))) void btElement_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btUnionFind_new();
 __attribute__ ((visibility("default"))) void btUnionFind_allocate(void* obj, int N);
 __attribute__ ((visibility("default"))) int btUnionFind_find(void* obj, int p, int q);
 __attribute__ ((visibility("default"))) int btUnionFind_find2(void* obj, int x);
 __attribute__ ((visibility("default"))) void btUnionFind_Free(void* obj);
 __attribute__ ((visibility("default"))) void* btUnionFind_getElement(void* obj, int index);
 __attribute__ ((visibility("default"))) int btUnionFind_getNumElements(void* obj);
 __attribute__ ((visibility("default"))) bool btUnionFind_isRoot(void* obj, int x);
 __attribute__ ((visibility("default"))) void btUnionFind_reset(void* obj, int N);
 __attribute__ ((visibility("default"))) void btUnionFind_sortIslands(void* obj);
 __attribute__ ((visibility("default"))) void btUnionFind_unite(void* obj, int p, int q);
 __attribute__ ((visibility("default"))) void btUnionFind_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btUniversalConstraint_new(void* rbA, void* rbB, const void* anchor, const void* axis1, const void* axis2);
 __attribute__ ((visibility("default"))) void btUniversalConstraint_getAnchor(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btUniversalConstraint_getAnchor2(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btUniversalConstraint_getAngle1(void* obj);
 __attribute__ ((visibility("default"))) float btUniversalConstraint_getAngle2(void* obj);
 __attribute__ ((visibility("default"))) void btUniversalConstraint_getAxis1(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btUniversalConstraint_getAxis2(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btUniversalConstraint_setLowerLimit(void* obj, float ang1min, float ang2min);
 __attribute__ ((visibility("default"))) void btUniversalConstraint_setUpperLimit(void* obj, float ang1max, float ang2max);


 __attribute__ ((visibility("default"))) void* btVehicleRaycaster_btVehicleRaycasterResult_new();
 __attribute__ ((visibility("default"))) float btVehicleRaycaster_btVehicleRaycasterResult_getDistFraction(void* obj);
 __attribute__ ((visibility("default"))) void btVehicleRaycaster_btVehicleRaycasterResult_getHitNormalInWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btVehicleRaycaster_btVehicleRaycasterResult_getHitPointInWorld(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btVehicleRaycaster_btVehicleRaycasterResult_setDistFraction(void* obj, float value);
 __attribute__ ((visibility("default"))) void btVehicleRaycaster_btVehicleRaycasterResult_setHitNormalInWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btVehicleRaycaster_btVehicleRaycasterResult_setHitPointInWorld(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btVehicleRaycaster_btVehicleRaycasterResult_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btVehicleRaycaster_castRay(void* obj, const void* from, const void* to, void* result);
 __attribute__ ((visibility("default"))) void btVehicleRaycaster_delete(void* obj);


 __attribute__ ((visibility("default"))) bool btUsageBitfield_getUnused1(void* obj);
 __attribute__ ((visibility("default"))) bool btUsageBitfield_getUnused2(void* obj);
 __attribute__ ((visibility("default"))) bool btUsageBitfield_getUnused3(void* obj);
 __attribute__ ((visibility("default"))) bool btUsageBitfield_getUnused4(void* obj);
 __attribute__ ((visibility("default"))) bool btUsageBitfield_getUsedVertexA(void* obj);
 __attribute__ ((visibility("default"))) bool btUsageBitfield_getUsedVertexB(void* obj);
 __attribute__ ((visibility("default"))) bool btUsageBitfield_getUsedVertexC(void* obj);
 __attribute__ ((visibility("default"))) bool btUsageBitfield_getUsedVertexD(void* obj);
 __attribute__ ((visibility("default"))) void btUsageBitfield_reset(void* obj);
 __attribute__ ((visibility("default"))) void btUsageBitfield_setUnused1(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btUsageBitfield_setUnused2(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btUsageBitfield_setUnused3(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btUsageBitfield_setUnused4(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btUsageBitfield_setUsedVertexA(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btUsageBitfield_setUsedVertexB(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btUsageBitfield_setUsedVertexC(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btUsageBitfield_setUsedVertexD(void* obj, bool value);
 __attribute__ ((visibility("default"))) void* btSubSimplexClosestResult_new();
 __attribute__ ((visibility("default"))) float* btSubSimplexClosestResult_getBarycentricCoords(void* obj);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_getClosestPointOnSimplex(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btSubSimplexClosestResult_getDegenerate(void* obj);
 __attribute__ ((visibility("default"))) void* btSubSimplexClosestResult_getUsedVertices(void* obj);
 __attribute__ ((visibility("default"))) bool btSubSimplexClosestResult_isValid(void* obj);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_reset(void* obj);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_setBarycentricCoordinates(void* obj);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_setBarycentricCoordinates2(void* obj, float a);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_setBarycentricCoordinates3(void* obj, float a, float b);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_setBarycentricCoordinates4(void* obj, float a, float b, float c);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_setBarycentricCoordinates5(void* obj, float a, float b, float c, float d);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_setClosestPointOnSimplex(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_setDegenerate(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_setUsedVertices(void* obj, const void value);
 __attribute__ ((visibility("default"))) void btSubSimplexClosestResult_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btVoronoiSimplexSolver_new();
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_addVertex(void* obj, const void* w, const void* p, const void* q);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_backup_closest(void* obj, void* v);
 __attribute__ ((visibility("default"))) bool btVoronoiSimplexSolver_closest(void* obj, void* v);
 __attribute__ ((visibility("default"))) bool btVoronoiSimplexSolver_closestPtPointTetrahedron(void* obj, const void* p, const void* a, const void* b, const void* c, const void* d, void* finalResult);
 __attribute__ ((visibility("default"))) bool btVoronoiSimplexSolver_closestPtPointTriangle(void* obj, const void* p, const void* a, const void* b, const void* c, void* result);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_compute_points(void* obj, void* p1, void* p2);
 __attribute__ ((visibility("default"))) bool btVoronoiSimplexSolver_emptySimplex(void* obj);
 __attribute__ ((visibility("default"))) bool btVoronoiSimplexSolver_fullSimplex(void* obj);
 __attribute__ ((visibility("default"))) void* btVoronoiSimplexSolver_getCachedBC(void* obj);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_getCachedP1(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_getCachedP2(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_getCachedV(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btVoronoiSimplexSolver_getCachedValidClosest(void* obj);
 __attribute__ ((visibility("default"))) float btVoronoiSimplexSolver_getEqualVertexThreshold(void* obj);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_getLastW(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btVoronoiSimplexSolver_getNeedsUpdate(void* obj);
 __attribute__ ((visibility("default"))) int btVoronoiSimplexSolver_getNumVertices(void* obj);
 __attribute__ ((visibility("default"))) int btVoronoiSimplexSolver_getSimplex(void* obj, void* pBuf, void* qBuf, void* yBuf);
 __attribute__ ((visibility("default"))) void* btVoronoiSimplexSolver_getSimplexPointsP(void* obj);
 __attribute__ ((visibility("default"))) void* btVoronoiSimplexSolver_getSimplexPointsQ(void* obj);
 __attribute__ ((visibility("default"))) void* btVoronoiSimplexSolver_getSimplexVectorW(void* obj);
 __attribute__ ((visibility("default"))) bool btVoronoiSimplexSolver_inSimplex(void* obj, const void* w);
 __attribute__ ((visibility("default"))) float btVoronoiSimplexSolver_maxVertex(void* obj);
 __attribute__ ((visibility("default"))) int btVoronoiSimplexSolver_numVertices(void* obj);
 __attribute__ ((visibility("default"))) int btVoronoiSimplexSolver_pointOutsideOfPlane(void* obj, const void* p, const void* a, const void* b, const void* c, const void* d);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_reduceVertices(void* obj, const void* usedVerts);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_removeVertex(void* obj, int index);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_reset(void* obj);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_setCachedBC(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_setCachedP1(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_setCachedP2(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_setCachedV(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_setCachedValidClosest(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_setEqualVertexThreshold(void* obj, float threshold);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_setLastW(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_setNeedsUpdate(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_setNumVertices(void* obj, int value);
 __attribute__ ((visibility("default"))) bool btVoronoiSimplexSolver_updateClosestVectorAndPoints(void* obj);
 __attribute__ ((visibility("default"))) void btVoronoiSimplexSolver_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btWheelInfoConstructionInfo_new();
 __attribute__ ((visibility("default"))) bool btWheelInfoConstructionInfo_getBIsFrontWheel(void* obj);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_getChassisConnectionCS(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btWheelInfoConstructionInfo_getFrictionSlip(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfoConstructionInfo_getMaxSuspensionForce(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfoConstructionInfo_getMaxSuspensionTravelCm(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfoConstructionInfo_getSuspensionRestLength(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfoConstructionInfo_getSuspensionStiffness(void* obj);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_getWheelAxleCS(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_getWheelDirectionCS(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btWheelInfoConstructionInfo_getWheelRadius(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfoConstructionInfo_getWheelsDampingCompression(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfoConstructionInfo_getWheelsDampingRelaxation(void* obj);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setBIsFrontWheel(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setChassisConnectionCS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setFrictionSlip(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setMaxSuspensionForce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setMaxSuspensionTravelCm(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setSuspensionRestLength(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setSuspensionStiffness(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setWheelAxleCS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setWheelDirectionCS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setWheelRadius(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setWheelsDampingCompression(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_setWheelsDampingRelaxation(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfoConstructionInfo_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btWheelInfo_RaycastInfo_new();
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_getContactNormalWS(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_getContactPointWS(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btWheelInfo_RaycastInfo_getGroundObject(void* obj);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_getHardPointWS(void* obj, void* value);
 __attribute__ ((visibility("default"))) bool btWheelInfo_RaycastInfo_getIsInContact(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_RaycastInfo_getSuspensionLength(void* obj);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_getWheelAxleWS(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_getWheelDirectionWS(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_setContactNormalWS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_setContactPointWS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_setGroundObject(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_setHardPointWS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_setIsInContact(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_setSuspensionLength(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_setWheelAxleWS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_setWheelDirectionWS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_RaycastInfo_delete(void* obj);
 __attribute__ ((visibility("default"))) void* btWheelInfo_new(void* ci);
 __attribute__ ((visibility("default"))) bool btWheelInfo_getBIsFrontWheel(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getBrake(void* obj);
 __attribute__ ((visibility("default"))) void btWheelInfo_getChassisConnectionPointCS(void* obj, void* value);
 __attribute__ ((visibility("default"))) void* btWheelInfo_getClientInfo(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getClippedInvContactDotSuspension(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getDeltaRotation(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getEngineForce(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getFrictionSlip(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getMaxSuspensionForce(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getMaxSuspensionTravelCm(void* obj);
 __attribute__ ((visibility("default"))) void* btWheelInfo_getRaycastInfo(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getRollInfluence(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getRotation(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getSkidInfo(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getSteering(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getSuspensionRelativeVelocity(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getSuspensionRestLength(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getSuspensionRestLength1(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getSuspensionStiffness(void* obj);
 __attribute__ ((visibility("default"))) void btWheelInfo_getWheelAxleCS(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_getWheelDirectionCS(void* obj, void* value);
 __attribute__ ((visibility("default"))) float btWheelInfo_getWheelsDampingCompression(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getWheelsDampingRelaxation(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getWheelsRadius(void* obj);
 __attribute__ ((visibility("default"))) float btWheelInfo_getWheelsSuspensionForce(void* obj);
 __attribute__ ((visibility("default"))) void btWheelInfo_getWorldTransform(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setBIsFrontWheel(void* obj, bool value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setBrake(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setChassisConnectionPointCS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setClientInfo(void* obj, void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setClippedInvContactDotSuspension(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setDeltaRotation(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setEngineForce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setFrictionSlip(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setMaxSuspensionForce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setMaxSuspensionTravelCm(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setRollInfluence(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setRotation(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setSkidInfo(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setSteering(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setSuspensionRelativeVelocity(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setSuspensionRestLength1(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setSuspensionStiffness(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setWheelAxleCS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setWheelDirectionCS(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setWheelsDampingCompression(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setWheelsDampingRelaxation(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setWheelsRadius(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setWheelsSuspensionForce(void* obj, float value);
 __attribute__ ((visibility("default"))) void btWheelInfo_setWorldTransform(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btWheelInfo_updateWheel(void* obj, const void* chassis, void* raycastInfo);
 __attribute__ ((visibility("default"))) void btWheelInfo_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btWorldImporter_new(void* world);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createBoxShape(void* obj, const void* halfExtents);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createBvhTriangleMeshShape(void* obj, void* trimesh, void* bvh);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createCapsuleShapeZ(void* obj, float radius, float height);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createCapsuleShapeX(void* obj, float radius, float height);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createCapsuleShapeY(void* obj, float radius, float height);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createCollisionObject(void* obj, const void* startTransform, void* shape, const char* bodyName);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createCompoundShape(void* obj);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createConeShapeZ(void* obj, float radius, float height);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createConeShapeX(void* obj, float radius, float height);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createConeShapeY(void* obj, float radius, float height);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createConeTwistConstraint(void* obj, void* rbA, void* rbB, const void* rbAFrame, const void* rbBFrame);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createConeTwistConstraint2(void* obj, void* rbA, const void* rbAFrame);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createConvexHullShape(void* obj);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createConvexTriangleMeshShape(void* obj, void* trimesh);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createCylinderShapeZ(void* obj, float radius, float height);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createCylinderShapeX(void* obj, float radius, float height);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createCylinderShapeY(void* obj, float radius, float height);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createGearConstraint(void* obj, void* rbA, void* rbB, const void* axisInA, const void* axisInB, float ratio);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createGeneric6DofConstraint(void* obj, void* rbA, void* rbB, const void* frameInA, const void* frameInB, bool useLinearReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createGeneric6DofConstraint2(void* obj, void* rbB, const void* frameInB, bool useLinearReferenceFrameB);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createGeneric6DofSpring2Constraint(void* obj, void* rbA, void* rbB, const void* frameInA, const void* frameInB, int rotateOrder);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createGeneric6DofSpringConstraint(void* obj, void* rbA, void* rbB, const void* frameInA, const void* frameInB, bool useLinearReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createGimpactShape(void* obj, void* trimesh);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createHingeConstraint(void* obj, void* rbA, void* rbB, const void* rbAFrame, const void* rbBFrame);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createHingeConstraint2(void* obj, void* rbA, void* rbB, const void* rbAFrame, const void* rbBFrame, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createHingeConstraint3(void* obj, void* rbA, const void* rbAFrame);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createHingeConstraint4(void* obj, void* rbA, const void* rbAFrame, bool useReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createMeshInterface(void* obj, void* meshData);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createMultiSphereShape(void* obj, const void* positions, const float* radi, int numSpheres);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createOptimizedBvh(void* obj);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createPlaneShape(void* obj, const void* planeNormal, float planeConstant);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createPoint2PointConstraint(void* obj, void* rbA, const void* pivotInA);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createPoint2PointConstraint2(void* obj, void* rbA, void* rbB, const void* pivotInA, const void* pivotInB);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createRigidBody(void* obj, bool isDynamic, float mass, const void* startTransform, void* shape, const char* bodyName);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createScaledTrangleMeshShape(void* obj, void* meshShape, const void* localScalingbtBvhTriangleMeshShape);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createSliderConstraint(void* obj, void* rbA, void* rbB, const void* frameInA, const void* frameInB, bool useLinearReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createSliderConstraint2(void* obj, void* rbB, const void* frameInB, bool useLinearReferenceFrameA);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createSphereShape(void* obj, float radius);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createStridingMeshInterfaceData(void* obj, void* interfaceData);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createTriangleInfoMap(void* obj);
 __attribute__ ((visibility("default"))) void* btWorldImporter_createTriangleMeshContainer(void* obj);
 __attribute__ ((visibility("default"))) void btWorldImporter_deleteAllData(void* obj);
 __attribute__ ((visibility("default"))) void* btWorldImporter_getBvhByIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btWorldImporter_getCollisionShapeByIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btWorldImporter_getCollisionShapeByName(void* obj, const char* name);
 __attribute__ ((visibility("default"))) void* btWorldImporter_getConstraintByIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btWorldImporter_getConstraintByName(void* obj, const char* name);
 __attribute__ ((visibility("default"))) const char* btWorldImporter_getNameForPointer(void* obj, const void* ptr);
 __attribute__ ((visibility("default"))) int btWorldImporter_getNumBvhs(void* obj);
 __attribute__ ((visibility("default"))) int btWorldImporter_getNumCollisionShapes(void* obj);
 __attribute__ ((visibility("default"))) int btWorldImporter_getNumConstraints(void* obj);
 __attribute__ ((visibility("default"))) int btWorldImporter_getNumRigidBodies(void* obj);
 __attribute__ ((visibility("default"))) int btWorldImporter_getNumTriangleInfoMaps(void* obj);
 __attribute__ ((visibility("default"))) void* btWorldImporter_getRigidBodyByIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) void* btWorldImporter_getRigidBodyByName(void* obj, const char* name);
 __attribute__ ((visibility("default"))) void* btWorldImporter_getTriangleInfoMapByIndex(void* obj, int index);
 __attribute__ ((visibility("default"))) int btWorldImporter_getVerboseMode(void* obj);
 __attribute__ ((visibility("default"))) void btWorldImporter_setDynamicsWorldInfo(void* obj, const void* gravity, const void* solverInfo);
 __attribute__ ((visibility("default"))) void btWorldImporter_setVerboseMode(void* obj, int verboseMode);
 __attribute__ ((visibility("default"))) void btWorldImporter_delete(void* obj);


 __attribute__ ((visibility("default"))) void* btCompoundShapeChild_array_at(void* a, int n);
 __attribute__ ((visibility("default"))) void* btSoftBodyNodePtrArray_at(void* obj, int n);
 __attribute__ ((visibility("default"))) void btSoftBodyNodePtrArray_set(void* obj, void* value, int index);
 __attribute__ ((visibility("default"))) void btVector3_array_at(const void* a, int n, void* value);
 __attribute__ ((visibility("default"))) void btVector3_array_set(void* obj, int n, const void* value);
 __attribute__ ((visibility("default"))) void* btAlignedObjectArray_btVector3_new();
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btVector3_at(void* obj, int n, void* value);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btVector3_push_back(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btVector3_push_back2(void* obj, const void* value);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btVector3_set(void* obj, int n, const void* value);
 __attribute__ ((visibility("default"))) int btAlignedObjectArray_btVector3_size(void* obj);
 __attribute__ ((visibility("default"))) void btAlignedObjectArray_btVector3_delete(void* obj);


 __attribute__ ((visibility("default"))) void* HACD_HACD_new();
 __attribute__ ((visibility("default"))) bool HACD_HACD_Compute(void* obj);
 __attribute__ ((visibility("default"))) bool HACD_HACD_Compute2(void* obj, bool fullCH);
 __attribute__ ((visibility("default"))) bool HACD_HACD_Compute3(void* obj, bool fullCH, bool exportDistPoints);
 __attribute__ ((visibility("default"))) void HACD_HACD_DenormalizeData(void* obj);
 __attribute__ ((visibility("default"))) bool HACD_HACD_GetAddExtraDistPoints(void* obj);
 __attribute__ ((visibility("default"))) bool HACD_HACD_GetAddFacesPoints(void* obj);
 __attribute__ ((visibility("default"))) bool HACD_HACD_GetAddNeighboursDistPoints(void* obj);
 __attribute__ ((visibility("default"))) const HACD_CallBackFunction HACD_HACD_GetCallBack(void* obj);
 __attribute__ ((visibility("default"))) bool HACD_HACD_GetCH(void* obj, int numCH, void* points, long* triangles);
 __attribute__ ((visibility("default"))) double HACD_HACD_GetCompacityWeight(void* obj);
 __attribute__ ((visibility("default"))) double HACD_HACD_GetConcavity(void* obj);
 __attribute__ ((visibility("default"))) double HACD_HACD_GetConnectDist(void* obj);
 __attribute__ ((visibility("default"))) size_t HACD_HACD_GetNClusters(void* obj);
 __attribute__ ((visibility("default"))) size_t HACD_HACD_GetNPoints(void* obj);
 __attribute__ ((visibility("default"))) size_t HACD_HACD_GetNPointsCH(void* obj, int numCH);
 __attribute__ ((visibility("default"))) size_t HACD_HACD_GetNTriangles(void* obj);
 __attribute__ ((visibility("default"))) size_t HACD_HACD_GetNTrianglesCH(void* obj, int numCH);
 __attribute__ ((visibility("default"))) size_t HACD_HACD_GetNVerticesPerCH(void* obj);
 __attribute__ ((visibility("default"))) const long* HACD_HACD_GetPartition(void* obj);
 __attribute__ ((visibility("default"))) const void* HACD_HACD_GetPoints(void* obj);
 __attribute__ ((visibility("default"))) double HACD_HACD_GetScaleFactor(void* obj);
 __attribute__ ((visibility("default"))) const long* HACD_HACD_GetTriangles(void* obj);
 __attribute__ ((visibility("default"))) double HACD_HACD_GetVolumeWeight(void* obj);
 __attribute__ ((visibility("default"))) void HACD_HACD_NormalizeData(void* obj);
 __attribute__ ((visibility("default"))) bool HACD_HACD_Save(void* obj, const char* fileName, bool uniColor);
 __attribute__ ((visibility("default"))) bool HACD_HACD_Save2(void* obj, const char* fileName, bool uniColor, long numCluster);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetAddExtraDistPoints(void* obj, bool addExtraDistPoints);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetAddFacesPoints(void* obj, bool addFacesPoints);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetAddNeighboursDistPoints(void* obj, bool addNeighboursDistPoints);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetCallBack(void* obj, HACD_CallBackFunction callBack);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetCompacityWeight(void* obj, double alpha);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetConcavity(void* obj, double concavity);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetConnectDist(void* obj, double ccConnectDist);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetNClusters(void* obj, int nClusters);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetNPoints(void* obj, int nPoints);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetNTriangles(void* obj, int nTriangles);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetNVerticesPerCH(void* obj, int nVerticesPerCH);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetPoints(void* obj, void* points);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetScaleFactor(void* obj, double scale);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetTriangles(void* obj, long* triangles);
 __attribute__ ((visibility("default"))) void HACD_HACD_SetVolumeWeight(void* obj, double beta);
 __attribute__ ((visibility("default"))) void HACD_HACD_delete(void* obj);

